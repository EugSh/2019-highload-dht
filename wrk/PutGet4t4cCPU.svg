<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1141"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1141"> </text>
<g id="frames">
<g>
<title>all (6,390 samples, 100.00%)</title><rect x="10.0" y="1107.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1118.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=3201] (374 samples, 5.85%)</title><rect x="10.0" y="1091.0" width="69.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1102.0">[NIO Se..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="10.0" y="1075.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="10.2" y="1059.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.2" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="10.2" y="1043.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.2" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="10.4" y="1027.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.4" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="10.9" y="1011.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.9" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="11.1" y="995.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="14.1" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="11.1" y="979.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="14.1" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="11.1" y="963.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="14.1" y="974.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.03%)</title><rect x="11.5" y="1075.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="14.5" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="11.5" y="1059.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="14.5" y="1070.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.06%)</title><rect x="11.8" y="1075.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="14.8" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.05%)</title><rect x="12.6" y="1075.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="15.6" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="12.8" y="1059.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="15.8" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="12.8" y="1043.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="15.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (356 samples, 5.57%)</title><rect x="13.3" y="1075.0" width="65.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.3" y="1086.0">one/nio..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="14.1" y="1059.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="17.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.05%)</title><rect x="14.6" y="1059.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.05%)</title><rect x="14.6" y="1043.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (99 samples, 1.55%)</title><rect x="15.2" y="1059.0" width="18.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.03%)</title><rect x="15.7" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (94 samples, 1.47%)</title><rect x="16.1" y="1043.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.35%)</title><rect x="17.0" y="1027.0" width="15.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="20.0" y="1038.0"></text>
</g>
<g>
<title>epoll_wait (85 samples, 1.33%)</title><rect x="17.2" y="1011.0" width="15.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="20.2" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (71 samples, 1.11%)</title><rect x="19.8" y="995.0" width="13.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="22.8" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (70 samples, 1.10%)</title><rect x="19.8" y="979.0" width="12.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="22.8" y="990.0"></text>
</g>
<g>
<title>sys_epoll_wait (63 samples, 0.99%)</title><rect x="21.1" y="963.0" width="11.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="24.1" y="974.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.05%)</title><rect x="21.4" y="947.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="24.4" y="958.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="21.4" y="931.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="24.4" y="942.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="21.4" y="915.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="24.4" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="22.0" y="947.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="25.0" y="958.0"></text>
</g>
<g>
<title>ep_poll (52 samples, 0.81%)</title><rect x="22.4" y="947.0" width="9.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="25.4" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="23.1" y="931.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="26.1" y="942.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (32 samples, 0.50%)</title><rect x="23.7" y="931.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="26.7" y="942.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="23.8" y="915.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="26.8" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="24.2" y="915.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="27.2" y="926.0"></text>
</g>
<g>
<title>ep_send_events_proc (21 samples, 0.33%)</title><rect x="25.0" y="915.0" width="3.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="28.0" y="926.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (15 samples, 0.23%)</title><rect x="25.7" y="899.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="28.7" y="910.0"></text>
</g>
<g>
<title>sock_poll (13 samples, 0.20%)</title><rect x="26.1" y="883.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="29.1" y="894.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.05%)</title><rect x="27.4" y="867.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="30.4" y="878.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="27.9" y="867.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="30.9" y="878.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="28.5" y="899.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="31.5" y="910.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.05%)</title><rect x="28.8" y="915.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="31.8" y="926.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.03%)</title><rect x="29.6" y="931.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="32.6" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (10 samples, 0.16%)</title><rect x="29.9" y="931.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="32.9" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (10 samples, 0.16%)</title><rect x="29.9" y="915.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="32.9" y="926.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.13%)</title><rect x="30.3" y="899.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="33.3" y="910.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.06%)</title><rect x="31.1" y="883.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="34.1" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="31.4" y="867.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="34.4" y="878.0"></text>
</g>
<g>
<title>fput (3 samples, 0.05%)</title><rect x="32.2" y="947.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.2" y="958.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="32.9" y="1027.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="35.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (247 samples, 3.87%)</title><rect x="33.5" y="1059.0" width="45.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="36.5" y="1070.0">one/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="34.2" y="1043.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="37.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (239 samples, 3.74%)</title><rect x="34.7" y="1043.0" width="44.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.7" y="1054.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (153 samples, 2.39%)</title><rect x="34.9" y="1027.0" width="28.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.9" y="1038.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (114 samples, 1.78%)</title><rect x="35.9" y="1011.0" width="21.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.9" y="1022.0">o..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="35.9" y="995.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="38.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (112 samples, 1.75%)</title><rect x="36.2" y="995.0" width="20.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.2" y="1006.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (102 samples, 1.60%)</title><rect x="36.2" y="979.0" width="18.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.20%)</title><rect x="36.2" y="963.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="37.0" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.0" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="37.0" y="931.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.0" y="942.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.08%)</title><rect x="37.7" y="947.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.7" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="38.1" y="931.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="38.1" y="915.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.1" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.05%)</title><rect x="38.1" y="899.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.entity (89 samples, 1.39%)</title><rect x="38.6" y="963.0" width="16.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.6" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.executeAsync (85 samples, 1.33%)</title><rect x="39.4" y="947.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (85 samples, 1.33%)</title><rect x="39.4" y="931.0" width="15.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (85 samples, 1.33%)</title><rect x="39.4" y="915.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (76 samples, 1.19%)</title><rect x="39.4" y="899.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (8 samples, 0.13%)</title><rect x="39.4" y="883.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (8 samples, 0.13%)</title><rect x="39.4" y="867.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (8 samples, 0.13%)</title><rect x="39.4" y="851.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (67 samples, 1.05%)</title><rect x="41.0" y="883.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (67 samples, 1.05%)</title><rect x="41.0" y="867.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (67 samples, 1.05%)</title><rect x="41.0" y="851.0" width="12.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (67 samples, 1.05%)</title><rect x="41.0" y="835.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (67 samples, 1.05%)</title><rect x="41.0" y="819.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.0" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="41.0" y="803.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="44.0" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="41.6" y="787.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="44.6" y="798.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (60 samples, 0.94%)</title><rect x="42.3" y="803.0" width="11.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="45.3" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 0.78%)</title><rect x="44.2" y="787.0" width="9.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="47.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 0.78%)</title><rect x="44.2" y="771.0" width="9.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="47.2" y="782.0"></text>
</g>
<g>
<title>sys_futex (44 samples, 0.69%)</title><rect x="45.3" y="755.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="48.3" y="766.0"></text>
</g>
<g>
<title>do_futex (44 samples, 0.69%)</title><rect x="45.3" y="739.0" width="8.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="48.3" y="750.0"></text>
</g>
<g>
<title>futex_wake (42 samples, 0.66%)</title><rect x="45.3" y="723.0" width="7.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="48.3" y="734.0"></text>
</g>
<g>
<title>wake_up_q (35 samples, 0.55%)</title><rect x="46.6" y="707.0" width="6.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="49.6" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (35 samples, 0.55%)</title><rect x="46.6" y="691.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="49.6" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (35 samples, 0.55%)</title><rect x="46.6" y="675.0" width="6.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="49.6" y="686.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="53.0" y="723.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="56.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.11%)</title><rect x="53.4" y="899.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.11%)</title><rect x="53.4" y="883.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.11%)</title><rect x="53.4" y="867.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.03%)</title><rect x="54.7" y="899.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="54.7" y="883.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="54.7" y="867.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="54.7" y="851.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.14%)</title><rect x="55.1" y="979.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.1" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.14%)</title><rect x="55.1" y="963.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.14%)</title><rect x="55.1" y="947.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.1" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (16 samples, 0.25%)</title><rect x="56.9" y="1011.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.09%)</title><rect x="58.4" y="995.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.09%)</title><rect x="58.4" y="979.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.09%)</title><rect x="58.4" y="963.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.09%)</title><rect x="58.4" y="947.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.4" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.03%)</title><rect x="59.5" y="995.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.06%)</title><rect x="59.9" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.05%)</title><rect x="59.9" y="995.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.05%)</title><rect x="59.9" y="979.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.9" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.05%)</title><rect x="60.6" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.13%)</title><rect x="61.2" y="1011.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.08%)</title><rect x="61.7" y="995.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.08%)</title><rect x="61.7" y="979.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.7" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="62.6" y="1011.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="62.6" y="995.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (84 samples, 1.31%)</title><rect x="63.4" y="1027.0" width="15.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (83 samples, 1.30%)</title><rect x="63.4" y="1011.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.28%)</title><rect x="64.7" y="995.0" width="3.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="67.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.28%)</title><rect x="64.7" y="979.0" width="3.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="67.7" y="990.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 0.25%)</title><rect x="64.7" y="963.0" width="2.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="67.7" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (13 samples, 0.20%)</title><rect x="64.8" y="947.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="67.8" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="65.8" y="931.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="68.8" y="942.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="67.2" y="947.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="70.2" y="958.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="67.6" y="963.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="70.6" y="974.0"></text>
</g>
<g>
<title>__GI___recv (57 samples, 0.89%)</title><rect x="68.0" y="995.0" width="10.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="71.0" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 0.77%)</title><rect x="69.5" y="979.0" width="9.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="72.5" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (49 samples, 0.77%)</title><rect x="69.5" y="963.0" width="9.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="72.5" y="974.0"></text>
</g>
<g>
<title>sys_recvfrom (44 samples, 0.69%)</title><rect x="70.4" y="947.0" width="8.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="73.4" y="958.0"></text>
</g>
<g>
<title>SYSC_recvfrom (42 samples, 0.66%)</title><rect x="70.4" y="931.0" width="7.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="73.4" y="942.0"></text>
</g>
<g>
<title>sock_recvmsg (38 samples, 0.59%)</title><rect x="70.6" y="915.0" width="7.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="73.6" y="926.0"></text>
</g>
<g>
<title>inet_recvmsg (32 samples, 0.50%)</title><rect x="70.6" y="899.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="73.6" y="910.0"></text>
</g>
<g>
<title>tcp_recvmsg (31 samples, 0.49%)</title><rect x="70.8" y="883.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="73.8" y="894.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.08%)</title><rect x="71.5" y="867.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="74.5" y="878.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.06%)</title><rect x="71.7" y="851.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="74.7" y="862.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="71.7" y="835.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="74.7" y="846.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="71.7" y="819.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="74.7" y="830.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="72.0" y="835.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="75.0" y="846.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="72.8" y="867.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="75.8" y="878.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="72.8" y="851.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="75.8" y="862.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="73.3" y="867.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="76.3" y="878.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.17%)</title><rect x="73.7" y="867.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="76.7" y="878.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.08%)</title><rect x="73.7" y="851.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="76.7" y="862.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.05%)</title><rect x="73.7" y="835.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="76.7" y="846.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="74.3" y="835.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="77.3" y="846.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.09%)</title><rect x="74.6" y="851.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="77.6" y="862.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.08%)</title><rect x="74.8" y="835.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="77.8" y="846.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.05%)</title><rect x="75.7" y="867.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="78.7" y="878.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.06%)</title><rect x="76.5" y="899.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="79.5" y="910.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.06%)</title><rect x="76.5" y="883.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="79.5" y="894.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.06%)</title><rect x="76.5" y="867.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="79.5" y="878.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.06%)</title><rect x="76.5" y="851.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.5" y="862.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.03%)</title><rect x="77.2" y="899.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="80.2" y="910.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="77.6" y="915.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="80.6" y="926.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.05%)</title><rect x="77.6" y="899.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="80.6" y="910.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="77.6" y="883.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="80.6" y="894.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="77.8" y="867.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="80.8" y="878.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="78.1" y="931.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="81.1" y="942.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=3202] (374 samples, 5.85%)</title><rect x="79.1" y="1091.0" width="69.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="82.1" y="1102.0">[NIO Se..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="79.1" y="1075.0" width="1.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="82.1" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="79.2" y="1059.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="82.2" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.08%)</title><rect x="79.4" y="1043.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="82.4" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="79.8" y="1027.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="82.8" y="1038.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.05%)</title><rect x="80.4" y="1075.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="83.4" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="80.4" y="1059.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="83.4" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="80.4" y="1043.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="83.4" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="80.4" y="1027.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="83.4" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="80.4" y="1011.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="83.4" y="1022.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.06%)</title><rect x="81.1" y="1075.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="84.1" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.09%)</title><rect x="81.8" y="1075.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="84.8" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="82.4" y="1059.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="85.4" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="82.4" y="1043.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="85.4" y="1054.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="82.6" y="1027.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="85.6" y="1038.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="82.6" y="1011.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="85.6" y="1022.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="82.6" y="995.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="85.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (351 samples, 5.49%)</title><rect x="83.1" y="1075.0" width="64.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.1" y="1086.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (111 samples, 1.74%)</title><rect x="84.1" y="1059.0" width="20.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.06%)</title><rect x="84.6" y="1043.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.05%)</title><rect x="84.8" y="1027.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (104 samples, 1.63%)</title><rect x="85.3" y="1043.0" width="19.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.3" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="86.1" y="1027.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="89.1" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.09%)</title><rect x="86.1" y="1011.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="89.1" y="1022.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="86.1" y="995.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="89.1" y="1006.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.05%)</title><rect x="86.6" y="995.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="89.6" y="1006.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.05%)</title><rect x="87.2" y="1027.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="90.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.39%)</title><rect x="87.7" y="1027.0" width="16.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="90.7" y="1038.0"></text>
</g>
<g>
<title>epoll_wait (88 samples, 1.38%)</title><rect x="87.9" y="1011.0" width="16.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="90.9" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 1.24%)</title><rect x="89.6" y="995.0" width="14.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="92.6" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (79 samples, 1.24%)</title><rect x="89.6" y="979.0" width="14.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="92.6" y="990.0"></text>
</g>
<g>
<title>sys_epoll_wait (74 samples, 1.16%)</title><rect x="90.5" y="963.0" width="13.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.5" y="974.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.05%)</title><rect x="90.9" y="947.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="93.9" y="958.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="90.9" y="931.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="93.9" y="942.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="91.1" y="915.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="94.1" y="926.0"></text>
</g>
<g>
<title>ep_poll (67 samples, 1.05%)</title><rect x="91.4" y="947.0" width="12.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="94.4" y="958.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="92.4" y="931.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="95.4" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="92.7" y="931.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="95.7" y="942.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (47 samples, 0.74%)</title><rect x="93.5" y="931.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="96.5" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.20%)</title><rect x="93.8" y="915.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="96.8" y="926.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (2 samples, 0.03%)</title><rect x="96.2" y="915.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.2" y="926.0"></text>
</g>
<g>
<title>ep_send_events_proc (27 samples, 0.42%)</title><rect x="96.6" y="915.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="99.6" y="926.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (20 samples, 0.31%)</title><rect x="97.5" y="899.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="100.5" y="910.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.23%)</title><rect x="98.1" y="883.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="101.1" y="894.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.08%)</title><rect x="99.2" y="867.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="102.2" y="878.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.06%)</title><rect x="100.1" y="867.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="103.1" y="878.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.03%)</title><rect x="100.9" y="883.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="103.9" y="894.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="101.2" y="899.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="104.2" y="910.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.05%)</title><rect x="101.6" y="915.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="104.6" y="926.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (9 samples, 0.14%)</title><rect x="102.1" y="931.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="105.1" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.11%)</title><rect x="102.5" y="915.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="105.5" y="926.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.08%)</title><rect x="102.9" y="899.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="105.9" y="910.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.06%)</title><rect x="103.1" y="883.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="106.1" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="103.3" y="867.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="106.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (235 samples, 3.68%)</title><rect x="104.5" y="1059.0" width="43.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.5" y="1070.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (228 samples, 3.57%)</title><rect x="105.8" y="1043.0" width="42.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.8" y="1054.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (137 samples, 2.14%)</title><rect x="106.2" y="1027.0" width="25.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.2" y="1038.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (87 samples, 1.36%)</title><rect x="106.9" y="1011.0" width="16.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (85 samples, 1.33%)</title><rect x="107.3" y="995.0" width="15.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.3" y="1006.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (79 samples, 1.24%)</title><rect x="107.3" y="979.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.3" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.09%)</title><rect x="107.5" y="963.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.5" y="974.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="108.2" y="947.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="108.2" y="931.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.2" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="108.2" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.2" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="108.2" y="899.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.entity (72 samples, 1.13%)</title><rect x="108.6" y="963.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="109.0" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.executeAsync (67 samples, 1.05%)</title><rect x="109.5" y="947.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (67 samples, 1.05%)</title><rect x="109.5" y="931.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (67 samples, 1.05%)</title><rect x="109.5" y="915.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (62 samples, 0.97%)</title><rect x="109.5" y="899.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (61 samples, 0.95%)</title><rect x="109.7" y="883.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (61 samples, 0.95%)</title><rect x="109.7" y="867.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (61 samples, 0.95%)</title><rect x="109.7" y="851.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (61 samples, 0.95%)</title><rect x="109.7" y="835.0" width="11.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (61 samples, 0.95%)</title><rect x="109.7" y="819.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.7" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (9 samples, 0.14%)</title><rect x="109.7" y="803.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="112.7" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.06%)</title><rect x="110.5" y="787.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="113.5" y="798.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (51 samples, 0.80%)</title><rect x="111.6" y="803.0" width="9.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="114.6" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.59%)</title><rect x="114.0" y="787.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="117.0" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.59%)</title><rect x="114.0" y="771.0" width="7.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="117.0" y="782.0"></text>
</g>
<g>
<title>sys_futex (36 samples, 0.56%)</title><rect x="114.3" y="755.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="117.3" y="766.0"></text>
</g>
<g>
<title>do_futex (36 samples, 0.56%)</title><rect x="114.3" y="739.0" width="6.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="117.3" y="750.0"></text>
</g>
<g>
<title>futex_wake (36 samples, 0.56%)</title><rect x="114.3" y="723.0" width="6.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="117.3" y="734.0"></text>
</g>
<g>
<title>wake_up_q (33 samples, 0.52%)</title><rect x="114.9" y="707.0" width="6.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="117.9" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (33 samples, 0.52%)</title><rect x="114.9" y="691.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="117.9" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (33 samples, 0.52%)</title><rect x="114.9" y="675.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="117.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.08%)</title><rect x="121.0" y="899.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.08%)</title><rect x="121.0" y="883.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.08%)</title><rect x="121.0" y="867.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.08%)</title><rect x="121.9" y="979.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.9" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.06%)</title><rect x="122.1" y="963.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.05%)</title><rect x="122.1" y="947.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.1" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (17 samples, 0.27%)</title><rect x="123.0" y="1011.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.08%)</title><rect x="124.7" y="995.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.08%)</title><rect x="124.7" y="979.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.08%)</title><rect x="124.7" y="963.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.08%)</title><rect x="124.7" y="947.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.7" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.05%)</title><rect x="125.6" y="995.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (7 samples, 0.11%)</title><rect x="126.2" y="1011.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.09%)</title><rect x="126.3" y="995.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.09%)</title><rect x="126.3" y="979.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.3" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.03%)</title><rect x="127.4" y="1011.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.20%)</title><rect x="127.8" y="1011.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.19%)</title><rect x="128.0" y="995.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.19%)</title><rect x="128.0" y="979.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.0" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.11%)</title><rect x="130.2" y="1011.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="133.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.11%)</title><rect x="130.2" y="995.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.08%)</title><rect x="130.6" y="979.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="130.6" y="963.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (2 samples, 0.03%)</title><rect x="131.1" y="963.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (2 samples, 0.03%)</title><rect x="131.1" y="947.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.1" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (88 samples, 1.38%)</title><rect x="131.7" y="1027.0" width="16.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (88 samples, 1.38%)</title><rect x="131.7" y="1011.0" width="16.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.22%)</title><rect x="133.0" y="995.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="136.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.22%)</title><rect x="133.0" y="979.0" width="2.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="136.0" y="990.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 0.17%)</title><rect x="133.2" y="963.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="136.2" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10 samples, 0.16%)</title><rect x="133.2" y="947.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="136.2" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="133.5" y="931.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="136.5" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="134.5" y="915.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="137.5" y="926.0"></text>
</g>
<g>
<title>__GI___recv (2 samples, 0.03%)</title><rect x="135.2" y="963.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="138.2" y="974.0"></text>
</g>
<g>
<title>__GI___recv (67 samples, 1.05%)</title><rect x="135.6" y="995.0" width="12.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="138.6" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 0.86%)</title><rect x="137.8" y="979.0" width="10.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="140.8" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 0.85%)</title><rect x="137.8" y="963.0" width="10.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="140.8" y="974.0"></text>
</g>
<g>
<title>sys_recvfrom (46 samples, 0.72%)</title><rect x="139.3" y="947.0" width="8.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="142.3" y="958.0"></text>
</g>
<g>
<title>SYSC_recvfrom (45 samples, 0.70%)</title><rect x="139.3" y="931.0" width="8.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="142.3" y="942.0"></text>
</g>
<g>
<title>sock_recvmsg (35 samples, 0.55%)</title><rect x="139.8" y="915.0" width="6.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="142.8" y="926.0"></text>
</g>
<g>
<title>inet_recvmsg (28 samples, 0.44%)</title><rect x="140.0" y="899.0" width="5.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="143.0" y="910.0"></text>
</g>
<g>
<title>tcp_recvmsg (26 samples, 0.41%)</title><rect x="140.4" y="883.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="143.4" y="894.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.08%)</title><rect x="141.3" y="867.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="144.3" y="878.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.08%)</title><rect x="141.3" y="851.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="144.3" y="862.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.06%)</title><rect x="141.5" y="835.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="144.5" y="846.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.05%)</title><rect x="141.7" y="819.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="144.7" y="830.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="142.2" y="867.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="145.2" y="878.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="142.2" y="851.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="145.2" y="862.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.11%)</title><rect x="142.8" y="867.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="145.8" y="878.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.06%)</title><rect x="143.0" y="851.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="146.0" y="862.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="143.0" y="835.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="146.0" y="846.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="143.3" y="835.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="146.3" y="846.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.05%)</title><rect x="144.1" y="867.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="147.1" y="878.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="144.6" y="867.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="147.6" y="878.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.08%)</title><rect x="145.2" y="899.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="148.2" y="910.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.08%)</title><rect x="145.2" y="883.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="148.2" y="894.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.08%)</title><rect x="145.2" y="867.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="148.2" y="878.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.08%)</title><rect x="145.2" y="851.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="148.2" y="862.0"></text>
</g>
<g>
<title>aa_label_sk_perm (3 samples, 0.05%)</title><rect x="145.5" y="835.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="148.5" y="846.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.11%)</title><rect x="146.3" y="915.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="149.3" y="926.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.11%)</title><rect x="146.3" y="899.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="149.3" y="910.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.11%)</title><rect x="146.3" y="883.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="149.3" y="894.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.11%)</title><rect x="146.3" y="867.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="149.3" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=3203] (374 samples, 5.85%)</title><rect x="148.1" y="1091.0" width="69.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="151.1" y="1102.0">[NIO Se..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10 samples, 0.16%)</title><rect x="148.1" y="1075.0" width="1.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="151.1" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10 samples, 0.16%)</title><rect x="148.1" y="1059.0" width="1.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="151.1" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10 samples, 0.16%)</title><rect x="148.1" y="1043.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="151.1" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="148.7" y="1027.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="151.7" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.06%)</title><rect x="148.7" y="1011.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="151.7" y="1022.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.05%)</title><rect x="149.4" y="1011.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="152.4" y="1022.0"></text>
</g>
<g>
<title>[unknown_Java] (5 samples, 0.08%)</title><rect x="150.2" y="1075.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="153.2" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.06%)</title><rect x="151.1" y="1075.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="154.1" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="151.1" y="1059.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="154.1" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="151.1" y="1043.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="154.1" y="1054.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="151.1" y="1027.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="154.1" y="1038.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="151.1" y="1011.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="154.1" y="1022.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.05%)</title><rect x="151.1" y="995.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="154.1" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="151.1" y="979.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="154.1" y="990.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (354 samples, 5.54%)</title><rect x="151.8" y="1075.0" width="65.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.8" y="1086.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.05%)</title><rect x="152.7" y="1059.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.05%)</title><rect x="152.7" y="1043.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (112 samples, 1.75%)</title><rect x="153.3" y="1059.0" width="20.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (108 samples, 1.69%)</title><rect x="154.0" y="1043.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.0" y="1054.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.03%)</title><rect x="155.1" y="1027.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="158.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (96 samples, 1.50%)</title><rect x="155.5" y="1027.0" width="17.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="158.5" y="1038.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="155.5" y="1011.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="158.5" y="1022.0"></text>
</g>
<g>
<title>epoll_wait (93 samples, 1.46%)</title><rect x="156.1" y="1011.0" width="17.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="159.1" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 1.13%)</title><rect x="159.9" y="995.0" width="13.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="162.9" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (71 samples, 1.11%)</title><rect x="159.9" y="979.0" width="13.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="162.9" y="990.0"></text>
</g>
<g>
<title>sys_epoll_wait (68 samples, 1.06%)</title><rect x="160.5" y="963.0" width="12.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="163.5" y="974.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.05%)</title><rect x="160.7" y="947.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="163.7" y="958.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="160.7" y="931.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="163.7" y="942.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="160.7" y="915.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="163.7" y="926.0"></text>
</g>
<g>
<title>ep_poll (62 samples, 0.97%)</title><rect x="161.2" y="947.0" width="11.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="164.2" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.11%)</title><rect x="161.6" y="931.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="164.6" y="942.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (43 samples, 0.67%)</title><rect x="162.9" y="931.0" width="7.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="165.9" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="163.8" y="915.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="166.8" y="926.0"></text>
</g>
<g>
<title>ep_send_events_proc (32 samples, 0.50%)</title><rect x="164.4" y="915.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="167.4" y="926.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (24 samples, 0.38%)</title><rect x="165.5" y="899.0" width="4.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="168.5" y="910.0"></text>
</g>
<g>
<title>sock_poll (18 samples, 0.28%)</title><rect x="166.0" y="883.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="169.0" y="894.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.06%)</title><rect x="168.4" y="867.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="171.4" y="878.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.05%)</title><rect x="169.4" y="883.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="172.4" y="894.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="169.9" y="899.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="172.9" y="910.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.05%)</title><rect x="170.3" y="915.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="173.3" y="926.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="170.3" y="899.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="173.3" y="910.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.03%)</title><rect x="170.8" y="931.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="173.8" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.13%)</title><rect x="171.2" y="931.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="174.2" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.13%)</title><rect x="171.2" y="915.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="174.2" y="926.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.06%)</title><rect x="171.9" y="899.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="174.9" y="910.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.06%)</title><rect x="171.9" y="883.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="174.9" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="172.1" y="867.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="175.1" y="878.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="173.4" y="1027.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="176.4" y="1038.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="173.4" y="1011.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="176.4" y="1022.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="173.4" y="995.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="176.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (234 samples, 3.66%)</title><rect x="174.0" y="1059.0" width="43.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.0" y="1070.0">one/..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="175.1" y="1043.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="178.1" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (226 samples, 3.54%)</title><rect x="175.5" y="1043.0" width="41.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.5" y="1054.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (147 samples, 2.30%)</title><rect x="175.5" y="1027.0" width="27.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="178.5" y="1038.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (94 samples, 1.47%)</title><rect x="176.8" y="1011.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (93 samples, 1.46%)</title><rect x="176.9" y="995.0" width="17.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.9" y="1006.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (81 samples, 1.27%)</title><rect x="176.9" y="979.0" width="15.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.9" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.09%)</title><rect x="177.1" y="963.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.entity (74 samples, 1.16%)</title><rect x="178.2" y="963.0" width="13.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="181.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.executeAsync (71 samples, 1.11%)</title><rect x="178.8" y="947.0" width="13.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (71 samples, 1.11%)</title><rect x="178.8" y="931.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (71 samples, 1.11%)</title><rect x="178.8" y="915.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="181.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (61 samples, 0.95%)</title><rect x="178.8" y="899.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="181.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (60 samples, 0.94%)</title><rect x="179.0" y="883.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (60 samples, 0.94%)</title><rect x="179.0" y="867.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (60 samples, 0.94%)</title><rect x="179.0" y="851.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (59 samples, 0.92%)</title><rect x="179.2" y="835.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (59 samples, 0.92%)</title><rect x="179.2" y="819.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.2" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="179.2" y="803.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="182.2" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="179.2" y="787.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="182.2" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="180.6" y="803.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="183.6" y="814.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (48 samples, 0.75%)</title><rect x="181.2" y="803.0" width="8.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="184.2" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.56%)</title><rect x="183.4" y="787.0" width="6.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="186.4" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.56%)</title><rect x="183.4" y="771.0" width="6.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="186.4" y="782.0"></text>
</g>
<g>
<title>sys_futex (32 samples, 0.50%)</title><rect x="184.1" y="755.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="187.1" y="766.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.50%)</title><rect x="184.1" y="739.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="187.1" y="750.0"></text>
</g>
<g>
<title>futex_wake (31 samples, 0.49%)</title><rect x="184.1" y="723.0" width="5.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="187.1" y="734.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.05%)</title><rect x="184.1" y="707.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.1" y="718.0"></text>
</g>
<g>
<title>wake_up_q (28 samples, 0.44%)</title><rect x="184.7" y="707.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.7" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (28 samples, 0.44%)</title><rect x="184.7" y="691.0" width="5.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="187.7" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (28 samples, 0.44%)</title><rect x="184.7" y="675.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="187.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.09%)</title><rect x="190.0" y="899.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.09%)</title><rect x="190.0" y="883.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.09%)</title><rect x="190.0" y="867.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.06%)</title><rect x="191.2" y="899.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="194.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.06%)</title><rect x="191.2" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="194.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.06%)</title><rect x="191.2" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.06%)</title><rect x="191.2" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (11 samples, 0.17%)</title><rect x="191.9" y="979.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.9" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.17%)</title><rect x="191.9" y="963.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 0.17%)</title><rect x="191.9" y="947.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.9" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14 samples, 0.22%)</title><rect x="194.1" y="1011.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="197.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.09%)</title><rect x="195.2" y="995.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.09%)</title><rect x="195.2" y="979.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.09%)</title><rect x="195.2" y="963.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.09%)</title><rect x="195.2" y="947.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (7 samples, 0.11%)</title><rect x="196.7" y="1011.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.06%)</title><rect x="197.2" y="995.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.06%)</title><rect x="197.2" y="979.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="200.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.03%)</title><rect x="198.0" y="1011.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.13%)</title><rect x="198.4" y="1011.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.11%)</title><rect x="198.5" y="995.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.11%)</title><rect x="198.5" y="979.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.5" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.23%)</title><rect x="199.8" y="1011.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.23%)</title><rect x="199.8" y="995.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.14%)</title><rect x="200.8" y="979.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.06%)</title><rect x="200.8" y="963.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.8" y="974.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (4 samples, 0.06%)</title><rect x="201.5" y="963.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (4 samples, 0.06%)</title><rect x="201.5" y="947.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.5" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (79 samples, 1.24%)</title><rect x="202.6" y="1027.0" width="14.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="205.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (79 samples, 1.24%)</title><rect x="202.6" y="1011.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.6" y="1022.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.03%)</title><rect x="202.8" y="995.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="205.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.30%)</title><rect x="203.2" y="995.0" width="3.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="206.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.30%)</title><rect x="203.2" y="979.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="206.2" y="990.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 0.25%)</title><rect x="203.3" y="963.0" width="3.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="206.3" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.22%)</title><rect x="203.3" y="947.0" width="2.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="206.3" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (9 samples, 0.14%)</title><rect x="204.3" y="931.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="207.3" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="205.4" y="915.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="208.4" y="926.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="205.9" y="947.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="208.9" y="958.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="206.3" y="963.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="209.3" y="974.0"></text>
</g>
<g>
<title>__GI___recv (57 samples, 0.89%)</title><rect x="206.7" y="995.0" width="10.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="209.7" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.67%)</title><rect x="209.3" y="979.0" width="7.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="212.3" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.66%)</title><rect x="209.3" y="963.0" width="7.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="212.3" y="974.0"></text>
</g>
<g>
<title>sys_recvfrom (34 samples, 0.53%)</title><rect x="210.7" y="947.0" width="6.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="213.7" y="958.0"></text>
</g>
<g>
<title>SYSC_recvfrom (34 samples, 0.53%)</title><rect x="210.7" y="931.0" width="6.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="213.7" y="942.0"></text>
</g>
<g>
<title>sock_recvmsg (30 samples, 0.47%)</title><rect x="211.3" y="915.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="214.3" y="926.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="211.3" y="899.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="214.3" y="910.0"></text>
</g>
<g>
<title>inet_recvmsg (21 samples, 0.33%)</title><rect x="211.7" y="899.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="214.7" y="910.0"></text>
</g>
<g>
<title>tcp_recvmsg (20 samples, 0.31%)</title><rect x="211.8" y="883.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="214.8" y="894.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.08%)</title><rect x="211.8" y="867.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="214.8" y="878.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.08%)</title><rect x="211.8" y="851.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="214.8" y="862.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="211.8" y="835.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="214.8" y="846.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="212.4" y="835.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="215.4" y="846.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.13%)</title><rect x="213.5" y="867.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="216.5" y="878.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="213.7" y="851.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="216.7" y="862.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.06%)</title><rect x="214.2" y="851.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="217.2" y="862.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.06%)</title><rect x="214.2" y="835.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="217.2" y="846.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="215.0" y="867.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="218.0" y="878.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.09%)</title><rect x="215.5" y="899.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="218.5" y="910.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.09%)</title><rect x="215.5" y="883.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="218.5" y="894.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.09%)</title><rect x="215.5" y="867.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="218.5" y="878.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.09%)</title><rect x="215.5" y="851.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="218.5" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=3204] (354 samples, 5.54%)</title><rect x="217.2" y="1091.0" width="65.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="220.2" y="1102.0">[NIO Se..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (13 samples, 0.20%)</title><rect x="217.2" y="1075.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="220.2" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (12 samples, 0.19%)</title><rect x="217.4" y="1059.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="220.4" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (11 samples, 0.17%)</title><rect x="217.6" y="1043.0" width="2.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="220.6" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (9 samples, 0.14%)</title><rect x="217.9" y="1027.0" width="1.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="220.9" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.06%)</title><rect x="218.3" y="1011.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="221.3" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="218.7" y="995.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="221.7" y="1006.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.03%)</title><rect x="219.0" y="1011.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="222.0" y="1022.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.06%)</title><rect x="219.8" y="1075.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="222.8" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.05%)</title><rect x="220.5" y="1075.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="223.5" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="220.7" y="1059.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="223.7" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="220.7" y="1043.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="223.7" y="1054.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="220.7" y="1027.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="223.7" y="1038.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="220.7" y="1011.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="223.7" y="1022.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="220.7" y="995.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="223.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="220.7" y="979.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="223.7" y="990.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (332 samples, 5.20%)</title><rect x="221.3" y="1075.0" width="61.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="224.3" y="1086.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (104 samples, 1.63%)</title><rect x="222.2" y="1059.0" width="19.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (101 samples, 1.58%)</title><rect x="222.7" y="1043.0" width="18.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.7" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="222.9" y="1027.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="225.9" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="222.9" y="1011.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="225.9" y="1022.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="223.1" y="995.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="226.1" y="1006.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.03%)</title><rect x="223.5" y="1027.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="226.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.47%)</title><rect x="223.8" y="1027.0" width="17.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="226.8" y="1038.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.06%)</title><rect x="223.8" y="1011.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="226.8" y="1022.0"></text>
</g>
<g>
<title>epoll_wait (89 samples, 1.39%)</title><rect x="224.8" y="1011.0" width="16.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="227.8" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (76 samples, 1.19%)</title><rect x="227.2" y="995.0" width="14.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="230.2" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (73 samples, 1.14%)</title><rect x="227.2" y="979.0" width="13.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="230.2" y="990.0"></text>
</g>
<g>
<title>sys_epoll_wait (69 samples, 1.08%)</title><rect x="227.9" y="963.0" width="12.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="230.9" y="974.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="228.6" y="947.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="231.6" y="958.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="228.6" y="931.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="231.6" y="942.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="228.6" y="915.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="231.6" y="926.0"></text>
</g>
<g>
<title>ep_poll (61 samples, 0.95%)</title><rect x="229.0" y="947.0" width="11.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="232.0" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="229.4" y="931.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="232.4" y="942.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (37 samples, 0.58%)</title><rect x="229.7" y="931.0" width="6.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="232.7" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="230.3" y="915.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="233.3" y="926.0"></text>
</g>
<g>
<title>ep_send_events_proc (28 samples, 0.44%)</title><rect x="231.2" y="915.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="234.2" y="926.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (20 samples, 0.31%)</title><rect x="232.3" y="899.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="235.3" y="910.0"></text>
</g>
<g>
<title>sock_poll (17 samples, 0.27%)</title><rect x="232.9" y="883.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="235.9" y="894.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.11%)</title><rect x="234.0" y="867.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="237.0" y="878.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.06%)</title><rect x="235.3" y="867.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="238.3" y="878.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="236.0" y="899.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="239.0" y="910.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.03%)</title><rect x="236.6" y="931.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="239.6" y="942.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="237.0" y="931.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="240.0" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (14 samples, 0.22%)</title><rect x="237.3" y="931.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="240.3" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (14 samples, 0.22%)</title><rect x="237.3" y="915.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="240.3" y="926.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.20%)</title><rect x="237.5" y="899.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="240.5" y="910.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.17%)</title><rect x="237.9" y="883.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="240.9" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.11%)</title><rect x="238.6" y="867.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="241.6" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="239.9" y="931.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="242.9" y="942.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="240.3" y="947.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="243.3" y="958.0"></text>
</g>
<g>
<title>sys_epoll_wait (3 samples, 0.05%)</title><rect x="240.6" y="979.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="243.6" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (223 samples, 3.49%)</title><rect x="241.4" y="1059.0" width="41.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.4" y="1070.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (221 samples, 3.46%)</title><rect x="241.8" y="1043.0" width="40.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="244.8" y="1054.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (150 samples, 2.35%)</title><rect x="241.8" y="1027.0" width="27.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.8" y="1038.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (102 samples, 1.60%)</title><rect x="241.9" y="1011.0" width="18.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="244.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (98 samples, 1.53%)</title><rect x="242.7" y="995.0" width="18.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.7" y="1006.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (90 samples, 1.41%)</title><rect x="242.7" y="979.0" width="16.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.7" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.16%)</title><rect x="242.7" y="963.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="245.7" y="974.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.09%)</title><rect x="243.4" y="947.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="243.8" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="246.8" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="243.8" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.8" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.06%)</title><rect x="243.8" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.entity (80 samples, 1.25%)</title><rect x="244.5" y="963.0" width="14.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.5" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.executeAsync (80 samples, 1.25%)</title><rect x="244.5" y="947.0" width="14.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (80 samples, 1.25%)</title><rect x="244.5" y="931.0" width="14.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (80 samples, 1.25%)</title><rect x="244.5" y="915.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="247.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (75 samples, 1.17%)</title><rect x="244.5" y="899.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.08%)</title><rect x="244.5" y="883.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.08%)</title><rect x="244.5" y="867.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.08%)</title><rect x="244.5" y="851.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (70 samples, 1.10%)</title><rect x="245.4" y="883.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (70 samples, 1.10%)</title><rect x="245.4" y="867.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (70 samples, 1.10%)</title><rect x="245.4" y="851.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (70 samples, 1.10%)</title><rect x="245.4" y="835.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (70 samples, 1.10%)</title><rect x="245.4" y="819.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.4" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (11 samples, 0.17%)</title><rect x="245.6" y="803.0" width="2.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="248.6" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="246.4" y="787.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="249.4" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="247.1" y="787.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="250.1" y="798.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (57 samples, 0.89%)</title><rect x="247.8" y="803.0" width="10.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="250.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.66%)</title><rect x="250.6" y="787.0" width="7.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="253.6" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.66%)</title><rect x="250.6" y="771.0" width="7.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="253.6" y="782.0"></text>
</g>
<g>
<title>sys_futex (36 samples, 0.56%)</title><rect x="251.7" y="755.0" width="6.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="254.7" y="766.0"></text>
</g>
<g>
<title>do_futex (36 samples, 0.56%)</title><rect x="251.7" y="739.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="254.7" y="750.0"></text>
</g>
<g>
<title>futex_wake (35 samples, 0.55%)</title><rect x="251.7" y="723.0" width="6.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="254.7" y="734.0"></text>
</g>
<g>
<title>wake_up_q (33 samples, 0.52%)</title><rect x="252.1" y="707.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="255.1" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (33 samples, 0.52%)</title><rect x="252.1" y="691.0" width="6.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="255.1" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (33 samples, 0.52%)</title><rect x="252.1" y="675.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="255.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.06%)</title><rect x="258.4" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.06%)</title><rect x="258.4" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="261.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.06%)</title><rect x="258.4" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="261.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.11%)</title><rect x="259.3" y="979.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.3" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.11%)</title><rect x="259.3" y="963.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.3" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.08%)</title><rect x="259.7" y="947.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.7" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (16 samples, 0.25%)</title><rect x="260.8" y="1011.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="263.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.08%)</title><rect x="261.7" y="995.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.08%)</title><rect x="261.7" y="979.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="264.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.08%)</title><rect x="261.7" y="963.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.08%)</title><rect x="261.7" y="947.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.7" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (6 samples, 0.09%)</title><rect x="262.6" y="995.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="265.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.08%)</title><rect x="263.7" y="1011.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="266.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.06%)</title><rect x="263.9" y="995.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="266.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.06%)</title><rect x="263.9" y="979.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="266.9" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.20%)</title><rect x="264.8" y="1011.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="267.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.13%)</title><rect x="265.8" y="995.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="268.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.13%)</title><rect x="265.8" y="979.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.8" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.19%)</title><rect x="267.2" y="1011.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.19%)</title><rect x="267.2" y="995.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="270.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.13%)</title><rect x="268.0" y="979.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="268.0" y="963.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.0" y="974.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (5 samples, 0.08%)</title><rect x="268.3" y="963.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (5 samples, 0.08%)</title><rect x="268.3" y="947.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (71 samples, 1.11%)</title><rect x="269.5" y="1027.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (71 samples, 1.11%)</title><rect x="269.5" y="1011.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="272.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.19%)</title><rect x="270.2" y="995.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="273.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.19%)</title><rect x="270.2" y="979.0" width="2.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="273.2" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="270.2" y="963.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="273.2" y="974.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 0.14%)</title><rect x="270.6" y="963.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="273.6" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="270.6" y="947.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="273.6" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.08%)</title><rect x="270.9" y="931.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="273.9" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="271.5" y="915.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="274.5" y="926.0"></text>
</g>
<g>
<title>__GI___recv (55 samples, 0.86%)</title><rect x="272.4" y="995.0" width="10.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="275.4" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.64%)</title><rect x="275.0" y="979.0" width="7.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="278.0" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.63%)</title><rect x="275.0" y="963.0" width="7.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="278.0" y="974.0"></text>
</g>
<g>
<title>sys_recvfrom (37 samples, 0.58%)</title><rect x="275.5" y="947.0" width="6.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="278.5" y="958.0"></text>
</g>
<g>
<title>SYSC_recvfrom (37 samples, 0.58%)</title><rect x="275.5" y="931.0" width="6.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="278.5" y="942.0"></text>
</g>
<g>
<title>sock_recvmsg (32 samples, 0.50%)</title><rect x="275.9" y="915.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="278.9" y="926.0"></text>
</g>
<g>
<title>inet_recvmsg (22 samples, 0.34%)</title><rect x="276.7" y="899.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="279.7" y="910.0"></text>
</g>
<g>
<title>tcp_recvmsg (21 samples, 0.33%)</title><rect x="276.8" y="883.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="279.8" y="894.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.06%)</title><rect x="278.1" y="867.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="281.1" y="878.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.06%)</title><rect x="278.1" y="851.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="281.1" y="862.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="278.1" y="835.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="281.1" y="846.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="278.5" y="835.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="281.5" y="846.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.06%)</title><rect x="279.4" y="867.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="282.4" y="878.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="279.4" y="851.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="282.4" y="862.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="279.6" y="835.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="282.6" y="846.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="280.3" y="867.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="283.3" y="878.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.08%)</title><rect x="280.7" y="899.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="283.7" y="910.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.08%)</title><rect x="280.7" y="883.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="283.7" y="894.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.08%)</title><rect x="280.7" y="867.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="283.7" y="878.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.06%)</title><rect x="280.9" y="851.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="283.9" y="862.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="281.8" y="915.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="284.8" y="926.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.05%)</title><rect x="281.8" y="899.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="284.8" y="910.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="281.8" y="883.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="284.8" y="894.0"></text>
</g>
<g>
<title>[asyncWorker tid=3248] (1,096 samples, 17.15%)</title><rect x="282.6" y="1091.0" width="202.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="285.6" y="1102.0">[asyncWorker tid=3248]</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="282.6" y="1075.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="285.6" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="282.6" y="1059.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="285.6" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="282.6" y="1043.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="285.6" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="282.6" y="1027.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="285.6" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="283.3" y="1011.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="286.3" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="283.3" y="995.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="286.3" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="283.3" y="979.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="286.3" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="283.3" y="963.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="286.3" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="283.3" y="947.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="286.3" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="283.5" y="931.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="286.5" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="283.5" y="915.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="286.5" y="926.0"></text>
</g>
<g>
<title>[unknown_Java] (7 samples, 0.11%)</title><rect x="284.0" y="1075.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="287.0" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.11%)</title><rect x="284.0" y="1059.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="287.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.09%)</title><rect x="284.2" y="1043.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="287.2" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.09%)</title><rect x="284.2" y="1027.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="287.2" y="1038.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.08%)</title><rect x="284.4" y="1011.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="287.4" y="1022.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="284.4" y="995.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="287.4" y="1006.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.08%)</title><rect x="284.4" y="979.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="287.4" y="990.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.06%)</title><rect x="284.6" y="963.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="287.6" y="974.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.06%)</title><rect x="284.6" y="947.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="287.6" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="284.6" y="931.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="287.6" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,081 samples, 16.92%)</title><rect x="285.3" y="1075.0" width="199.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.3" y="1086.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,081 samples, 16.92%)</title><rect x="285.3" y="1059.0" width="199.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.3" y="1070.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,081 samples, 16.92%)</title><rect x="285.3" y="1043.0" width="199.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.3" y="1054.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (182 samples, 2.85%)</title><rect x="286.1" y="1027.0" width="33.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.1" y="1038.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (182 samples, 2.85%)</title><rect x="286.1" y="1011.0" width="33.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.1" y="1022.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (141 samples, 2.21%)</title><rect x="286.1" y="995.0" width="26.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.1" y="1006.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.08%)</title><rect x="287.0" y="979.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.08%)</title><rect x="287.0" y="963.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.08%)</title><rect x="287.0" y="947.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (13 samples, 0.20%)</title><rect x="287.9" y="979.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.20%)</title><rect x="287.9" y="963.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.13%)</title><rect x="288.8" y="947.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="291.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.13%)</title><rect x="288.8" y="931.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="291.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.13%)</title><rect x="288.8" y="915.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.8" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.11%)</title><rect x="289.0" y="899.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="292.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.09%)</title><rect x="289.2" y="883.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="292.2" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.09%)</title><rect x="289.2" y="867.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="292.2" y="878.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.08%)</title><rect x="289.4" y="851.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="292.4" y="862.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="289.6" y="835.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="292.6" y="846.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.06%)</title><rect x="289.6" y="819.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="292.6" y="830.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.06%)</title><rect x="289.6" y="803.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="292.6" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.06%)</title><rect x="289.6" y="787.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="292.6" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="289.6" y="771.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="292.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.03%)</title><rect x="290.3" y="979.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.03%)</title><rect x="290.3" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (115 samples, 1.80%)</title><rect x="290.7" y="979.0" width="21.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.7" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (115 samples, 1.80%)</title><rect x="290.7" y="963.0" width="21.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.7" y="974.0">j..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (47 samples, 0.74%)</title><rect x="291.1" y="947.0" width="8.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="294.1" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (18 samples, 0.28%)</title><rect x="291.2" y="931.0" width="3.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="294.2" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.06%)</title><rect x="293.6" y="915.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="296.6" y="926.0"></text>
</g>
<g>
<title>__lll_unlock_wake (19 samples, 0.30%)</title><rect x="294.6" y="931.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="297.6" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.19%)</title><rect x="295.9" y="915.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="298.9" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.19%)</title><rect x="295.9" y="899.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="298.9" y="910.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="297.3" y="883.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="300.3" y="894.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="297.3" y="867.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="300.3" y="878.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="297.3" y="851.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="300.3" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="298.1" y="931.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="301.1" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="298.4" y="931.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="301.4" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="298.8" y="931.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="301.8" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="299.2" y="931.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="302.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 1.03%)</title><rect x="299.7" y="947.0" width="12.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="302.7" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_wait (57 samples, 0.89%)</title><rect x="299.9" y="931.0" width="10.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="302.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.47%)</title><rect x="304.9" y="915.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="307.9" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.45%)</title><rect x="304.9" y="899.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="307.9" y="910.0"></text>
</g>
<g>
<title>sys_futex (24 samples, 0.38%)</title><rect x="305.8" y="883.0" width="4.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="308.8" y="894.0"></text>
</g>
<g>
<title>do_futex (24 samples, 0.38%)</title><rect x="305.8" y="867.0" width="4.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="308.8" y="878.0"></text>
</g>
<g>
<title>futex_wait (20 samples, 0.31%)</title><rect x="306.6" y="851.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="309.6" y="862.0"></text>
</g>
<g>
<title>futex_wait_queue_me (12 samples, 0.19%)</title><rect x="307.5" y="835.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="310.5" y="846.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.08%)</title><rect x="308.8" y="819.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="311.8" y="830.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.08%)</title><rect x="308.8" y="803.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="311.8" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.06%)</title><rect x="309.0" y="787.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="312.0" y="798.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.03%)</title><rect x="309.7" y="835.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="312.7" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="310.8" y="931.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="313.8" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (4 samples, 0.06%)</title><rect x="311.2" y="931.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="314.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.05%)</title><rect x="312.1" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.05%)</title><rect x="312.1" y="979.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.05%)</title><rect x="312.1" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="315.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.03%)</title><rect x="312.7" y="995.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.05%)</title><rect x="313.0" y="995.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.05%)</title><rect x="313.0" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="316.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.05%)</title><rect x="313.0" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (33 samples, 0.52%)</title><rect x="313.6" y="995.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (33 samples, 0.52%)</title><rect x="313.6" y="979.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (33 samples, 0.52%)</title><rect x="313.6" y="963.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="316.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (33 samples, 0.52%)</title><rect x="313.6" y="947.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (32 samples, 0.50%)</title><rect x="313.8" y="931.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.8" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="313.8" y="915.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="316.8" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="314.9" y="899.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="317.9" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (23 samples, 0.36%)</title><rect x="315.4" y="915.0" width="4.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="318.4" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.25%)</title><rect x="316.7" y="899.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="319.7" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.23%)</title><rect x="316.7" y="883.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="319.7" y="894.0"></text>
</g>
<g>
<title>sys_futex (14 samples, 0.22%)</title><rect x="316.9" y="867.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="319.9" y="878.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.22%)</title><rect x="316.9" y="851.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="319.9" y="862.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.22%)</title><rect x="316.9" y="835.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="319.9" y="846.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="316.9" y="819.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="319.9" y="830.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.19%)</title><rect x="317.3" y="819.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="320.3" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.19%)</title><rect x="317.3" y="803.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="320.3" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.17%)</title><rect x="317.5" y="787.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="320.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService$$Lambda$65/63678775.run (895 samples, 14.01%)</title><rect x="319.7" y="1027.0" width="165.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="322.7" y="1038.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.lambda$executeAsync$3 (895 samples, 14.01%)</title><rect x="319.7" y="1011.0" width="165.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="322.7" y="1022.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (408 samples, 6.38%)</title><rect x="320.1" y="995.0" width="75.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="323.1" y="1006.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.11%)</title><rect x="321.0" y="979.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.11%)</title><rect x="321.0" y="963.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.0" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.11%)</title><rect x="321.0" y="947.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.0" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (393 samples, 6.15%)</title><rect x="322.3" y="979.0" width="72.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="325.3" y="990.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (18 samples, 0.28%)</title><rect x="323.0" y="963.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.0" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.13%)</title><rect x="324.9" y="947.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.9" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.13%)</title><rect x="324.9" y="931.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="327.9" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.13%)</title><rect x="324.9" y="915.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.13%)</title><rect x="324.9" y="899.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.9" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="326.0" y="883.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="329.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (371 samples, 5.81%)</title><rect x="326.3" y="963.0" width="68.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.3" y="974.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (371 samples, 5.81%)</title><rect x="326.3" y="947.0" width="68.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.3" y="958.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.03%)</title><rect x="326.9" y="931.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (366 samples, 5.73%)</title><rect x="327.3" y="931.0" width="67.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.3" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (364 samples, 5.70%)</title><rect x="327.6" y="915.0" width="67.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.6" y="926.0">one/nio..</text>
</g>
<g>
<title>[unknown] (21 samples, 0.33%)</title><rect x="328.4" y="899.0" width="3.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="331.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.33%)</title><rect x="328.4" y="883.0" width="3.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="331.4" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (18 samples, 0.28%)</title><rect x="328.4" y="867.0" width="3.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="331.4" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.22%)</title><rect x="328.9" y="851.0" width="2.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="331.9" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="330.0" y="835.0" width="1.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="333.0" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.06%)</title><rect x="330.8" y="819.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="333.8" y="830.0"></text>
</g>
<g>
<title>__send (3 samples, 0.05%)</title><rect x="331.7" y="867.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="334.7" y="878.0"></text>
</g>
<g>
<title>__send (339 samples, 5.31%)</title><rect x="332.2" y="899.0" width="62.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="335.2" y="910.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (329 samples, 5.15%)</title><rect x="334.1" y="883.0" width="60.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="337.1" y="894.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (329 samples, 5.15%)</title><rect x="334.1" y="867.0" width="60.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="337.1" y="878.0">do_sys..</text>
</g>
<g>
<title>sys_sendto (323 samples, 5.05%)</title><rect x="335.2" y="851.0" width="59.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="338.2" y="862.0">sys_se..</text>
</g>
<g>
<title>SYSC_sendto (320 samples, 5.01%)</title><rect x="335.2" y="835.0" width="59.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="338.2" y="846.0">SYSC_s..</text>
</g>
<g>
<title>sock_sendmsg (313 samples, 4.90%)</title><rect x="336.1" y="819.0" width="57.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="339.1" y="830.0">sock_s..</text>
</g>
<g>
<title>inet_sendmsg (303 samples, 4.74%)</title><rect x="336.9" y="803.0" width="55.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="339.9" y="814.0">inet_..</text>
</g>
<g>
<title>tcp_sendmsg (299 samples, 4.68%)</title><rect x="337.6" y="787.0" width="55.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="340.6" y="798.0">tcp_s..</text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="338.5" y="771.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="341.5" y="782.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (291 samples, 4.55%)</title><rect x="338.9" y="771.0" width="53.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="341.9" y="782.0">tcp_s..</text>
</g>
<g>
<title>__check_object_size (8 samples, 0.13%)</title><rect x="339.8" y="755.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="342.8" y="766.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.09%)</title><rect x="340.2" y="739.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="343.2" y="750.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (15 samples, 0.23%)</title><rect x="341.5" y="755.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="344.5" y="766.0"></text>
</g>
<g>
<title>__alloc_skb (13 samples, 0.20%)</title><rect x="341.8" y="739.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="344.8" y="750.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (6 samples, 0.09%)</title><rect x="342.6" y="723.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="345.6" y="734.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.09%)</title><rect x="342.6" y="707.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="345.6" y="718.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.05%)</title><rect x="343.7" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="346.7" y="734.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.05%)</title><rect x="344.2" y="755.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="347.2" y="766.0"></text>
</g>
<g>
<title>tcp_push (240 samples, 3.76%)</title><rect x="344.8" y="755.0" width="44.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="347.8" y="766.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (239 samples, 3.74%)</title><rect x="345.0" y="739.0" width="44.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="348.0" y="750.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (238 samples, 3.72%)</title><rect x="345.2" y="723.0" width="43.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="348.2" y="734.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (228 samples, 3.57%)</title><rect x="346.6" y="707.0" width="42.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="349.6" y="718.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (212 samples, 3.32%)</title><rect x="347.7" y="691.0" width="39.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="350.7" y="702.0">ip_..</text>
</g>
<g>
<title>ip_local_out (201 samples, 3.15%)</title><rect x="349.0" y="675.0" width="37.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="352.0" y="686.0">ip_..</text>
</g>
<g>
<title>ip_output (198 samples, 3.10%)</title><rect x="349.6" y="659.0" width="36.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="352.6" y="670.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (194 samples, 3.04%)</title><rect x="350.3" y="643.0" width="35.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="353.3" y="654.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="350.9" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="353.9" y="638.0"></text>
</g>
<g>
<title>ip_finish_output2 (189 samples, 2.96%)</title><rect x="351.3" y="627.0" width="34.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="354.3" y="638.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (162 samples, 2.54%)</title><rect x="352.0" y="611.0" width="29.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="355.0" y="622.0">__..</text>
</g>
<g>
<title>do_softirq.part.17 (162 samples, 2.54%)</title><rect x="352.0" y="595.0" width="29.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="355.0" y="606.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (157 samples, 2.46%)</title><rect x="352.9" y="579.0" width="29.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="355.9" y="590.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (155 samples, 2.43%)</title><rect x="352.9" y="563.0" width="28.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="355.9" y="574.0">__..</text>
</g>
<g>
<title>__usecs_to_jiffies (3 samples, 0.05%)</title><rect x="353.7" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="356.7" y="558.0"></text>
</g>
<g>
<title>net_rx_action (147 samples, 2.30%)</title><rect x="354.2" y="547.0" width="27.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="357.2" y="558.0">n..</text>
</g>
<g>
<title>process_backlog (146 samples, 2.28%)</title><rect x="354.4" y="531.0" width="27.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="357.4" y="542.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (144 samples, 2.25%)</title><rect x="354.8" y="515.0" width="26.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="357.8" y="526.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (141 samples, 2.21%)</title><rect x="355.0" y="499.0" width="26.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="358.0" y="510.0">_..</text>
</g>
<g>
<title>ip_rcv (133 samples, 2.08%)</title><rect x="356.2" y="483.0" width="24.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="359.2" y="494.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (127 samples, 1.99%)</title><rect x="357.4" y="467.0" width="23.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="360.4" y="478.0">i..</text>
</g>
<g>
<title>ip_local_deliver (126 samples, 1.97%)</title><rect x="357.5" y="451.0" width="23.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="360.5" y="462.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (122 samples, 1.91%)</title><rect x="357.7" y="435.0" width="22.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="360.7" y="446.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (119 samples, 1.86%)</title><rect x="358.3" y="419.0" width="22.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="361.3" y="430.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.06%)</title><rect x="358.8" y="403.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="361.8" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="359.6" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="362.6" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (108 samples, 1.69%)</title><rect x="360.1" y="403.0" width="20.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="363.1" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (106 samples, 1.66%)</title><rect x="360.3" y="387.0" width="19.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="363.3" y="398.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.08%)</title><rect x="360.7" y="371.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="363.7" y="382.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.08%)</title><rect x="360.7" y="355.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="363.7" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.06%)</title><rect x="360.9" y="339.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="363.9" y="350.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="361.2" y="323.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="364.2" y="334.0"></text>
</g>
<g>
<title>tcp_ack (35 samples, 0.55%)</title><rect x="362.0" y="371.0" width="6.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="365.0" y="382.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (26 samples, 0.41%)</title><rect x="363.6" y="355.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="366.6" y="366.0"></text>
</g>
<g>
<title>__kfree_skb (13 samples, 0.20%)</title><rect x="364.2" y="339.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="367.2" y="350.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.09%)</title><rect x="364.2" y="323.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="367.2" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.09%)</title><rect x="364.2" y="307.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="367.2" y="318.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.05%)</title><rect x="364.7" y="291.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="367.7" y="302.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.33 (3 samples, 0.05%)</title><rect x="364.7" y="275.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="367.7" y="286.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.11%)</title><rect x="365.3" y="323.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="368.3" y="334.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.09%)</title><rect x="365.5" y="307.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="368.5" y="318.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.09%)</title><rect x="365.5" y="291.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="368.5" y="302.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.08%)</title><rect x="365.7" y="275.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="368.7" y="286.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="366.0" y="259.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="369.0" y="270.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.40 (3 samples, 0.05%)</title><rect x="367.5" y="339.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="370.5" y="350.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.03%)</title><rect x="368.1" y="339.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="371.1" y="350.0"></text>
</g>
<g>
<title>tcp_data_queue (60 samples, 0.94%)</title><rect x="368.4" y="371.0" width="11.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="371.4" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (55 samples, 0.86%)</title><rect x="368.8" y="355.0" width="10.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="371.8" y="366.0"></text>
</g>
<g>
<title>__wake_up_sync_key (54 samples, 0.85%)</title><rect x="369.0" y="339.0" width="10.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="372.0" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (54 samples, 0.85%)</title><rect x="369.0" y="323.0" width="10.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="372.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (54 samples, 0.85%)</title><rect x="369.0" y="307.0" width="10.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="372.0" y="318.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.05%)</title><rect x="379.0" y="355.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="382.0" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="380.4" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="383.4" y="446.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="381.0" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="384.0" y="510.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="381.5" y="563.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="384.5" y="574.0"></text>
</g>
<g>
<title>dev_queue_xmit (22 samples, 0.34%)</title><rect x="381.9" y="611.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="384.9" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (20 samples, 0.31%)</title><rect x="381.9" y="595.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="384.9" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.08%)</title><rect x="383.2" y="579.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="386.2" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.05%)</title><rect x="383.6" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="386.6" y="574.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.06%)</title><rect x="384.3" y="579.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="387.3" y="590.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (3 samples, 0.05%)</title><rect x="385.1" y="579.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="388.1" y="590.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="386.3" y="675.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="389.3" y="686.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.09%)</title><rect x="386.9" y="691.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="389.9" y="702.0"></text>
</g>
<g>
<title>__skb_clone (6 samples, 0.09%)</title><rect x="386.9" y="675.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="389.9" y="686.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (3 samples, 0.05%)</title><rect x="388.2" y="691.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="391.2" y="702.0"></text>
</g>
<g>
<title>tcp_send_mss (17 samples, 0.27%)</title><rect x="389.3" y="755.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="392.3" y="766.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="389.3" y="739.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="392.3" y="750.0"></text>
</g>
<g>
<title>tcp_current_mss (14 samples, 0.22%)</title><rect x="389.9" y="739.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="392.9" y="750.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="391.3" y="723.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="394.3" y="734.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.03%)</title><rect x="391.5" y="707.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="394.5" y="718.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (3 samples, 0.05%)</title><rect x="391.9" y="723.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="394.9" y="734.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.06%)</title><rect x="392.8" y="803.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="395.8" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="393.2" y="787.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="396.2" y="798.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="393.2" y="771.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="396.2" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="393.2" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="396.2" y="766.0"></text>
</g>
<g>
<title>aa_label_sk_perm (2 samples, 0.03%)</title><rect x="393.2" y="739.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="396.2" y="750.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.03%)</title><rect x="393.5" y="803.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="396.5" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="393.9" y="819.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="396.9" y="830.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="393.9" y="803.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="396.9" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="393.9" y="787.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="396.9" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="393.9" y="771.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="396.9" y="782.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.05%)</title><rect x="394.3" y="835.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="397.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.05%)</title><rect x="394.8" y="979.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService$$Lambda$62/1246458512.action (47 samples, 0.74%)</title><rect x="395.4" y="995.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.lambda$entity$1 (47 samples, 0.74%)</title><rect x="395.4" y="979.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="398.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.put (47 samples, 0.74%)</title><rect x="395.4" y="963.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.4" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="395.4" y="947.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.4" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="395.4" y="931.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.4" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="395.4" y="915.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.4" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="395.4" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="398.4" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.upsert (44 samples, 0.69%)</title><rect x="395.9" y="947.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.upsert (44 samples, 0.69%)</title><rect x="395.9" y="931.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.upsert (43 samples, 0.67%)</title><rect x="395.9" y="915.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (41 samples, 0.64%)</title><rect x="395.9" y="899.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (40 samples, 0.63%)</title><rect x="396.1" y="883.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.1" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.05%)</title><rect x="397.2" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="400.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (31 samples, 0.49%)</title><rect x="397.8" y="867.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="400.8" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.25%)</title><rect x="400.6" y="851.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="403.6" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.25%)</title><rect x="400.6" y="835.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.6" y="846.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 0.25%)</title><rect x="400.6" y="819.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="403.6" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.11%)</title><rect x="402.0" y="803.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.0" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (7 samples, 0.11%)</title><rect x="402.0" y="787.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.0" y="798.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.03%)</title><rect x="403.0" y="771.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="406.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getValue (2 samples, 0.03%)</title><rect x="403.5" y="899.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.5" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="403.5" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.5" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="403.5" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.5" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="403.5" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.5" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="403.5" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.5" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="403.5" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.5" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="403.5" y="803.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="406.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="403.5" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService$$Lambda$68/479492505.action (438 samples, 6.85%)</title><rect x="404.1" y="995.0" width="80.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="407.1" y="1006.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.lambda$entity$0 (438 samples, 6.85%)</title><rect x="404.1" y="979.0" width="80.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.1" y="990.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.get (437 samples, 6.84%)</title><rect x="404.3" y="963.0" width="80.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.3" y="974.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (435 samples, 6.81%)</title><rect x="404.6" y="947.0" width="80.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.6" y="958.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (15 samples, 0.23%)</title><rect x="404.6" y="931.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.6" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (15 samples, 0.23%)</title><rect x="404.6" y="915.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="407.6" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (15 samples, 0.23%)</title><rect x="404.6" y="899.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.6" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (15 samples, 0.23%)</title><rect x="404.6" y="883.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 0.23%)</title><rect x="404.6" y="867.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.6" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.22%)</title><rect x="404.6" y="851.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.6" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (9 samples, 0.14%)</title><rect x="404.6" y="835.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.6" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (9 samples, 0.14%)</title><rect x="404.6" y="819.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="407.6" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.13%)</title><rect x="404.8" y="803.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.8" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.13%)</title><rect x="404.8" y="787.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.8" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.13%)</title><rect x="404.8" y="771.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (7 samples, 0.11%)</title><rect x="405.0" y="755.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (7 samples, 0.11%)</title><rect x="405.0" y="739.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="408.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="405.0" y="723.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="408.0" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="405.0" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="408.0" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.03%)</title><rect x="405.4" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="408.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (3 samples, 0.05%)</title><rect x="405.7" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.7" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="405.7" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="408.7" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="405.7" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.7" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.08%)</title><rect x="406.3" y="835.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.3" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.08%)</title><rect x="406.3" y="819.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.3" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.08%)</title><rect x="406.3" y="803.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="409.3" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.08%)</title><rect x="406.3" y="787.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.3" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.08%)</title><rect x="406.3" y="771.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.3" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.06%)</title><rect x="406.5" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="409.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (2 samples, 0.03%)</title><rect x="406.8" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (2 samples, 0.03%)</title><rect x="406.8" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="409.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="406.8" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.8" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.03%)</title><rect x="406.8" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.05%)</title><rect x="407.4" y="931.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="410.4" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (3 samples, 0.05%)</title><rect x="407.4" y="915.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.iterator (416 samples, 6.51%)</title><rect x="408.1" y="931.0" width="76.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.1" y="942.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (89 samples, 1.39%)</title><rect x="408.3" y="915.0" width="16.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.3" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (60 samples, 0.94%)</title><rect x="408.5" y="899.0" width="11.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.5" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (60 samples, 0.94%)</title><rect x="408.5" y="883.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.5" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.03%)</title><rect x="408.9" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="411.9" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.03%)</title><rect x="408.9" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.9" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.03%)</title><rect x="408.9" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.03%)</title><rect x="408.9" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.9" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="409.2" y="867.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.2" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.05%)</title><rect x="409.6" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.6" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (51 samples, 0.80%)</title><rect x="410.2" y="867.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.2" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (51 samples, 0.80%)</title><rect x="410.2" y="851.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.2" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (51 samples, 0.80%)</title><rect x="410.2" y="835.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.2" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (51 samples, 0.80%)</title><rect x="410.2" y="819.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.2" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.78%)</title><rect x="410.4" y="803.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.4" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.78%)</title><rect x="410.4" y="787.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.4" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (24 samples, 0.38%)</title><rect x="410.7" y="771.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (22 samples, 0.34%)</title><rect x="411.1" y="755.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="414.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (22 samples, 0.34%)</title><rect x="411.1" y="739.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getRowAt (21 samples, 0.33%)</title><rect x="411.3" y="723.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.3" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="411.5" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.5" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="411.5" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.5" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="411.5" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.5" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="411.5" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="411.5" y="643.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.5" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="411.5" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.5" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="411.5" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.5" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferS.get (2 samples, 0.03%)</title><rect x="412.0" y="707.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (15 samples, 0.23%)</title><rect x="412.4" y="707.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.4" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (2 samples, 0.03%)</title><rect x="412.6" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.6" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (2 samples, 0.03%)</title><rect x="412.6" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (2 samples, 0.03%)</title><rect x="412.6" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.6" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.13%)</title><rect x="412.9" y="691.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.9" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.11%)</title><rect x="413.1" y="675.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.1" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.11%)</title><rect x="413.1" y="659.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="416.1" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.06%)</title><rect x="414.4" y="691.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.4" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.06%)</title><rect x="414.4" y="675.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.4" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="414.4" y="659.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.4" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="414.6" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="414.6" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.6" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="414.6" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.6" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="414.8" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (24 samples, 0.38%)</title><rect x="415.2" y="771.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="418.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (24 samples, 0.38%)</title><rect x="415.2" y="755.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="418.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.14%)</title><rect x="415.2" y="739.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.2" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.13%)</title><rect x="415.2" y="723.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.2" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.03%)</title><rect x="415.7" y="707.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="418.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (15 samples, 0.23%)</title><rect x="416.8" y="739.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.8" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.19%)</title><rect x="416.8" y="723.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.8" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.19%)</title><rect x="416.8" y="707.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.8" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.14%)</title><rect x="417.2" y="691.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.2" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.14%)</title><rect x="417.2" y="675.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="420.2" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.11%)</title><rect x="417.6" y="659.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.11%)</title><rect x="417.6" y="643.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.11%)</title><rect x="417.6" y="627.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.6" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.08%)</title><rect x="417.7" y="611.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.7" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.05%)</title><rect x="418.1" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.1" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="419.0" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.0" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="419.0" y="707.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.0" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="419.0" y="691.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="419.0" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (28 samples, 0.44%)</title><rect x="419.6" y="899.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (28 samples, 0.44%)</title><rect x="419.6" y="883.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.6" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.38%)</title><rect x="420.0" y="867.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="423.0" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (17 samples, 0.27%)</title><rect x="420.0" y="851.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="423.0" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (16 samples, 0.25%)</title><rect x="420.1" y="835.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.1" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (16 samples, 0.25%)</title><rect x="420.1" y="819.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="423.1" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.25%)</title><rect x="420.1" y="803.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="423.1" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.25%)</title><rect x="420.1" y="787.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="423.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (14 samples, 0.22%)</title><rect x="420.5" y="771.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="423.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (14 samples, 0.22%)</title><rect x="420.5" y="755.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="423.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.13%)</title><rect x="420.5" y="739.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="423.5" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.09%)</title><rect x="420.5" y="723.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="423.5" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.06%)</title><rect x="420.5" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="423.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (2 samples, 0.03%)</title><rect x="421.2" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (6 samples, 0.09%)</title><rect x="422.0" y="739.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.0" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="422.0" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="425.0" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="422.0" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.0" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="422.5" y="723.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.5" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="422.5" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.5" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="422.5" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="422.5" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.11%)</title><rect x="423.1" y="851.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.1" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.11%)</title><rect x="423.1" y="835.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.1" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (2 samples, 0.03%)</title><rect x="423.1" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.1" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.08%)</title><rect x="423.5" y="819.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.5" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.08%)</title><rect x="423.5" y="803.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.5" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.08%)</title><rect x="423.5" y="787.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.5" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.08%)</title><rect x="423.5" y="771.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (4 samples, 0.06%)</title><rect x="423.6" y="755.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (4 samples, 0.06%)</title><rect x="423.6" y="739.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="423.6" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.6" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="423.6" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="426.6" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.03%)</title><rect x="423.6" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (326 samples, 5.10%)</title><rect x="424.8" y="915.0" width="60.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.8" y="926.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (18 samples, 0.28%)</title><rect x="425.1" y="899.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="428.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (18 samples, 0.28%)</title><rect x="425.1" y="883.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (16 samples, 0.25%)</title><rect x="425.5" y="867.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="428.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (15 samples, 0.23%)</title><rect x="425.7" y="851.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="426.8" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.8" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (2 samples, 0.03%)</title><rect x="426.8" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (7 samples, 0.11%)</title><rect x="427.2" y="835.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="430.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.06%)</title><rect x="427.7" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (12 samples, 0.19%)</title><rect x="428.4" y="899.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (12 samples, 0.19%)</title><rect x="428.4" y="883.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (12 samples, 0.19%)</title><rect x="428.4" y="867.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="431.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (7 samples, 0.11%)</title><rect x="429.4" y="851.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="432.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (7 samples, 0.11%)</title><rect x="429.4" y="835.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (7 samples, 0.11%)</title><rect x="429.4" y="819.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.06%)</title><rect x="429.9" y="803.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (3 samples, 0.05%)</title><rect x="430.1" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (3 samples, 0.05%)</title><rect x="430.1" y="771.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.iterator (276 samples, 4.32%)</title><rect x="430.7" y="899.0" width="50.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.7" y="910.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.&lt;init&gt; (276 samples, 4.32%)</title><rect x="430.7" y="883.0" width="50.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="433.7" y="894.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getOffsetsIndex (276 samples, 4.32%)</title><rect x="430.7" y="867.0" width="50.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.7" y="878.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.17%)</title><rect x="431.0" y="851.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.0" y="862.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.16%)</title><rect x="431.2" y="835.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.2" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.08%)</title><rect x="431.6" y="819.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.6" y="830.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (2 samples, 0.03%)</title><rect x="432.1" y="803.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="435.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (3 samples, 0.05%)</title><rect x="432.5" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (263 samples, 4.12%)</title><rect x="433.1" y="851.0" width="48.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.1" y="862.0">ru/m..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (20 samples, 0.31%)</title><rect x="436.9" y="835.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.9" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.06%)</title><rect x="437.5" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="440.5" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (11 samples, 0.17%)</title><rect x="438.2" y="819.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="441.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (7 samples, 0.11%)</title><rect x="439.0" y="803.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="442.0" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (2 samples, 0.03%)</title><rect x="440.3" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="443.3" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (178 samples, 2.79%)</title><rect x="440.6" y="835.0" width="32.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.6" y="846.0">ja..</text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="449.7" y="819.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.7" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (127 samples, 1.99%)</title><rect x="450.1" y="819.0" width="23.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.1" y="830.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (127 samples, 1.99%)</title><rect x="450.1" y="803.0" width="23.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.1" y="814.0">j..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (127 samples, 1.99%)</title><rect x="450.1" y="787.0" width="23.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.1" y="798.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (113 samples, 1.77%)</title><rect x="452.3" y="771.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.3" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (113 samples, 1.77%)</title><rect x="452.3" y="755.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.3" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (99 samples, 1.55%)</title><rect x="454.9" y="739.0" width="18.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.9" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (14 samples, 0.22%)</title><rect x="466.9" y="723.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.9" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.16%)</title><rect x="467.6" y="707.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.11%)</title><rect x="468.2" y="691.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.2" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.11%)</title><rect x="468.2" y="675.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.2" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (20 samples, 0.31%)</title><rect x="469.4" y="723.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.4" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (20 samples, 0.31%)</title><rect x="469.4" y="707.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.09%)</title><rect x="471.7" y="691.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="472.8" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.8" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="472.8" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="473.1" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.1" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (22 samples, 0.34%)</title><rect x="473.5" y="835.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.5" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (22 samples, 0.34%)</title><rect x="473.5" y="819.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.5" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (22 samples, 0.34%)</title><rect x="473.5" y="803.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.5" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (19 samples, 0.30%)</title><rect x="474.1" y="787.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (19 samples, 0.30%)</title><rect x="474.1" y="771.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (19 samples, 0.30%)</title><rect x="474.1" y="755.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.1" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (19 samples, 0.30%)</title><rect x="474.1" y="739.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.1" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (17 samples, 0.27%)</title><rect x="474.4" y="723.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.4" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (17 samples, 0.27%)</title><rect x="474.4" y="707.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.13%)</title><rect x="475.7" y="691.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="477.2" y="691.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.2" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="477.2" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.2" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferS.get (16 samples, 0.25%)</title><rect x="477.6" y="835.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.6" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferS.ix (6 samples, 0.09%)</title><rect x="479.2" y="819.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.2" y="830.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.08%)</title><rect x="480.7" y="835.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.7" y="846.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.08%)</title><rect x="480.7" y="819.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.08%)</title><rect x="480.7" y="803.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.7" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.06%)</title><rect x="480.9" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="483.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="481.1" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.iterator (2 samples, 0.03%)</title><rect x="481.6" y="899.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.iterator (16 samples, 0.25%)</title><rect x="482.0" y="899.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (4 samples, 0.06%)</title><rect x="482.2" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.2" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (2 samples, 0.03%)</title><rect x="482.2" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.2" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.&lt;init&gt; (2 samples, 0.03%)</title><rect x="482.2" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.2" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.03%)</title><rect x="482.6" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.6" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="482.6" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (11 samples, 0.17%)</title><rect x="482.9" y="883.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.03%)</title><rect x="482.9" y="867.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="482.9" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.03%)</title><rect x="482.9" y="835.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="485.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.iterator (6 samples, 0.09%)</title><rect x="483.3" y="867.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.09%)</title><rect x="483.3" y="851.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.08%)</title><rect x="483.5" y="835.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.08%)</title><rect x="483.5" y="819.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.05%)</title><rect x="483.8" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.05%)</title><rect x="483.8" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (2 samples, 0.03%)</title><rect x="484.0" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="484.0" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="484.0" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="484.0" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.0" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="484.0" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="487.0" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="484.0" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.0" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="484.0" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.iterator (3 samples, 0.05%)</title><rect x="484.4" y="867.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.4" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (3 samples, 0.05%)</title><rect x="484.4" y="851.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.4" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (2 samples, 0.03%)</title><rect x="484.4" y="835.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.4" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.&lt;init&gt; (2 samples, 0.03%)</title><rect x="484.4" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.4" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="484.4" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.4" y="814.0"></text>
</g>
<g>
<title>[asyncWorker tid=3249] (1,108 samples, 17.34%)</title><rect x="485.0" y="1091.0" width="204.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="488.0" y="1102.0">[asyncWorker tid=3249]</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.06%)</title><rect x="485.0" y="1075.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="488.0" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="485.1" y="1059.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="488.1" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="485.1" y="1043.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="488.1" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="485.1" y="1027.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="488.1" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="485.3" y="1011.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="488.3" y="1022.0"></text>
</g>
<g>
<title>[not_walkable] (2 samples, 0.03%)</title><rect x="485.7" y="1075.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="488.7" y="1086.0"></text>
</g>
<g>
<title>[unknown_Java] (9 samples, 0.14%)</title><rect x="486.1" y="1075.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="489.1" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="486.8" y="1059.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="489.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="487.4" y="1043.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="490.4" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="487.4" y="1027.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="490.4" y="1038.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="487.4" y="1011.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="490.4" y="1022.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="487.4" y="995.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="490.4" y="1006.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="487.4" y="979.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="490.4" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,093 samples, 17.10%)</title><rect x="487.7" y="1075.0" width="201.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.7" y="1086.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,093 samples, 17.10%)</title><rect x="487.7" y="1059.0" width="201.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.7" y="1070.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,093 samples, 17.10%)</title><rect x="487.7" y="1043.0" width="201.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.7" y="1054.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (161 samples, 2.52%)</title><rect x="488.5" y="1027.0" width="29.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.5" y="1038.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (161 samples, 2.52%)</title><rect x="488.5" y="1011.0" width="29.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.5" y="1022.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (127 samples, 1.99%)</title><rect x="488.5" y="995.0" width="23.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.5" y="1006.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.05%)</title><rect x="489.6" y="979.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.05%)</title><rect x="489.6" y="963.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="492.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.05%)</title><rect x="489.6" y="947.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (11 samples, 0.17%)</title><rect x="490.1" y="979.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.17%)</title><rect x="490.1" y="963.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.08%)</title><rect x="491.0" y="947.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.08%)</title><rect x="491.0" y="931.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.08%)</title><rect x="491.0" y="915.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.0" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.06%)</title><rect x="491.2" y="899.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="494.2" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="491.4" y="883.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="494.4" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="491.4" y="867.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="494.4" y="878.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.05%)</title><rect x="491.4" y="851.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="494.4" y="862.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="491.4" y="835.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.4" y="846.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="491.4" y="819.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="494.4" y="830.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.05%)</title><rect x="491.4" y="803.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="494.4" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="491.4" y="787.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="494.4" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="491.4" y="771.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="494.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (107 samples, 1.67%)</title><rect x="492.2" y="979.0" width="19.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (107 samples, 1.67%)</title><rect x="492.2" y="963.0" width="19.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.2" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (50 samples, 0.78%)</title><rect x="492.9" y="947.0" width="9.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="495.9" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (22 samples, 0.34%)</title><rect x="493.6" y="931.0" width="4.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="496.6" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.06%)</title><rect x="496.2" y="915.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="499.2" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="497.0" y="915.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="500.0" y="926.0"></text>
</g>
<g>
<title>__lll_unlock_wake (18 samples, 0.28%)</title><rect x="497.7" y="931.0" width="3.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="500.7" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.14%)</title><rect x="499.4" y="915.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="502.4" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.14%)</title><rect x="499.4" y="899.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="502.4" y="910.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.08%)</title><rect x="500.1" y="883.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="503.1" y="894.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="500.1" y="867.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.1" y="878.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="500.1" y="851.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="503.1" y="862.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="500.7" y="851.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="503.7" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="501.0" y="931.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="504.0" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="501.6" y="931.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="504.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.83%)</title><rect x="502.1" y="947.0" width="9.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="505.1" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_wait (49 samples, 0.77%)</title><rect x="502.1" y="931.0" width="9.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="505.1" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.34%)</title><rect x="507.1" y="915.0" width="4.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="510.1" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.33%)</title><rect x="507.1" y="899.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="510.1" y="910.0"></text>
</g>
<g>
<title>sys_futex (18 samples, 0.28%)</title><rect x="507.7" y="883.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="510.7" y="894.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.25%)</title><rect x="508.0" y="867.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="511.0" y="878.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.22%)</title><rect x="508.2" y="851.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="511.2" y="862.0"></text>
</g>
<g>
<title>futex_wait_queue_me (8 samples, 0.13%)</title><rect x="508.8" y="835.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="511.8" y="846.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="509.9" y="819.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="512.9" y="830.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.05%)</title><rect x="510.3" y="835.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="513.3" y="846.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.05%)</title><rect x="511.2" y="931.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="514.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.11%)</title><rect x="511.9" y="995.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.11%)</title><rect x="511.9" y="979.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="514.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.11%)</title><rect x="511.9" y="963.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="514.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (26 samples, 0.41%)</title><rect x="513.4" y="995.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="516.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (26 samples, 0.41%)</title><rect x="513.4" y="979.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (26 samples, 0.41%)</title><rect x="513.4" y="963.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="516.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (26 samples, 0.41%)</title><rect x="513.4" y="947.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.38%)</title><rect x="513.8" y="931.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.8" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="513.9" y="915.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="516.9" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (21 samples, 0.33%)</title><rect x="514.3" y="915.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="517.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.28%)</title><rect x="514.9" y="899.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="517.9" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.28%)</title><rect x="514.9" y="883.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="517.9" y="894.0"></text>
</g>
<g>
<title>sys_futex (17 samples, 0.27%)</title><rect x="515.1" y="867.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="518.1" y="878.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.27%)</title><rect x="515.1" y="851.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="518.1" y="862.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.27%)</title><rect x="515.1" y="835.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="518.1" y="846.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.23%)</title><rect x="515.4" y="819.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="518.4" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.23%)</title><rect x="515.4" y="803.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="518.4" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.23%)</title><rect x="515.4" y="787.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="518.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService$$Lambda$65/63678775.run (928 samples, 14.52%)</title><rect x="518.2" y="1027.0" width="171.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.2" y="1038.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.lambda$executeAsync$3 (928 samples, 14.52%)</title><rect x="518.2" y="1011.0" width="171.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.2" y="1022.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (389 samples, 6.09%)</title><rect x="518.6" y="995.0" width="71.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.6" y="1006.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="518.9" y="979.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.9" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="518.9" y="963.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.9" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="518.9" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.9" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (381 samples, 5.96%)</title><rect x="519.3" y="979.0" width="70.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.3" y="990.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.14%)</title><rect x="519.3" y="963.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.3" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.05%)</title><rect x="520.4" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="523.4" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.05%)</title><rect x="520.4" y="931.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.4" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.05%)</title><rect x="520.4" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.05%)</title><rect x="520.4" y="899.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.4" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="520.6" y="883.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="523.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (372 samples, 5.82%)</title><rect x="521.0" y="963.0" width="68.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.0" y="974.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (372 samples, 5.82%)</title><rect x="521.0" y="947.0" width="68.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.0" y="958.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.03%)</title><rect x="521.0" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (370 samples, 5.79%)</title><rect x="521.3" y="931.0" width="68.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.3" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (367 samples, 5.74%)</title><rect x="521.9" y="915.0" width="67.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.9" y="926.0">one/nio..</text>
</g>
<g>
<title>[unknown] (18 samples, 0.28%)</title><rect x="523.0" y="899.0" width="3.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="526.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.28%)</title><rect x="523.0" y="883.0" width="3.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="526.0" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (16 samples, 0.25%)</title><rect x="523.2" y="867.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="526.2" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.22%)</title><rect x="523.5" y="851.0" width="2.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="526.5" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (9 samples, 0.14%)</title><rect x="524.5" y="835.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="527.5" y="846.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="526.3" y="899.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="529.3" y="910.0"></text>
</g>
<g>
<title>__send (340 samples, 5.32%)</title><rect x="526.9" y="899.0" width="62.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="529.9" y="910.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (322 samples, 5.04%)</title><rect x="530.2" y="883.0" width="59.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="533.2" y="894.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (321 samples, 5.02%)</title><rect x="530.2" y="867.0" width="59.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="533.2" y="878.0">do_sys..</text>
</g>
<g>
<title>sys_sendto (307 samples, 4.80%)</title><rect x="532.8" y="851.0" width="56.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="535.8" y="862.0">sys_se..</text>
</g>
<g>
<title>SYSC_sendto (306 samples, 4.79%)</title><rect x="532.8" y="835.0" width="56.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="535.8" y="846.0">SYSC_s..</text>
</g>
<g>
<title>sock_sendmsg (298 samples, 4.66%)</title><rect x="533.3" y="819.0" width="55.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="536.3" y="830.0">sock_..</text>
</g>
<g>
<title>inet_sendmsg (290 samples, 4.54%)</title><rect x="533.7" y="803.0" width="53.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="536.7" y="814.0">inet_..</text>
</g>
<g>
<title>tcp_sendmsg (290 samples, 4.54%)</title><rect x="533.7" y="787.0" width="53.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="536.7" y="798.0">tcp_s..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="534.1" y="771.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="537.1" y="782.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.05%)</title><rect x="535.0" y="771.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="538.0" y="782.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="535.7" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="538.7" y="782.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (275 samples, 4.30%)</title><rect x="536.1" y="771.0" width="50.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="539.1" y="782.0">tcp_s..</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.08%)</title><rect x="537.4" y="755.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="540.4" y="766.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="537.6" y="739.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="540.6" y="750.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="538.0" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="541.0" y="750.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="538.5" y="755.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="541.5" y="766.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.03%)</title><rect x="538.9" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="541.9" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="538.9" y="739.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="541.9" y="750.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (16 samples, 0.25%)</title><rect x="539.4" y="755.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="542.4" y="766.0"></text>
</g>
<g>
<title>__alloc_skb (16 samples, 0.25%)</title><rect x="539.4" y="739.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="542.4" y="750.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (7 samples, 0.11%)</title><rect x="540.2" y="723.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="543.2" y="734.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (7 samples, 0.11%)</title><rect x="540.2" y="707.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="543.2" y="718.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.05%)</title><rect x="540.9" y="691.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="543.9" y="702.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.05%)</title><rect x="541.5" y="723.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="544.5" y="734.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="542.0" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="545.0" y="734.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="542.4" y="755.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="545.4" y="766.0"></text>
</g>
<g>
<title>tcp_push (230 samples, 3.60%)</title><rect x="542.9" y="755.0" width="42.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="545.9" y="766.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (229 samples, 3.58%)</title><rect x="542.9" y="739.0" width="42.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="545.9" y="750.0">__tc..</text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.03%)</title><rect x="543.3" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="546.3" y="734.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.29 (3 samples, 0.05%)</title><rect x="543.7" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="546.7" y="734.0"></text>
</g>
<g>
<title>tcp_write_xmit (221 samples, 3.46%)</title><rect x="544.4" y="723.0" width="40.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="547.4" y="734.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (211 samples, 3.30%)</title><rect x="544.8" y="707.0" width="38.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="547.8" y="718.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (206 samples, 3.22%)</title><rect x="545.5" y="691.0" width="38.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="548.5" y="702.0">ip_..</text>
</g>
<g>
<title>ip_local_out (193 samples, 3.02%)</title><rect x="547.0" y="675.0" width="35.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="550.0" y="686.0">ip_..</text>
</g>
<g>
<title>ip_output (193 samples, 3.02%)</title><rect x="547.0" y="659.0" width="35.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="550.0" y="670.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (192 samples, 3.00%)</title><rect x="547.2" y="643.0" width="35.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="550.2" y="654.0">ip_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="547.6" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="550.6" y="638.0"></text>
</g>
<g>
<title>ip_finish_output2 (187 samples, 2.93%)</title><rect x="548.1" y="627.0" width="34.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="551.1" y="638.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (161 samples, 2.52%)</title><rect x="549.6" y="611.0" width="29.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="552.6" y="622.0">__..</text>
</g>
<g>
<title>do_softirq.part.17 (161 samples, 2.52%)</title><rect x="549.6" y="595.0" width="29.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="552.6" y="606.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (157 samples, 2.46%)</title><rect x="550.3" y="579.0" width="29.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="553.3" y="590.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (155 samples, 2.43%)</title><rect x="550.3" y="563.0" width="28.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="553.3" y="574.0">__..</text>
</g>
<g>
<title>net_rx_action (151 samples, 2.36%)</title><rect x="550.9" y="547.0" width="27.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="553.9" y="558.0">n..</text>
</g>
<g>
<title>process_backlog (149 samples, 2.33%)</title><rect x="551.2" y="531.0" width="27.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="554.2" y="542.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (145 samples, 2.27%)</title><rect x="552.0" y="515.0" width="26.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="555.0" y="526.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (142 samples, 2.22%)</title><rect x="552.5" y="499.0" width="26.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="555.5" y="510.0">_..</text>
</g>
<g>
<title>ip_rcv (137 samples, 2.14%)</title><rect x="553.5" y="483.0" width="25.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="556.5" y="494.0">i..</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="554.4" y="467.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="557.4" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish (130 samples, 2.03%)</title><rect x="554.8" y="467.0" width="24.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="557.8" y="478.0">i..</text>
</g>
<g>
<title>ip_local_deliver (127 samples, 1.99%)</title><rect x="555.3" y="451.0" width="23.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="558.3" y="462.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (127 samples, 1.99%)</title><rect x="555.3" y="435.0" width="23.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="558.3" y="446.0">i..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.03%)</title><rect x="555.5" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="558.5" y="430.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="555.9" y="419.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="558.9" y="430.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="556.2" y="419.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="559.2" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (119 samples, 1.86%)</title><rect x="556.8" y="419.0" width="22.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="559.8" y="430.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.03%)</title><rect x="557.3" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="560.3" y="414.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.06%)</title><rect x="557.9" y="403.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="560.9" y="414.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="558.1" y="387.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="561.1" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (109 samples, 1.71%)</title><rect x="558.6" y="403.0" width="20.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="561.6" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (107 samples, 1.67%)</title><rect x="558.8" y="387.0" width="19.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="561.8" y="398.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.08%)</title><rect x="559.6" y="371.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="562.6" y="382.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.06%)</title><rect x="559.7" y="355.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="562.7" y="366.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="559.7" y="339.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="562.7" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="560.1" y="339.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="563.1" y="350.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="560.1" y="323.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="563.1" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="560.1" y="307.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="563.1" y="318.0"></text>
</g>
<g>
<title>sched_clock_cpu (3 samples, 0.05%)</title><rect x="560.7" y="371.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="563.7" y="382.0"></text>
</g>
<g>
<title>sched_clock (3 samples, 0.05%)</title><rect x="560.7" y="355.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="563.7" y="366.0"></text>
</g>
<g>
<title>native_sched_clock (3 samples, 0.05%)</title><rect x="560.7" y="339.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="563.7" y="350.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="561.2" y="371.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="564.2" y="382.0"></text>
</g>
<g>
<title>tcp_ack (30 samples, 0.47%)</title><rect x="561.6" y="371.0" width="5.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="564.6" y="382.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.05%)</title><rect x="562.3" y="355.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="565.3" y="366.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (22 samples, 0.34%)</title><rect x="563.1" y="355.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="566.1" y="366.0"></text>
</g>
<g>
<title>__kfree_skb (13 samples, 0.20%)</title><rect x="563.4" y="339.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="566.4" y="350.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.08%)</title><rect x="563.4" y="323.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="566.4" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.06%)</title><rect x="563.6" y="307.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="566.6" y="318.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.11%)</title><rect x="564.4" y="323.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="567.4" y="334.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.11%)</title><rect x="564.4" y="307.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="567.4" y="318.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.09%)</title><rect x="564.5" y="291.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="567.5" y="302.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.09%)</title><rect x="564.5" y="275.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="567.5" y="286.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="565.1" y="259.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="568.1" y="270.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="565.1" y="243.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="568.1" y="254.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="565.8" y="339.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="568.8" y="350.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.40 (2 samples, 0.03%)</title><rect x="566.4" y="339.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="569.4" y="350.0"></text>
</g>
<g>
<title>tcp_data_queue (61 samples, 0.95%)</title><rect x="567.3" y="371.0" width="11.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="570.3" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (54 samples, 0.85%)</title><rect x="568.4" y="355.0" width="10.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="571.4" y="366.0"></text>
</g>
<g>
<title>__wake_up_sync_key (54 samples, 0.85%)</title><rect x="568.4" y="339.0" width="10.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="571.4" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (54 samples, 0.85%)</title><rect x="568.4" y="323.0" width="10.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="571.4" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (54 samples, 0.85%)</title><rect x="568.4" y="307.0" width="10.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="571.4" y="318.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="578.9" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="581.9" y="574.0"></text>
</g>
<g>
<title>dev_queue_xmit (18 samples, 0.28%)</title><rect x="579.3" y="611.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="582.3" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.27%)</title><rect x="579.3" y="595.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="582.3" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.09%)</title><rect x="580.4" y="579.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="583.4" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.06%)</title><rect x="580.6" y="563.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="583.6" y="574.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.05%)</title><rect x="581.9" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="584.9" y="590.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="582.1" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="585.1" y="574.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.06%)</title><rect x="582.8" y="675.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="585.8" y="686.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.03%)</title><rect x="584.1" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="587.1" y="718.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="584.9" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="587.9" y="718.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.13%)</title><rect x="585.4" y="755.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="588.4" y="766.0"></text>
</g>
<g>
<title>tcp_current_mss (7 samples, 0.11%)</title><rect x="585.6" y="739.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="588.6" y="750.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="586.3" y="723.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="589.3" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="586.9" y="771.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="589.9" y="782.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.08%)</title><rect x="587.3" y="803.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="590.3" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.05%)</title><rect x="587.6" y="787.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="590.6" y="798.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.05%)</title><rect x="587.6" y="771.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="590.6" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="587.8" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="590.8" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.08%)</title><rect x="588.4" y="819.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="591.4" y="830.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.08%)</title><rect x="588.4" y="803.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="591.4" y="814.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.08%)</title><rect x="588.4" y="787.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="591.4" y="798.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.06%)</title><rect x="588.6" y="771.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="591.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.06%)</title><rect x="589.7" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService$$Lambda$62/1246458512.action (53 samples, 0.83%)</title><rect x="590.4" y="995.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.lambda$entity$1 (53 samples, 0.83%)</title><rect x="590.4" y="979.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.put (53 samples, 0.83%)</title><rect x="590.4" y="963.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.4" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="590.6" y="947.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.6" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="590.6" y="931.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.6" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="590.6" y="915.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.6" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="590.6" y="899.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.upsert (48 samples, 0.75%)</title><rect x="591.3" y="947.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="594.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.upsert (48 samples, 0.75%)</title><rect x="591.3" y="931.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="594.3" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.upsert (46 samples, 0.72%)</title><rect x="591.3" y="915.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (42 samples, 0.66%)</title><rect x="591.3" y="899.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (40 samples, 0.63%)</title><rect x="591.7" y="883.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (35 samples, 0.55%)</title><rect x="592.6" y="867.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.6" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.25%)</title><rect x="596.1" y="851.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.1" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.25%)</title><rect x="596.1" y="835.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.1" y="846.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 0.25%)</title><rect x="596.1" y="819.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.1" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.14%)</title><rect x="597.4" y="803.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.4" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (9 samples, 0.14%)</title><rect x="597.4" y="787.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.4" y="798.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.06%)</title><rect x="598.3" y="771.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="601.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getValue (4 samples, 0.06%)</title><rect x="599.1" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.1" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.06%)</title><rect x="599.1" y="883.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.1" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.06%)</title><rect x="599.1" y="867.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.1" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="599.1" y="851.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.1" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="599.1" y="835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.1" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="599.1" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="602.1" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="599.1" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="599.1" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.enqueueFlush (2 samples, 0.03%)</title><rect x="599.8" y="915.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.8" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService$$Lambda$68/479492505.action (484 samples, 7.57%)</title><rect x="600.2" y="995.0" width="89.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.2" y="1006.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.lambda$entity$0 (484 samples, 7.57%)</title><rect x="600.2" y="979.0" width="89.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.2" y="990.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.get (484 samples, 7.57%)</title><rect x="600.2" y="963.0" width="89.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.2" y="974.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (483 samples, 7.56%)</title><rect x="600.4" y="947.0" width="89.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.4" y="958.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (18 samples, 0.28%)</title><rect x="600.6" y="931.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.6" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (18 samples, 0.28%)</title><rect x="600.6" y="915.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.6" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (18 samples, 0.28%)</title><rect x="600.6" y="899.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.6" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (18 samples, 0.28%)</title><rect x="600.6" y="883.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.28%)</title><rect x="600.6" y="867.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.6" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.23%)</title><rect x="600.7" y="851.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.7" y="862.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="600.7" y="835.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="603.7" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (9 samples, 0.14%)</title><rect x="601.1" y="835.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.1" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (9 samples, 0.14%)</title><rect x="601.1" y="819.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.1" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (9 samples, 0.14%)</title><rect x="601.1" y="803.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.1" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.14%)</title><rect x="601.1" y="787.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.1" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.14%)</title><rect x="601.1" y="771.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (9 samples, 0.14%)</title><rect x="601.1" y="755.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (9 samples, 0.14%)</title><rect x="601.1" y="739.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.06%)</title><rect x="601.5" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.5" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.05%)</title><rect x="601.5" y="707.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (3 samples, 0.05%)</title><rect x="602.2" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.2" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="602.2" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.2" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="602.2" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.2" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.06%)</title><rect x="602.8" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.8" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.06%)</title><rect x="602.8" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.8" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.05%)</title><rect x="603.0" y="803.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="606.0" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.05%)</title><rect x="603.0" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.0" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.05%)</title><rect x="603.0" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.0" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.05%)</title><rect x="603.0" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (2 samples, 0.03%)</title><rect x="603.1" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (2 samples, 0.03%)</title><rect x="603.1" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (2 samples, 0.03%)</title><rect x="603.1" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="606.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.05%)</title><rect x="603.9" y="931.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.9" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (2 samples, 0.03%)</title><rect x="604.1" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.iterator (461 samples, 7.21%)</title><rect x="604.4" y="931.0" width="85.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="607.4" y="942.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (89 samples, 1.39%)</title><rect x="604.4" y="915.0" width="16.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.4" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (65 samples, 1.02%)</title><rect x="604.6" y="899.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.6" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (65 samples, 1.02%)</title><rect x="604.6" y="883.0" width="12.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.6" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.03%)</title><rect x="605.7" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.7" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.03%)</title><rect x="605.7" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.7" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.03%)</title><rect x="605.7" y="835.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.7" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.03%)</title><rect x="605.7" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.7" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="606.3" y="867.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.3" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (54 samples, 0.85%)</title><rect x="606.6" y="867.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.6" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (54 samples, 0.85%)</title><rect x="606.6" y="851.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.6" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (54 samples, 0.85%)</title><rect x="606.6" y="835.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.6" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (54 samples, 0.85%)</title><rect x="606.6" y="819.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="609.6" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.78%)</title><rect x="607.4" y="803.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.4" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.78%)</title><rect x="607.4" y="787.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.4" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (21 samples, 0.33%)</title><rect x="607.4" y="771.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (20 samples, 0.31%)</title><rect x="607.6" y="755.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="610.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (20 samples, 0.31%)</title><rect x="607.6" y="739.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getRowAt (19 samples, 0.30%)</title><rect x="607.8" y="723.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (14 samples, 0.22%)</title><rect x="608.7" y="707.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.7" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (5 samples, 0.08%)</title><rect x="609.0" y="691.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.0" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (2 samples, 0.03%)</title><rect x="609.6" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (2 samples, 0.03%)</title><rect x="609.6" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.6" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.06%)</title><rect x="610.0" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.0" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.06%)</title><rect x="610.0" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.0" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="610.0" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="613.0" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="610.3" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="610.3" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.3" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="610.3" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.3" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="610.3" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="613.3" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferS.get (2 samples, 0.03%)</title><rect x="610.9" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (29 samples, 0.45%)</title><rect x="611.3" y="771.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="614.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (28 samples, 0.44%)</title><rect x="611.4" y="755.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.09%)</title><rect x="611.4" y="739.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.4" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.08%)</title><rect x="611.6" y="723.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.6" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.03%)</title><rect x="612.0" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (22 samples, 0.34%)</title><rect x="612.6" y="739.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.6" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.19%)</title><rect x="612.9" y="723.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.9" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.19%)</title><rect x="612.9" y="707.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.9" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.14%)</title><rect x="613.5" y="691.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.5" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.14%)</title><rect x="613.5" y="675.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="616.5" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="614.0" y="659.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.0" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="614.0" y="643.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.08%)</title><rect x="614.2" y="627.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.2" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="614.2" y="611.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.2" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.13%)</title><rect x="615.1" y="723.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (6 samples, 0.09%)</title><rect x="615.3" y="707.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.3" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="615.3" y="691.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="615.3" y="675.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.3" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="615.3" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.3" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="615.5" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.5" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.05%)</title><rect x="615.9" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (23 samples, 0.36%)</title><rect x="616.6" y="899.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (22 samples, 0.34%)</title><rect x="616.8" y="883.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.8" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.31%)</title><rect x="617.0" y="867.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.0" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (15 samples, 0.23%)</title><rect x="617.0" y="851.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.0" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (15 samples, 0.23%)</title><rect x="617.0" y="835.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.0" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (15 samples, 0.23%)</title><rect x="617.0" y="819.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.0" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.23%)</title><rect x="617.0" y="803.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.0" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.22%)</title><rect x="617.0" y="787.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (14 samples, 0.22%)</title><rect x="617.0" y="771.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (14 samples, 0.22%)</title><rect x="617.0" y="755.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.08%)</title><rect x="617.2" y="739.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.2" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.06%)</title><rect x="617.4" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (2 samples, 0.03%)</title><rect x="617.7" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.7" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.03%)</title><rect x="617.7" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (8 samples, 0.13%)</title><rect x="618.1" y="739.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.1" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.06%)</title><rect x="618.3" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.3" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.06%)</title><rect x="618.3" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.3" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="618.7" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.7" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="618.7" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.7" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="619.0" y="723.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.0" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.base (2 samples, 0.03%)</title><rect x="619.0" y="707.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.0" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.08%)</title><rect x="619.8" y="851.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.8" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.08%)</title><rect x="619.8" y="835.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="622.8" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.08%)</title><rect x="619.8" y="819.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.8" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.08%)</title><rect x="619.8" y="803.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.8" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.08%)</title><rect x="619.8" y="787.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.8" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.08%)</title><rect x="619.8" y="771.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (5 samples, 0.08%)</title><rect x="619.8" y="755.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (5 samples, 0.08%)</title><rect x="619.8" y="739.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="619.8" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (3 samples, 0.05%)</title><rect x="620.1" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.1" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="620.1" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.1" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="620.1" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (372 samples, 5.82%)</title><rect x="620.9" y="915.0" width="68.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.9" y="926.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (24 samples, 0.38%)</title><rect x="621.2" y="899.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (24 samples, 0.38%)</title><rect x="621.2" y="883.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (24 samples, 0.38%)</title><rect x="621.2" y="867.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (22 samples, 0.34%)</title><rect x="621.6" y="851.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.08%)</title><rect x="622.5" y="835.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (5 samples, 0.08%)</title><rect x="622.5" y="819.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (12 samples, 0.19%)</title><rect x="623.5" y="835.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.13%)</title><rect x="624.2" y="819.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.2" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (3 samples, 0.05%)</title><rect x="625.1" y="803.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.16%)</title><rect x="625.7" y="899.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (10 samples, 0.16%)</title><rect x="625.7" y="883.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 0.16%)</title><rect x="625.7" y="867.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="628.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (9 samples, 0.14%)</title><rect x="625.9" y="851.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (9 samples, 0.14%)</title><rect x="625.9" y="835.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (9 samples, 0.14%)</title><rect x="625.9" y="819.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.05%)</title><rect x="627.0" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (2 samples, 0.03%)</title><rect x="627.1" y="787.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (2 samples, 0.03%)</title><rect x="627.1" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getOffsetsIndex (2 samples, 0.03%)</title><rect x="627.1" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.iterator (315 samples, 4.93%)</title><rect x="627.5" y="899.0" width="58.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.5" y="910.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.&lt;init&gt; (315 samples, 4.93%)</title><rect x="627.5" y="883.0" width="58.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.5" y="894.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getOffsetsIndex (315 samples, 4.93%)</title><rect x="627.5" y="867.0" width="58.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.5" y="878.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (17 samples, 0.27%)</title><rect x="627.5" y="851.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.5" y="862.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (17 samples, 0.27%)</title><rect x="627.5" y="835.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.5" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.17%)</title><rect x="628.3" y="819.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.3" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.06%)</title><rect x="629.4" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (2 samples, 0.03%)</title><rect x="630.3" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (298 samples, 4.66%)</title><rect x="630.7" y="851.0" width="55.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.7" y="862.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (28 samples, 0.44%)</title><rect x="636.7" y="835.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.7" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="638.2" y="819.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.2" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (18 samples, 0.28%)</title><rect x="638.6" y="819.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (12 samples, 0.19%)</title><rect x="639.7" y="803.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.7" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (187 samples, 2.93%)</title><rect x="641.9" y="835.0" width="34.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.9" y="846.0">ja..</text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="649.5" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.5" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (144 samples, 2.25%)</title><rect x="649.9" y="819.0" width="26.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.9" y="830.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (144 samples, 2.25%)</title><rect x="649.9" y="803.0" width="26.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.9" y="814.0">j..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (138 samples, 2.16%)</title><rect x="650.8" y="787.0" width="25.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="653.8" y="798.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (111 samples, 1.74%)</title><rect x="654.3" y="771.0" width="20.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="657.3" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (111 samples, 1.74%)</title><rect x="654.3" y="755.0" width="20.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.3" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (93 samples, 1.46%)</title><rect x="657.6" y="739.0" width="17.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.6" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (11 samples, 0.17%)</title><rect x="669.2" y="723.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.2" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.14%)</title><rect x="669.6" y="707.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.08%)</title><rect x="670.4" y="691.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.4" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.08%)</title><rect x="670.4" y="675.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.4" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (19 samples, 0.30%)</title><rect x="671.3" y="723.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.3" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (19 samples, 0.30%)</title><rect x="671.3" y="707.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.13%)</title><rect x="672.8" y="691.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="675.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="674.2" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.2" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.05%)</title><rect x="674.2" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="677.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.13%)</title><rect x="674.8" y="771.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="677.8" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (30 samples, 0.47%)</title><rect x="676.5" y="835.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.5" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (30 samples, 0.47%)</title><rect x="676.5" y="819.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.5" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (29 samples, 0.45%)</title><rect x="676.6" y="803.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.6" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (25 samples, 0.39%)</title><rect x="677.4" y="787.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (25 samples, 0.39%)</title><rect x="677.4" y="771.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (25 samples, 0.39%)</title><rect x="677.4" y="755.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.4" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (24 samples, 0.38%)</title><rect x="677.6" y="739.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.6" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.09%)</title><rect x="677.6" y="723.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.6" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.09%)</title><rect x="677.6" y="707.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="677.9" y="691.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.9" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.06%)</title><rect x="677.9" y="675.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.9" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.28%)</title><rect x="678.7" y="723.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.7" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.28%)</title><rect x="678.7" y="707.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="680.9" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="681.6" y="691.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.6" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="681.6" y="675.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.6" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferS.get (9 samples, 0.14%)</title><rect x="682.0" y="835.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (2 samples, 0.03%)</title><rect x="683.3" y="819.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.3" y="830.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.17%)</title><rect x="683.7" y="835.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.7" y="846.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.17%)</title><rect x="683.7" y="819.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (11 samples, 0.17%)</title><rect x="683.7" y="803.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.7" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (10 samples, 0.16%)</title><rect x="683.8" y="787.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.8" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.09%)</title><rect x="684.4" y="771.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.iterator (20 samples, 0.31%)</title><rect x="685.9" y="899.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (3 samples, 0.05%)</title><rect x="686.2" y="883.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.2" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.03%)</title><rect x="686.4" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.4" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="686.4" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.4" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="686.4" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (15 samples, 0.23%)</title><rect x="686.8" y="883.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.03%)</title><rect x="686.8" y="867.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="686.8" y="851.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.8" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.iterator (11 samples, 0.17%)</title><rect x="687.2" y="867.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.16%)</title><rect x="687.3" y="851.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (10 samples, 0.16%)</title><rect x="687.3" y="835.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 0.16%)</title><rect x="687.3" y="819.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (10 samples, 0.16%)</title><rect x="687.3" y="803.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (10 samples, 0.16%)</title><rect x="687.3" y="787.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.05%)</title><rect x="687.3" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.3" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.05%)</title><rect x="687.3" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.05%)</title><rect x="687.3" y="739.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.3" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.05%)</title><rect x="687.3" y="723.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.05%)</title><rect x="687.3" y="707.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.3" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.05%)</title><rect x="687.3" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (7 samples, 0.11%)</title><rect x="687.9" y="771.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.11%)</title><rect x="687.9" y="755.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.11%)</title><rect x="687.9" y="739.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.11%)</title><rect x="687.9" y="723.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.9" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.11%)</title><rect x="687.9" y="707.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.9" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.06%)</title><rect x="688.5" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.5" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.06%)</title><rect x="688.5" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.iterator (2 samples, 0.03%)</title><rect x="689.2" y="867.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (2 samples, 0.03%)</title><rect x="689.2" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.2" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (2 samples, 0.03%)</title><rect x="689.2" y="835.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.2" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.&lt;init&gt; (2 samples, 0.03%)</title><rect x="689.2" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.2" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="689.2" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.2" y="814.0"></text>
</g>
<g>
<title>[asyncWorker tid=3250] (1,105 samples, 17.29%)</title><rect x="689.6" y="1091.0" width="204.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="692.6" y="1102.0">[asyncWorker tid=3250]</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="689.6" y="1075.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="692.6" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.08%)</title><rect x="689.7" y="1059.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="692.7" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.08%)</title><rect x="689.7" y="1043.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="692.7" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.06%)</title><rect x="689.7" y="1027.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="692.7" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="690.1" y="1011.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="693.1" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="690.1" y="995.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="693.1" y="1006.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.06%)</title><rect x="690.9" y="1075.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="693.9" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="691.2" y="1059.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="694.2" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="691.2" y="1043.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="694.2" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="691.2" y="1027.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="694.2" y="1038.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="691.2" y="1011.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="694.2" y="1022.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="691.2" y="995.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="694.2" y="1006.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="691.2" y="979.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="694.2" y="990.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="691.2" y="963.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="694.2" y="974.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="691.2" y="947.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="694.2" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="691.2" y="931.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="694.2" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,094 samples, 17.12%)</title><rect x="691.6" y="1075.0" width="202.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.6" y="1086.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,094 samples, 17.12%)</title><rect x="691.6" y="1059.0" width="202.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.6" y="1070.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,094 samples, 17.12%)</title><rect x="691.6" y="1043.0" width="202.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.6" y="1054.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (158 samples, 2.47%)</title><rect x="692.0" y="1027.0" width="29.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.0" y="1038.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (158 samples, 2.47%)</title><rect x="692.0" y="1011.0" width="29.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.0" y="1022.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (131 samples, 2.05%)</title><rect x="692.0" y="995.0" width="24.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.0" y="1006.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.06%)</title><rect x="692.7" y="979.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.06%)</title><rect x="692.7" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.06%)</title><rect x="692.7" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (10 samples, 0.16%)</title><rect x="693.4" y="979.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.16%)</title><rect x="693.4" y="963.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="694.9" y="947.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="694.9" y="931.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="694.9" y="915.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="697.9" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="694.9" y="899.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="697.9" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="694.9" y="883.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="697.9" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="694.9" y="867.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="697.9" y="878.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="694.9" y="851.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="697.9" y="862.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="694.9" y="835.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="697.9" y="846.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="694.9" y="819.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="697.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.03%)</title><rect x="695.3" y="979.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.03%)</title><rect x="695.3" y="963.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (111 samples, 1.74%)</title><rect x="695.7" y="979.0" width="20.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="698.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (110 samples, 1.72%)</title><rect x="695.8" y="963.0" width="20.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.8" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (45 samples, 0.70%)</title><rect x="695.8" y="947.0" width="8.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="698.8" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (17 samples, 0.27%)</title><rect x="696.9" y="931.0" width="3.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="699.9" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.08%)</title><rect x="699.2" y="915.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="702.2" y="926.0"></text>
</g>
<g>
<title>__lll_unlock_wake (18 samples, 0.28%)</title><rect x="700.1" y="931.0" width="3.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="703.1" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.14%)</title><rect x="701.7" y="915.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="704.7" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.14%)</title><rect x="701.7" y="899.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="704.7" y="910.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="702.7" y="883.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="705.7" y="894.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="702.7" y="867.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="705.7" y="878.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="702.9" y="851.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="705.9" y="862.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="703.0" y="835.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="706.0" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="703.4" y="931.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="706.4" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="703.8" y="931.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="706.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 1.02%)</title><rect x="704.2" y="947.0" width="12.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="707.2" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_wait (63 samples, 0.99%)</title><rect x="704.2" y="931.0" width="11.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="707.2" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.64%)</title><rect x="708.2" y="915.0" width="7.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="711.2" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.63%)</title><rect x="708.2" y="899.0" width="7.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="711.2" y="910.0"></text>
</g>
<g>
<title>sys_futex (34 samples, 0.53%)</title><rect x="709.3" y="883.0" width="6.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="712.3" y="894.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.50%)</title><rect x="709.3" y="867.0" width="5.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="712.3" y="878.0"></text>
</g>
<g>
<title>futex_wait (28 samples, 0.44%)</title><rect x="709.9" y="851.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="712.9" y="862.0"></text>
</g>
<g>
<title>futex_wait_queue_me (16 samples, 0.25%)</title><rect x="711.4" y="835.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="714.4" y="846.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.16%)</title><rect x="712.5" y="819.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="715.5" y="830.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.13%)</title><rect x="712.8" y="803.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="715.8" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.11%)</title><rect x="713.0" y="787.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="716.0" y="798.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.05%)</title><rect x="714.3" y="835.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="717.3" y="846.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="715.2" y="867.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="718.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.03%)</title><rect x="716.2" y="995.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.03%)</title><rect x="716.2" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.03%)</title><rect x="716.2" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.03%)</title><rect x="716.2" y="947.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.03%)</title><rect x="716.2" y="931.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="716.2" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="716.2" y="899.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="719.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (25 samples, 0.39%)</title><rect x="716.5" y="995.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (25 samples, 0.39%)</title><rect x="716.5" y="979.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (25 samples, 0.39%)</title><rect x="716.5" y="963.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="719.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (25 samples, 0.39%)</title><rect x="716.5" y="947.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.38%)</title><rect x="716.7" y="931.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.7" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.06%)</title><rect x="716.7" y="915.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="719.7" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="716.9" y="899.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="719.9" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (20 samples, 0.31%)</title><rect x="717.4" y="915.0" width="3.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="720.4" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.23%)</title><rect x="718.4" y="899.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="721.4" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.23%)</title><rect x="718.4" y="883.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="721.4" y="894.0"></text>
</g>
<g>
<title>sys_futex (13 samples, 0.20%)</title><rect x="718.7" y="867.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="721.7" y="878.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.20%)</title><rect x="718.7" y="851.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="721.7" y="862.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.20%)</title><rect x="718.7" y="835.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="721.7" y="846.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.19%)</title><rect x="718.9" y="819.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="721.9" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.19%)</title><rect x="718.9" y="803.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="721.9" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.19%)</title><rect x="718.9" y="787.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="721.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService$$Lambda$65/63678775.run (934 samples, 14.62%)</title><rect x="721.1" y="1027.0" width="172.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.1" y="1038.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.lambda$executeAsync$3 (934 samples, 14.62%)</title><rect x="721.1" y="1011.0" width="172.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="724.1" y="1022.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="721.5" y="995.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="724.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (405 samples, 6.34%)</title><rect x="722.2" y="995.0" width="74.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.2" y="1006.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.14%)</title><rect x="723.5" y="979.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.5" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.14%)</title><rect x="723.5" y="963.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.5" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.14%)</title><rect x="723.5" y="947.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.5" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.06%)</title><rect x="724.3" y="931.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="727.3" y="942.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.06%)</title><rect x="724.3" y="915.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="727.3" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (382 samples, 5.98%)</title><rect x="725.2" y="979.0" width="70.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.2" y="990.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17 samples, 0.27%)</title><rect x="725.4" y="963.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.4" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 0.16%)</title><rect x="726.7" y="947.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.7" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.16%)</title><rect x="726.7" y="931.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.7" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.16%)</title><rect x="726.7" y="915.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (10 samples, 0.16%)</title><rect x="726.7" y="899.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.7" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.08%)</title><rect x="727.6" y="883.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="730.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (364 samples, 5.70%)</title><rect x="728.5" y="963.0" width="67.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.5" y="974.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (364 samples, 5.70%)</title><rect x="728.5" y="947.0" width="67.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.5" y="958.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (363 samples, 5.68%)</title><rect x="728.7" y="931.0" width="67.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.7" y="942.0">one/nio..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="728.7" y="915.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="731.7" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.08%)</title><rect x="729.1" y="899.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="732.1" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="729.6" y="883.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="732.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.05%)</title><rect x="730.0" y="915.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (353 samples, 5.52%)</title><rect x="730.6" y="915.0" width="65.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.6" y="926.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.03%)</title><rect x="731.5" y="899.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="734.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.23%)</title><rect x="731.8" y="899.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="734.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.23%)</title><rect x="731.8" y="883.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="734.8" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="731.8" y="867.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="734.8" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.14%)</title><rect x="732.2" y="867.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="735.2" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="732.4" y="851.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="735.4" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="733.0" y="835.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="736.0" y="846.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="733.5" y="851.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="736.5" y="862.0"></text>
</g>
<g>
<title>__send (4 samples, 0.06%)</title><rect x="733.9" y="867.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="736.9" y="878.0"></text>
</g>
<g>
<title>__send (330 samples, 5.16%)</title><rect x="734.8" y="899.0" width="60.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="737.8" y="910.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (316 samples, 4.95%)</title><rect x="737.4" y="883.0" width="58.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="740.4" y="894.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (316 samples, 4.95%)</title><rect x="737.4" y="867.0" width="58.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="740.4" y="878.0">do_sys..</text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.05%)</title><rect x="739.1" y="851.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="742.1" y="862.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="739.2" y="835.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="742.2" y="846.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="739.2" y="819.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="742.2" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="739.2" y="803.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="742.2" y="814.0"></text>
</g>
<g>
<title>sys_sendto (304 samples, 4.76%)</title><rect x="739.6" y="851.0" width="56.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="742.6" y="862.0">sys_se..</text>
</g>
<g>
<title>SYSC_sendto (303 samples, 4.74%)</title><rect x="739.8" y="835.0" width="55.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="742.8" y="846.0">SYSC_..</text>
</g>
<g>
<title>sock_sendmsg (297 samples, 4.65%)</title><rect x="740.3" y="819.0" width="54.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="743.3" y="830.0">sock_..</text>
</g>
<g>
<title>inet_sendmsg (289 samples, 4.52%)</title><rect x="740.7" y="803.0" width="53.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="743.7" y="814.0">inet_..</text>
</g>
<g>
<title>tcp_sendmsg (287 samples, 4.49%)</title><rect x="741.1" y="787.0" width="53.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="744.1" y="798.0">tcp_s..</text>
</g>
<g>
<title>tcp_sendmsg_locked (278 samples, 4.35%)</title><rect x="742.4" y="771.0" width="51.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="745.4" y="782.0">tcp_s..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="743.5" y="755.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="746.5" y="766.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="743.7" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="746.7" y="750.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.05%)</title><rect x="744.2" y="755.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="747.2" y="766.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (17 samples, 0.27%)</title><rect x="745.0" y="755.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="748.0" y="766.0"></text>
</g>
<g>
<title>__alloc_skb (16 samples, 0.25%)</title><rect x="745.1" y="739.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="748.1" y="750.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (5 samples, 0.08%)</title><rect x="745.7" y="723.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="748.7" y="734.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.08%)</title><rect x="745.7" y="707.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="748.7" y="718.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.09%)</title><rect x="746.6" y="723.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="749.6" y="734.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="747.7" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="750.7" y="734.0"></text>
</g>
<g>
<title>tcp_push (241 samples, 3.77%)</title><rect x="748.1" y="755.0" width="44.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="751.1" y="766.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (241 samples, 3.77%)</title><rect x="748.1" y="739.0" width="44.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="751.1" y="750.0">__tc..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.29 (3 samples, 0.05%)</title><rect x="748.5" y="723.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="751.5" y="734.0"></text>
</g>
<g>
<title>tcp_write_xmit (236 samples, 3.69%)</title><rect x="749.0" y="723.0" width="43.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="752.0" y="734.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (221 samples, 3.46%)</title><rect x="750.5" y="707.0" width="40.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="753.5" y="718.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (201 samples, 3.15%)</title><rect x="753.3" y="691.0" width="37.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="756.3" y="702.0">ip_..</text>
</g>
<g>
<title>ip_local_out (199 samples, 3.11%)</title><rect x="753.5" y="675.0" width="36.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="756.5" y="686.0">ip_..</text>
</g>
<g>
<title>ip_output (195 samples, 3.05%)</title><rect x="754.2" y="659.0" width="36.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="757.2" y="670.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (194 samples, 3.04%)</title><rect x="754.4" y="643.0" width="35.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="757.4" y="654.0">ip_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="754.7" y="627.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="757.7" y="638.0"></text>
</g>
<g>
<title>ip_finish_output2 (189 samples, 2.96%)</title><rect x="755.3" y="627.0" width="34.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="758.3" y="638.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (158 samples, 2.47%)</title><rect x="755.7" y="611.0" width="29.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="758.7" y="622.0">__..</text>
</g>
<g>
<title>do_softirq.part.17 (157 samples, 2.46%)</title><rect x="755.9" y="595.0" width="28.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="758.9" y="606.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (155 samples, 2.43%)</title><rect x="756.2" y="579.0" width="28.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="759.2" y="590.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (153 samples, 2.39%)</title><rect x="756.2" y="563.0" width="28.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="759.2" y="574.0">__..</text>
</g>
<g>
<title>net_rx_action (148 samples, 2.32%)</title><rect x="756.8" y="547.0" width="27.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="759.8" y="558.0">n..</text>
</g>
<g>
<title>process_backlog (146 samples, 2.28%)</title><rect x="757.1" y="531.0" width="27.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="760.1" y="542.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (142 samples, 2.22%)</title><rect x="757.7" y="515.0" width="26.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="760.7" y="526.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (139 samples, 2.18%)</title><rect x="757.9" y="499.0" width="25.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="760.9" y="510.0">_..</text>
</g>
<g>
<title>ip_rcv (131 samples, 2.05%)</title><rect x="759.4" y="483.0" width="24.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="762.4" y="494.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (130 samples, 2.03%)</title><rect x="759.5" y="467.0" width="24.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="762.5" y="478.0">i..</text>
</g>
<g>
<title>ip_local_deliver (128 samples, 2.00%)</title><rect x="759.7" y="451.0" width="23.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="762.7" y="462.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (124 samples, 1.94%)</title><rect x="760.1" y="435.0" width="22.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="763.1" y="446.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (121 samples, 1.89%)</title><rect x="760.7" y="419.0" width="22.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="763.7" y="430.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.08%)</title><rect x="761.0" y="403.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="764.0" y="414.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.06%)</title><rect x="762.1" y="403.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="765.1" y="414.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="762.1" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="765.1" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (106 samples, 1.66%)</title><rect x="763.4" y="403.0" width="19.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="766.4" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (104 samples, 1.63%)</title><rect x="763.8" y="387.0" width="19.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="766.8" y="398.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.06%)</title><rect x="764.4" y="371.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="767.4" y="382.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.05%)</title><rect x="764.5" y="355.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="767.5" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.05%)</title><rect x="764.5" y="339.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="767.5" y="350.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.05%)</title><rect x="764.5" y="323.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="767.5" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="764.7" y="307.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="767.7" y="318.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="765.3" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="768.3" y="382.0"></text>
</g>
<g>
<title>tcp_ack (27 samples, 0.42%)</title><rect x="765.6" y="371.0" width="5.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="768.6" y="382.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (19 samples, 0.30%)</title><rect x="766.9" y="355.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="769.9" y="366.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.11%)</title><rect x="767.7" y="339.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="770.7" y="350.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="767.7" y="323.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="770.7" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="767.9" y="307.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="770.9" y="318.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.05%)</title><rect x="768.4" y="323.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="771.4" y="334.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.05%)</title><rect x="768.4" y="307.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="771.4" y="318.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.03%)</title><rect x="768.6" y="291.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="771.6" y="302.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="768.6" y="275.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="771.6" y="286.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.40 (4 samples, 0.06%)</title><rect x="769.5" y="339.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="772.5" y="350.0"></text>
</g>
<g>
<title>tcp_data_queue (63 samples, 0.99%)</title><rect x="770.8" y="371.0" width="11.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="773.8" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (54 samples, 0.85%)</title><rect x="771.9" y="355.0" width="10.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="774.9" y="366.0"></text>
</g>
<g>
<title>__wake_up_sync_key (54 samples, 0.85%)</title><rect x="771.9" y="339.0" width="10.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="774.9" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (54 samples, 0.85%)</title><rect x="771.9" y="323.0" width="10.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="774.9" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (54 samples, 0.85%)</title><rect x="771.9" y="307.0" width="10.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="774.9" y="318.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="781.9" y="355.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="784.9" y="366.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="782.6" y="371.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="785.6" y="382.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="783.6" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="786.6" y="510.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="784.1" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="787.1" y="558.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="784.5" y="563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="787.5" y="574.0"></text>
</g>
<g>
<title>dev_queue_xmit (29 samples, 0.45%)</title><rect x="784.8" y="611.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="787.8" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (29 samples, 0.45%)</title><rect x="784.8" y="595.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="787.8" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (16 samples, 0.25%)</title><rect x="786.0" y="579.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="789.0" y="590.0"></text>
</g>
<g>
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="786.3" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="789.3" y="574.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.16%)</title><rect x="786.9" y="563.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="789.9" y="574.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="787.1" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="790.1" y="558.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.08%)</title><rect x="787.4" y="547.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="790.4" y="558.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.08%)</title><rect x="787.4" y="531.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="790.4" y="542.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.08%)</title><rect x="787.4" y="515.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="790.4" y="526.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.08%)</title><rect x="789.1" y="579.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="792.1" y="590.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.05%)</title><rect x="789.5" y="563.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="792.5" y="574.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.08%)</title><rect x="790.4" y="691.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="793.4" y="702.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.08%)</title><rect x="790.4" y="675.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="793.4" y="686.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="790.9" y="659.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="793.9" y="670.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.05%)</title><rect x="791.5" y="707.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="794.5" y="718.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="791.7" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="794.7" y="702.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (2 samples, 0.03%)</title><rect x="791.7" y="675.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="794.7" y="686.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.08%)</title><rect x="792.8" y="755.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="795.8" y="766.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="792.8" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="795.8" y="750.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.05%)</title><rect x="793.2" y="739.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="796.2" y="750.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (2 samples, 0.03%)</title><rect x="793.3" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="796.3" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="793.7" y="771.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="796.7" y="782.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.09%)</title><rect x="794.1" y="803.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="797.1" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.08%)</title><rect x="794.3" y="787.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="797.3" y="798.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.08%)</title><rect x="794.3" y="771.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="797.3" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="794.6" y="755.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="797.6" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="795.2" y="819.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="798.2" y="830.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.05%)</title><rect x="795.2" y="803.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="798.2" y="814.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="795.2" y="787.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="798.2" y="798.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="795.2" y="771.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="798.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.11%)</title><rect x="795.7" y="979.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService$$Lambda$62/1246458512.action (59 samples, 0.92%)</title><rect x="797.0" y="995.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="800.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.lambda$entity$1 (58 samples, 0.91%)</title><rect x="797.0" y="979.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="800.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.put (58 samples, 0.91%)</title><rect x="797.0" y="963.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.0" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="797.2" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="800.2" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="797.2" y="931.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.2" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="797.2" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.2" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="797.2" y="899.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="800.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.upsert (54 samples, 0.85%)</title><rect x="797.8" y="947.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.upsert (54 samples, 0.85%)</title><rect x="797.8" y="931.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.8" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.upsert (49 samples, 0.77%)</title><rect x="797.8" y="915.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (47 samples, 0.74%)</title><rect x="797.8" y="899.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="800.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (42 samples, 0.66%)</title><rect x="798.7" y="883.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="801.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (37 samples, 0.58%)</title><rect x="799.4" y="867.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.4" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.30%)</title><rect x="802.8" y="851.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.8" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.30%)</title><rect x="802.8" y="835.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.8" y="846.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (19 samples, 0.30%)</title><rect x="802.8" y="819.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="805.8" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.17%)</title><rect x="804.2" y="803.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.2" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (11 samples, 0.17%)</title><rect x="804.2" y="787.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.2" y="798.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.06%)</title><rect x="805.5" y="771.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="808.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getValue (2 samples, 0.03%)</title><rect x="806.5" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.5" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="806.5" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.5" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="806.5" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="809.5" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="806.5" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.5" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="806.5" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.5" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="806.5" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.5" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="806.5" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="806.5" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.enqueueFlush (5 samples, 0.08%)</title><rect x="806.8" y="915.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.8" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="807.4" y="899.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.4" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService$$Lambda$68/479492505.action (464 samples, 7.26%)</title><rect x="807.9" y="995.0" width="85.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.9" y="1006.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.lambda$entity$0 (464 samples, 7.26%)</title><rect x="807.9" y="979.0" width="85.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.9" y="990.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.get (464 samples, 7.26%)</title><rect x="807.9" y="963.0" width="85.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.9" y="974.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (462 samples, 7.23%)</title><rect x="808.3" y="947.0" width="85.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.3" y="958.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (14 samples, 0.22%)</title><rect x="808.5" y="931.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="811.5" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (14 samples, 0.22%)</title><rect x="808.5" y="915.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="811.5" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (14 samples, 0.22%)</title><rect x="808.5" y="899.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="811.5" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (14 samples, 0.22%)</title><rect x="808.5" y="883.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="811.5" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14 samples, 0.22%)</title><rect x="808.5" y="867.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.5" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.20%)</title><rect x="808.5" y="851.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.5" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (11 samples, 0.17%)</title><rect x="808.5" y="835.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="811.5" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (11 samples, 0.17%)</title><rect x="808.5" y="819.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="811.5" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (11 samples, 0.17%)</title><rect x="808.5" y="803.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="811.5" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.17%)</title><rect x="808.5" y="787.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="811.5" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.17%)</title><rect x="808.5" y="771.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="811.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (10 samples, 0.16%)</title><rect x="808.7" y="755.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (10 samples, 0.16%)</title><rect x="808.7" y="739.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="811.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.05%)</title><rect x="808.9" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="811.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (6 samples, 0.09%)</title><rect x="809.4" y="723.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.4" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="809.6" y="707.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="812.6" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="809.6" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.6" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="810.1" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.1" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="810.1" y="691.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.1" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="810.1" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="810.1" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.1" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="810.1" y="643.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.1" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="810.1" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.1" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.03%)</title><rect x="810.5" y="835.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.5" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.03%)</title><rect x="810.5" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.5" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.03%)</title><rect x="811.1" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.1" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (2 samples, 0.03%)</title><rect x="811.1" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="814.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.iterator (445 samples, 6.96%)</title><rect x="811.4" y="931.0" width="82.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="814.4" y="942.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (59 samples, 0.92%)</title><rect x="811.8" y="915.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="814.8" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (41 samples, 0.64%)</title><rect x="812.4" y="899.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.4" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (41 samples, 0.64%)</title><rect x="812.4" y="883.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.4" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.05%)</title><rect x="812.9" y="867.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.9" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.05%)</title><rect x="812.9" y="851.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="815.9" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.05%)</title><rect x="812.9" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="815.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.05%)</title><rect x="812.9" y="819.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="815.9" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.03%)</title><rect x="812.9" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.9" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.03%)</title><rect x="812.9" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="815.9" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.03%)</title><rect x="812.9" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.9" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="813.5" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.5" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="813.5" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.5" y="862.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="813.5" y="835.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="816.5" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="813.8" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.8" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (30 samples, 0.47%)</title><rect x="814.2" y="867.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.2" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (30 samples, 0.47%)</title><rect x="814.2" y="851.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="817.2" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (29 samples, 0.45%)</title><rect x="814.4" y="835.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="817.4" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (27 samples, 0.42%)</title><rect x="814.8" y="819.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.8" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25 samples, 0.39%)</title><rect x="815.1" y="803.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.1" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (23 samples, 0.36%)</title><rect x="815.5" y="787.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="818.5" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (11 samples, 0.17%)</title><rect x="815.5" y="771.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (10 samples, 0.16%)</title><rect x="815.7" y="755.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="818.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (10 samples, 0.16%)</title><rect x="815.7" y="739.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="818.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getRowAt (9 samples, 0.14%)</title><rect x="815.9" y="723.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (6 samples, 0.09%)</title><rect x="816.4" y="707.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.4" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (3 samples, 0.05%)</title><rect x="816.4" y="691.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.4" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="817.0" y="691.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (12 samples, 0.19%)</title><rect x="817.5" y="771.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (12 samples, 0.19%)</title><rect x="817.5" y="755.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.06%)</title><rect x="817.5" y="739.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="820.5" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.06%)</title><rect x="817.5" y="723.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (8 samples, 0.13%)</title><rect x="818.3" y="739.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="821.3" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.06%)</title><rect x="818.3" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.3" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.06%)</title><rect x="818.3" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.3" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="818.6" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.6" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="818.6" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.6" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="818.6" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="818.6" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="818.6" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.6" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.06%)</title><rect x="819.0" y="723.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.0" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.06%)</title><rect x="819.0" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.0" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="819.0" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="819.0" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (2 samples, 0.03%)</title><rect x="819.4" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (15 samples, 0.23%)</title><rect x="819.9" y="899.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.22%)</title><rect x="820.1" y="883.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.1" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.20%)</title><rect x="820.1" y="867.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.1" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (9 samples, 0.14%)</title><rect x="820.1" y="851.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.1" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.13%)</title><rect x="820.3" y="835.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.3" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.13%)</title><rect x="820.3" y="819.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="823.3" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.11%)</title><rect x="820.5" y="803.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.5" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.09%)</title><rect x="820.7" y="787.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (5 samples, 0.08%)</title><rect x="820.9" y="771.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (5 samples, 0.08%)</title><rect x="820.9" y="755.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (4 samples, 0.06%)</title><rect x="821.0" y="739.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.0" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="821.0" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.0" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="821.0" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.0" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="821.0" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.0" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="821.0" y="675.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="824.0" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.06%)</title><rect x="821.8" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.8" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.06%)</title><rect x="821.8" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.8" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.06%)</title><rect x="821.8" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.8" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.06%)</title><rect x="821.8" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.8" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.06%)</title><rect x="821.8" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.8" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.06%)</title><rect x="821.8" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (3 samples, 0.05%)</title><rect x="822.0" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (3 samples, 0.05%)</title><rect x="822.0" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="825.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="822.0" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.0" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="822.0" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (384 samples, 6.01%)</title><rect x="822.7" y="915.0" width="70.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.7" y="926.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (25 samples, 0.39%)</title><rect x="823.1" y="899.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (25 samples, 0.39%)</title><rect x="823.1" y="883.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (20 samples, 0.31%)</title><rect x="823.4" y="867.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (20 samples, 0.31%)</title><rect x="823.4" y="851.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="826.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.08%)</title><rect x="824.6" y="835.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="827.6" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (5 samples, 0.08%)</title><rect x="824.6" y="819.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="827.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (9 samples, 0.14%)</title><rect x="825.5" y="835.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.05%)</title><rect x="826.6" y="819.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="829.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.05%)</title><rect x="827.1" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.16%)</title><rect x="827.7" y="899.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (9 samples, 0.14%)</title><rect x="827.9" y="883.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (8 samples, 0.13%)</title><rect x="828.1" y="867.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.09%)</title><rect x="828.4" y="851.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.09%)</title><rect x="828.4" y="835.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="828.6" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.05%)</title><rect x="829.0" y="819.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="832.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="829.2" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.2" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (2 samples, 0.03%)</title><rect x="829.2" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (2 samples, 0.03%)</title><rect x="829.2" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="832.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.iterator (324 samples, 5.07%)</title><rect x="829.7" y="899.0" width="59.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.7" y="910.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.&lt;init&gt; (324 samples, 5.07%)</title><rect x="829.7" y="883.0" width="59.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="832.7" y="894.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getOffsetsIndex (324 samples, 5.07%)</title><rect x="829.7" y="867.0" width="59.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.7" y="878.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 0.28%)</title><rect x="829.7" y="851.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.7" y="862.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (17 samples, 0.27%)</title><rect x="829.9" y="835.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.9" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (9 samples, 0.14%)</title><rect x="830.8" y="819.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="833.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (3 samples, 0.05%)</title><rect x="832.5" y="819.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (306 samples, 4.79%)</title><rect x="833.0" y="851.0" width="56.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.0" y="862.0">ru/mai..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (23 samples, 0.36%)</title><rect x="837.1" y="835.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="840.1" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.05%)</title><rect x="838.0" y="819.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="841.0" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (13 samples, 0.20%)</title><rect x="838.6" y="819.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="841.6" y="830.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (2 samples, 0.03%)</title><rect x="839.0" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="842.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (9 samples, 0.14%)</title><rect x="839.3" y="803.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="842.3" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (2 samples, 0.03%)</title><rect x="841.0" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.0" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (209 samples, 3.27%)</title><rect x="841.4" y="835.0" width="38.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="844.4" y="846.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (160 samples, 2.50%)</title><rect x="850.4" y="819.0" width="29.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.4" y="830.0">ja..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (160 samples, 2.50%)</title><rect x="850.4" y="803.0" width="29.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.4" y="814.0">ja..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (156 samples, 2.44%)</title><rect x="851.1" y="787.0" width="28.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="854.1" y="798.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (134 samples, 2.10%)</title><rect x="854.5" y="771.0" width="24.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="857.5" y="782.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (134 samples, 2.10%)</title><rect x="854.5" y="755.0" width="24.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="857.5" y="766.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (122 samples, 1.91%)</title><rect x="856.7" y="739.0" width="22.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.7" y="750.0">j..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.14%)</title><rect x="872.0" y="723.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.0" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.11%)</title><rect x="872.4" y="707.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.11%)</title><rect x="872.4" y="691.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.4" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.11%)</title><rect x="872.4" y="675.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.4" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (30 samples, 0.47%)</title><rect x="873.7" y="723.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.7" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (29 samples, 0.45%)</title><rect x="873.9" y="707.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.16%)</title><rect x="876.4" y="691.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="879.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.08%)</title><rect x="878.3" y="691.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="881.3" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.08%)</title><rect x="878.3" y="675.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="881.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.06%)</title><rect x="879.2" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.2" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (27 samples, 0.42%)</title><rect x="879.9" y="835.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="882.9" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (27 samples, 0.42%)</title><rect x="879.9" y="819.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="882.9" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (27 samples, 0.42%)</title><rect x="879.9" y="803.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="882.9" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (26 samples, 0.41%)</title><rect x="880.1" y="787.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="883.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (25 samples, 0.39%)</title><rect x="880.3" y="771.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="883.3" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (25 samples, 0.39%)</title><rect x="880.3" y="755.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="883.3" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.39%)</title><rect x="880.3" y="739.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="883.3" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.16%)</title><rect x="880.3" y="723.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="883.3" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.16%)</title><rect x="880.3" y="707.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="883.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.11%)</title><rect x="880.9" y="691.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="883.9" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.11%)</title><rect x="880.9" y="675.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="883.9" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.23%)</title><rect x="882.2" y="723.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="885.2" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.22%)</title><rect x="882.4" y="707.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="885.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.08%)</title><rect x="883.8" y="691.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="886.8" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferS.get (15 samples, 0.23%)</title><rect x="884.9" y="835.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.9" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferS.ix (2 samples, 0.03%)</title><rect x="886.6" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="889.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (4 samples, 0.06%)</title><rect x="887.0" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.0" y="830.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="887.7" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.7" y="846.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="887.7" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="887.7" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.7" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="887.7" y="787.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.7" y="798.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.13%)</title><rect x="888.1" y="835.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="891.1" y="846.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.13%)</title><rect x="888.1" y="819.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="891.1" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.13%)</title><rect x="888.1" y="803.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.1" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.11%)</title><rect x="888.3" y="787.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="891.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="889.0" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.iterator (21 samples, 0.33%)</title><rect x="889.7" y="899.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="892.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.03%)</title><rect x="889.7" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.03%)</title><rect x="889.7" y="867.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="892.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.03%)</title><rect x="889.7" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (7 samples, 0.11%)</title><rect x="890.3" y="883.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="893.3" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.06%)</title><rect x="890.5" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.5" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.06%)</title><rect x="890.5" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="893.5" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="890.5" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="893.5" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="890.5" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="893.5" y="830.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="890.5" y="803.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="893.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.03%)</title><rect x="891.2" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="891.2" y="851.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.2" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.03%)</title><rect x="891.2" y="835.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.2" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.03%)</title><rect x="891.2" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="894.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (11 samples, 0.17%)</title><rect x="891.6" y="883.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.08%)</title><rect x="891.8" y="867.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.08%)</title><rect x="891.8" y="851.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.08%)</title><rect x="891.8" y="835.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="894.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.08%)</title><rect x="891.8" y="819.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.08%)</title><rect x="891.8" y="803.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.05%)</title><rect x="892.1" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="895.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.05%)</title><rect x="892.1" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="895.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.05%)</title><rect x="892.1" y="755.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="895.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.iterator (5 samples, 0.08%)</title><rect x="892.7" y="867.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.08%)</title><rect x="892.7" y="851.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.08%)</title><rect x="892.7" y="835.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="895.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.08%)</title><rect x="892.7" y="819.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="895.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.08%)</title><rect x="892.7" y="803.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="895.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.08%)</title><rect x="892.7" y="787.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.08%)</title><rect x="892.7" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="895.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.08%)</title><rect x="892.7" y="755.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="895.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.06%)</title><rect x="892.9" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="895.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.06%)</title><rect x="892.9" y="723.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="895.9" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.06%)</title><rect x="892.9" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="895.9" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="893.2" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.2" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="893.2" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="896.2" y="686.0"></text>
</g>
<g>
<title>[asyncWorker tid=3251] (1,111 samples, 17.39%)</title><rect x="893.6" y="1091.0" width="205.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="896.6" y="1102.0">[asyncWorker tid=3251]</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="893.6" y="1075.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="896.6" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="893.8" y="1059.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="896.8" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.08%)</title><rect x="894.0" y="1043.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="897.0" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.08%)</title><rect x="894.0" y="1027.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="897.0" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="894.4" y="1011.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="897.4" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="894.4" y="995.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="897.4" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="894.4" y="979.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="897.4" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="894.4" y="963.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="897.4" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="894.5" y="947.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="897.5" y="958.0"></text>
</g>
<g>
<title>[not_walkable] (2 samples, 0.03%)</title><rect x="894.9" y="1075.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="897.9" y="1086.0"></text>
</g>
<g>
<title>[unknown_Java] (10 samples, 0.16%)</title><rect x="895.3" y="1075.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="898.3" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="896.2" y="1059.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="899.2" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="896.4" y="1043.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="899.4" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="896.4" y="1027.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="899.4" y="1038.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="896.4" y="1011.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="899.4" y="1022.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="896.4" y="995.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="899.4" y="1006.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.06%)</title><rect x="896.4" y="979.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="899.4" y="990.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.06%)</title><rect x="896.4" y="963.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="899.4" y="974.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.06%)</title><rect x="896.4" y="947.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="899.4" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="896.4" y="931.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="899.4" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,092 samples, 17.09%)</title><rect x="897.1" y="1075.0" width="201.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.1" y="1086.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,092 samples, 17.09%)</title><rect x="897.1" y="1059.0" width="201.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.1" y="1070.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,092 samples, 17.09%)</title><rect x="897.1" y="1043.0" width="201.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.1" y="1054.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (172 samples, 2.69%)</title><rect x="897.9" y="1027.0" width="31.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.9" y="1038.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (172 samples, 2.69%)</title><rect x="897.9" y="1011.0" width="31.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.9" y="1022.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (138 samples, 2.16%)</title><rect x="897.9" y="995.0" width="25.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.9" y="1006.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.14%)</title><rect x="898.6" y="979.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.14%)</title><rect x="898.6" y="963.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.14%)</title><rect x="898.6" y="947.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 0.09%)</title><rect x="900.3" y="979.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.09%)</title><rect x="900.3" y="963.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (118 samples, 1.85%)</title><rect x="901.6" y="979.0" width="21.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.6" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (114 samples, 1.78%)</title><rect x="902.3" y="963.0" width="21.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.3" y="974.0">j..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (50 samples, 0.78%)</title><rect x="902.7" y="947.0" width="9.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="905.7" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (19 samples, 0.30%)</title><rect x="904.0" y="931.0" width="3.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="907.0" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="906.4" y="915.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="909.4" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="906.9" y="915.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="909.9" y="926.0"></text>
</g>
<g>
<title>__lll_unlock_wake (21 samples, 0.33%)</title><rect x="907.5" y="931.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="910.5" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.11%)</title><rect x="910.1" y="915.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="913.1" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.11%)</title><rect x="910.1" y="899.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="913.1" y="910.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="911.5" y="931.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="914.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.97%)</title><rect x="911.9" y="947.0" width="11.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="914.9" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_wait (58 samples, 0.91%)</title><rect x="911.9" y="931.0" width="10.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="914.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.41%)</title><rect x="917.8" y="915.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="920.8" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.39%)</title><rect x="917.8" y="899.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="920.8" y="910.0"></text>
</g>
<g>
<title>sys_futex (20 samples, 0.31%)</title><rect x="918.7" y="883.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="921.7" y="894.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.28%)</title><rect x="919.1" y="867.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="922.1" y="878.0"></text>
</g>
<g>
<title>futex_wait (17 samples, 0.27%)</title><rect x="919.3" y="851.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="922.3" y="862.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.11%)</title><rect x="920.2" y="835.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="923.2" y="846.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.09%)</title><rect x="920.4" y="819.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="923.4" y="830.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.06%)</title><rect x="920.8" y="803.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="923.8" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.06%)</title><rect x="920.8" y="787.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="923.8" y="798.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="921.1" y="771.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="924.1" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="921.1" y="755.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="924.1" y="766.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="921.1" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="924.1" y="750.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="921.1" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="924.1" y="734.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.08%)</title><rect x="921.5" y="835.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="924.5" y="846.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.03%)</title><rect x="922.1" y="819.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="925.1" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.05%)</title><rect x="922.6" y="931.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="925.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.09%)</title><rect x="923.3" y="995.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.09%)</title><rect x="923.3" y="979.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="926.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.09%)</title><rect x="923.3" y="963.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="926.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (26 samples, 0.41%)</title><rect x="924.8" y="995.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (26 samples, 0.41%)</title><rect x="924.8" y="979.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="927.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (26 samples, 0.41%)</title><rect x="924.8" y="963.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="927.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (26 samples, 0.41%)</title><rect x="924.8" y="947.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="927.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (26 samples, 0.41%)</title><rect x="924.8" y="931.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="927.8" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="925.0" y="915.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="928.0" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="925.2" y="899.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="928.2" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (19 samples, 0.30%)</title><rect x="926.1" y="915.0" width="3.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="929.1" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.22%)</title><rect x="927.0" y="899.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="930.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.20%)</title><rect x="927.0" y="883.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="930.0" y="894.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.19%)</title><rect x="927.2" y="867.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="930.2" y="878.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.19%)</title><rect x="927.2" y="851.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="930.2" y="862.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.19%)</title><rect x="927.2" y="835.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="930.2" y="846.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.16%)</title><rect x="927.6" y="819.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="930.6" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.16%)</title><rect x="927.6" y="803.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="930.6" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.16%)</title><rect x="927.6" y="787.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="930.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService$$Lambda$65/63678775.run (916 samples, 14.33%)</title><rect x="929.6" y="1027.0" width="169.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="932.6" y="1038.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.lambda$executeAsync$3 (915 samples, 14.32%)</title><rect x="929.8" y="1011.0" width="169.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.8" y="1022.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (374 samples, 5.85%)</title><rect x="930.0" y="995.0" width="69.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.0" y="1006.0">one/nio..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.06%)</title><rect x="930.4" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="930.4" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="930.4" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="933.4" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="930.7" y="931.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="933.7" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (367 samples, 5.74%)</title><rect x="931.1" y="979.0" width="67.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="934.1" y="990.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.22%)</title><rect x="931.1" y="963.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="934.1" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.13%)</title><rect x="932.2" y="947.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.2" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.13%)</title><rect x="932.2" y="931.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="935.2" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.13%)</title><rect x="932.2" y="915.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="935.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.13%)</title><rect x="932.2" y="899.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="935.2" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="933.1" y="883.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="936.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (353 samples, 5.52%)</title><rect x="933.7" y="963.0" width="65.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="936.7" y="974.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (353 samples, 5.52%)</title><rect x="933.7" y="947.0" width="65.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="936.7" y="958.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (353 samples, 5.52%)</title><rect x="933.7" y="931.0" width="65.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="936.7" y="942.0">one/nio..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="934.1" y="915.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="937.1" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="934.1" y="899.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="937.1" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.06%)</title><rect x="934.4" y="915.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (345 samples, 5.40%)</title><rect x="935.2" y="915.0" width="63.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="938.2" y="926.0">one/nio..</text>
</g>
<g>
<title>[unknown] (11 samples, 0.17%)</title><rect x="936.1" y="899.0" width="2.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="939.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.17%)</title><rect x="936.1" y="883.0" width="2.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="939.1" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (10 samples, 0.16%)</title><rect x="936.1" y="867.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="939.1" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="936.6" y="851.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="939.6" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="936.8" y="835.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="939.8" y="846.0"></text>
</g>
<g>
<title>__send (329 samples, 5.15%)</title><rect x="938.1" y="899.0" width="60.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="941.1" y="910.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (304 samples, 4.76%)</title><rect x="942.7" y="883.0" width="56.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="945.7" y="894.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (303 samples, 4.74%)</title><rect x="942.9" y="867.0" width="56.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="945.9" y="878.0">do_sy..</text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="944.4" y="851.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="947.4" y="862.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="944.4" y="835.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="947.4" y="846.0"></text>
</g>
<g>
<title>sys_sendto (293 samples, 4.59%)</title><rect x="944.8" y="851.0" width="54.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="947.8" y="862.0">sys_s..</text>
</g>
<g>
<title>SYSC_sendto (291 samples, 4.55%)</title><rect x="944.8" y="835.0" width="53.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="947.8" y="846.0">SYSC_..</text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.03%)</title><rect x="945.3" y="819.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="948.3" y="830.0"></text>
</g>
<g>
<title>sock_sendmsg (283 samples, 4.43%)</title><rect x="945.7" y="819.0" width="52.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="948.7" y="830.0">sock_..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="945.7" y="803.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="948.7" y="814.0"></text>
</g>
<g>
<title>inet_sendmsg (275 samples, 4.30%)</title><rect x="946.1" y="803.0" width="50.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="949.1" y="814.0">inet_..</text>
</g>
<g>
<title>tcp_sendmsg (273 samples, 4.27%)</title><rect x="946.2" y="787.0" width="50.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="949.2" y="798.0">tcp_s..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="946.6" y="771.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="949.6" y="782.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (268 samples, 4.19%)</title><rect x="947.2" y="771.0" width="49.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="950.2" y="782.0">tcp_s..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="947.9" y="755.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="950.9" y="766.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="947.9" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="950.9" y="750.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.08%)</title><rect x="948.3" y="755.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="951.3" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.08%)</title><rect x="948.3" y="739.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="951.3" y="750.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="949.2" y="755.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="952.2" y="766.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.03%)</title><rect x="949.6" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="952.6" y="766.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (15 samples, 0.23%)</title><rect x="949.9" y="755.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="952.9" y="766.0"></text>
</g>
<g>
<title>__alloc_skb (15 samples, 0.23%)</title><rect x="949.9" y="739.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="952.9" y="750.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (3 samples, 0.05%)</title><rect x="950.3" y="723.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="953.3" y="734.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.05%)</title><rect x="950.3" y="707.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="953.3" y="718.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.14%)</title><rect x="950.9" y="723.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="953.9" y="734.0"></text>
</g>
<g>
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="952.2" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="955.2" y="718.0"></text>
</g>
<g>
<title>tcp_push (227 samples, 3.55%)</title><rect x="952.7" y="755.0" width="41.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="955.7" y="766.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (225 samples, 3.52%)</title><rect x="953.1" y="739.0" width="41.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="956.1" y="750.0">__t..</text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.03%)</title><rect x="953.1" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="956.1" y="734.0"></text>
</g>
<g>
<title>tcp_write_xmit (222 samples, 3.47%)</title><rect x="953.6" y="723.0" width="41.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="956.6" y="734.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (206 samples, 3.22%)</title><rect x="954.2" y="707.0" width="38.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="957.2" y="718.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (194 samples, 3.04%)</title><rect x="955.7" y="691.0" width="35.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="958.7" y="702.0">ip_..</text>
</g>
<g>
<title>ip_local_out (190 samples, 2.97%)</title><rect x="956.0" y="675.0" width="35.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="959.0" y="686.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.05%)</title><rect x="956.0" y="659.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="959.0" y="670.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.03%)</title><rect x="956.2" y="643.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="959.2" y="654.0"></text>
</g>
<g>
<title>ip_output (187 samples, 2.93%)</title><rect x="956.6" y="659.0" width="34.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="959.6" y="670.0">ip..</text>
</g>
<g>
<title>ip_finish_output (185 samples, 2.90%)</title><rect x="957.0" y="643.0" width="34.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="960.0" y="654.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.09%)</title><rect x="957.0" y="627.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="960.0" y="638.0"></text>
</g>
<g>
<title>ip_finish_output2 (178 samples, 2.79%)</title><rect x="958.2" y="627.0" width="32.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="961.2" y="638.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (147 samples, 2.30%)</title><rect x="959.5" y="611.0" width="27.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="962.5" y="622.0">_..</text>
</g>
<g>
<title>do_softirq.part.17 (147 samples, 2.30%)</title><rect x="959.5" y="595.0" width="27.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="962.5" y="606.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (146 samples, 2.28%)</title><rect x="959.7" y="579.0" width="27.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="962.7" y="590.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (146 samples, 2.28%)</title><rect x="959.7" y="563.0" width="27.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="962.7" y="574.0">_..</text>
</g>
<g>
<title>net_rx_action (140 samples, 2.19%)</title><rect x="960.8" y="547.0" width="25.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="963.8" y="558.0">n..</text>
</g>
<g>
<title>process_backlog (132 samples, 2.07%)</title><rect x="962.3" y="531.0" width="24.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="965.3" y="542.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (129 samples, 2.02%)</title><rect x="962.9" y="515.0" width="23.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="965.9" y="526.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (127 samples, 1.99%)</title><rect x="963.0" y="499.0" width="23.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="966.0" y="510.0">_..</text>
</g>
<g>
<title>ip_rcv (125 samples, 1.96%)</title><rect x="963.4" y="483.0" width="23.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="966.4" y="494.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (123 samples, 1.92%)</title><rect x="963.8" y="467.0" width="22.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="966.8" y="478.0">i..</text>
</g>
<g>
<title>ip_local_deliver (120 samples, 1.88%)</title><rect x="964.3" y="451.0" width="22.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="967.3" y="462.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (117 samples, 1.83%)</title><rect x="964.9" y="435.0" width="21.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="967.9" y="446.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (114 samples, 1.78%)</title><rect x="965.4" y="419.0" width="21.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="968.4" y="430.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.06%)</title><rect x="966.7" y="403.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="969.7" y="414.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.05%)</title><rect x="967.5" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="970.5" y="414.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="967.7" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="970.7" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (99 samples, 1.55%)</title><rect x="968.2" y="403.0" width="18.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="971.2" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (98 samples, 1.53%)</title><rect x="968.4" y="387.0" width="18.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="971.4" y="398.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.03%)</title><rect x="968.8" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="971.8" y="382.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.03%)</title><rect x="968.8" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="971.8" y="366.0"></text>
</g>
<g>
<title>tcp_ack (26 samples, 0.41%)</title><rect x="969.7" y="371.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="972.7" y="382.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (17 samples, 0.27%)</title><rect x="970.8" y="355.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="973.8" y="366.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.09%)</title><rect x="971.5" y="339.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="974.5" y="350.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.09%)</title><rect x="971.5" y="323.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="974.5" y="334.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.08%)</title><rect x="971.7" y="307.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="974.7" y="318.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.03%)</title><rect x="972.3" y="291.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="975.3" y="302.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="972.3" y="275.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="975.3" y="286.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="973.0" y="339.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="976.0" y="350.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.40 (2 samples, 0.03%)</title><rect x="973.6" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="976.6" y="350.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="974.1" y="355.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="977.1" y="366.0"></text>
</g>
<g>
<title>tcp_data_queue (64 samples, 1.00%)</title><rect x="974.5" y="371.0" width="11.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="977.5" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (62 samples, 0.97%)</title><rect x="974.5" y="355.0" width="11.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="977.5" y="366.0"></text>
</g>
<g>
<title>__wake_up_sync_key (60 samples, 0.94%)</title><rect x="974.9" y="339.0" width="11.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="977.9" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (58 samples, 0.91%)</title><rect x="975.1" y="323.0" width="10.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="978.1" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (58 samples, 0.91%)</title><rect x="975.1" y="307.0" width="10.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="978.1" y="318.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="985.9" y="355.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="988.9" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (24 samples, 0.38%)</title><rect x="986.7" y="611.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="989.7" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (23 samples, 0.36%)</title><rect x="986.7" y="595.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="989.7" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (13 samples, 0.20%)</title><rect x="987.8" y="579.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="990.8" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.11%)</title><rect x="988.5" y="563.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="991.5" y="574.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.08%)</title><rect x="988.9" y="547.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="991.9" y="558.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.06%)</title><rect x="989.1" y="531.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="992.1" y="542.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.05%)</title><rect x="989.3" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="992.3" y="526.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.05%)</title><rect x="990.4" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="993.4" y="590.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="990.6" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="993.6" y="574.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="991.5" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="994.5" y="702.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="991.5" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="994.5" y="686.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.03%)</title><rect x="992.4" y="707.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="995.4" y="718.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="992.8" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="995.8" y="718.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.03%)</title><rect x="992.8" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="995.8" y="702.0"></text>
</g>
<g>
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="992.8" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="995.8" y="686.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.03%)</title><rect x="993.1" y="707.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="996.1" y="718.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.03%)</title><rect x="993.5" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="996.5" y="718.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.16%)</title><rect x="994.6" y="755.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="997.6" y="766.0"></text>
</g>
<g>
<title>tcp_current_mss (10 samples, 0.16%)</title><rect x="994.6" y="739.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="997.6" y="750.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="995.9" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="998.9" y="734.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.06%)</title><rect x="996.8" y="803.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="999.8" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.05%)</title><rect x="997.0" y="787.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1000.0" y="798.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="997.2" y="771.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1000.2" y="782.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.03%)</title><rect x="997.6" y="803.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1000.6" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="997.9" y="819.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1000.9" y="830.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="997.9" y="803.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1000.9" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="997.9" y="787.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1000.9" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="997.9" y="771.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1000.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService$$Lambda$62/1246458512.action (51 samples, 0.80%)</title><rect x="999.1" y="995.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.1" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.lambda$entity$1 (51 samples, 0.80%)</title><rect x="999.1" y="979.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1002.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.put (51 samples, 0.80%)</title><rect x="999.1" y="963.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1002.1" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="999.1" y="947.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1002.1" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="999.1" y="931.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1002.1" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="999.1" y="915.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.1" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="999.2" y="899.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1002.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.upsert (48 samples, 0.75%)</title><rect x="999.6" y="947.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1002.6" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.upsert (48 samples, 0.75%)</title><rect x="999.6" y="931.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1002.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.upsert (46 samples, 0.72%)</title><rect x="999.6" y="915.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1002.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (46 samples, 0.72%)</title><rect x="999.6" y="899.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1002.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (45 samples, 0.70%)</title><rect x="999.8" y="883.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1002.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="1000.0" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.03%)</title><rect x="1000.4" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="1000.4" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.4" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="1000.4" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1003.4" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="1000.4" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1003.4" y="830.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="1000.4" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1003.4" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="1000.4" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1003.4" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="1000.4" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1003.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (40 samples, 0.63%)</title><rect x="1000.7" y="867.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1003.7" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (25 samples, 0.39%)</title><rect x="1003.5" y="851.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1006.5" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (25 samples, 0.39%)</title><rect x="1003.5" y="835.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.5" y="846.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (25 samples, 0.39%)</title><rect x="1003.5" y="819.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.5" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (15 samples, 0.23%)</title><rect x="1005.3" y="803.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1008.3" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (15 samples, 0.23%)</title><rect x="1005.3" y="787.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1008.3" y="798.0"></text>
</g>
<g>
<title>vectorizedMismatch (6 samples, 0.09%)</title><rect x="1007.0" y="771.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1010.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.enqueueFlush (2 samples, 0.03%)</title><rect x="1008.1" y="915.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1011.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService$$Lambda$68/479492505.action (489 samples, 7.65%)</title><rect x="1008.5" y="995.0" width="90.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1011.5" y="1006.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.lambda$entity$0 (489 samples, 7.65%)</title><rect x="1008.5" y="979.0" width="90.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1011.5" y="990.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/MyAsyncService.get (489 samples, 7.65%)</title><rect x="1008.5" y="963.0" width="90.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1011.5" y="974.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="1008.7" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1011.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (485 samples, 7.59%)</title><rect x="1009.2" y="947.0" width="89.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1012.2" y="958.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (17 samples, 0.27%)</title><rect x="1009.4" y="931.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1012.4" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (17 samples, 0.27%)</title><rect x="1009.4" y="915.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.4" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (17 samples, 0.27%)</title><rect x="1009.4" y="899.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1012.4" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (17 samples, 0.27%)</title><rect x="1009.4" y="883.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.4" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (17 samples, 0.27%)</title><rect x="1009.4" y="867.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1012.4" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.22%)</title><rect x="1009.4" y="851.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1012.4" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.09%)</title><rect x="1009.4" y="835.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1012.4" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.09%)</title><rect x="1009.4" y="819.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1012.4" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (6 samples, 0.09%)</title><rect x="1009.4" y="803.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.4" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.09%)</title><rect x="1009.4" y="787.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1012.4" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.09%)</title><rect x="1009.4" y="771.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1012.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (5 samples, 0.08%)</title><rect x="1009.6" y="755.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (5 samples, 0.08%)</title><rect x="1009.6" y="739.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1012.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="1009.6" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1012.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (3 samples, 0.05%)</title><rect x="1010.0" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1013.0" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="1010.0" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.0" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="1010.0" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.0" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1010.1" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1013.1" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1010.1" y="659.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1013.1" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1010.1" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1013.1" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1010.1" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1013.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1010.1" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1013.1" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1010.1" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1013.1" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="1010.1" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1013.1" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.13%)</title><rect x="1010.5" y="835.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1013.5" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.13%)</title><rect x="1010.5" y="819.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1013.5" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.13%)</title><rect x="1010.5" y="803.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1013.5" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.13%)</title><rect x="1010.5" y="787.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1013.5" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.13%)</title><rect x="1010.5" y="771.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.13%)</title><rect x="1010.5" y="755.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1013.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (7 samples, 0.11%)</title><rect x="1010.7" y="739.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1013.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (7 samples, 0.11%)</title><rect x="1010.7" y="723.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1013.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.06%)</title><rect x="1010.7" y="707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1013.7" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.06%)</title><rect x="1010.7" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1013.7" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.03%)</title><rect x="1010.9" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1013.9" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="1010.9" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (2 samples, 0.03%)</title><rect x="1011.6" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1014.6" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="1011.6" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.6" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="1011.6" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.6" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1011.6" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1014.6" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1011.6" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1014.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.iterator (463 samples, 7.25%)</title><rect x="1013.3" y="931.0" width="85.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1016.3" y="942.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (76 samples, 1.19%)</title><rect x="1013.3" y="915.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.3" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (57 samples, 0.89%)</title><rect x="1013.3" y="899.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1016.3" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (57 samples, 0.89%)</title><rect x="1013.3" y="883.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1016.3" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.03%)</title><rect x="1013.8" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1016.8" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1014.6" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.6" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (48 samples, 0.75%)</title><rect x="1014.9" y="867.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.9" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (48 samples, 0.75%)</title><rect x="1014.9" y="851.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.9" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (47 samples, 0.74%)</title><rect x="1015.1" y="835.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1018.1" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (47 samples, 0.74%)</title><rect x="1015.1" y="819.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1018.1" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (45 samples, 0.70%)</title><rect x="1015.5" y="803.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1018.5" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (45 samples, 0.70%)</title><rect x="1015.5" y="787.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1018.5" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (22 samples, 0.34%)</title><rect x="1015.9" y="771.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1018.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (22 samples, 0.34%)</title><rect x="1015.9" y="755.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1018.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (22 samples, 0.34%)</title><rect x="1015.9" y="739.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1018.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getRowAt (21 samples, 0.33%)</title><rect x="1016.0" y="723.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1019.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (18 samples, 0.28%)</title><rect x="1016.6" y="707.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1019.6" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (4 samples, 0.06%)</title><rect x="1017.0" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.0" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (3 samples, 0.05%)</title><rect x="1017.0" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (3 samples, 0.05%)</title><rect x="1017.0" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1020.0" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.11%)</title><rect x="1017.7" y="691.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1020.7" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.11%)</title><rect x="1017.7" y="675.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1020.7" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.11%)</title><rect x="1017.7" y="659.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1020.7" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1018.3" y="643.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1021.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1018.3" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1021.3" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1018.3" y="611.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1021.3" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1018.3" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1021.3" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="1018.3" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1021.3" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="1018.3" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1021.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="1018.3" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1021.3" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="1018.3" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1021.3" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.06%)</title><rect x="1019.0" y="691.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1022.0" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.06%)</title><rect x="1019.0" y="675.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.0" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="1019.0" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1022.0" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1019.2" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.2" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1019.2" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1022.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1019.2" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1022.2" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1019.2" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1022.2" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="1019.4" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1022.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (21 samples, 0.33%)</title><rect x="1019.9" y="771.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1022.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (21 samples, 0.33%)</title><rect x="1019.9" y="755.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1022.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.11%)</title><rect x="1019.9" y="739.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1022.9" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.09%)</title><rect x="1020.1" y="723.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1023.1" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.03%)</title><rect x="1020.7" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1023.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (14 samples, 0.22%)</title><rect x="1021.2" y="739.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1024.2" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11 samples, 0.17%)</title><rect x="1021.2" y="723.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1024.2" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11 samples, 0.17%)</title><rect x="1021.2" y="707.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.2" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.11%)</title><rect x="1021.8" y="691.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.8" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.11%)</title><rect x="1021.8" y="675.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.8" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.11%)</title><rect x="1021.8" y="659.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.8" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="1022.0" y="643.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1025.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="1022.0" y="627.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1025.0" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="1022.0" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1025.0" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="1022.3" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1025.3" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="1022.3" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1025.3" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.03%)</title><rect x="1022.7" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1025.7" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="1023.2" y="723.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.2" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1023.2" y="707.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.2" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1023.2" y="691.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1026.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1023.2" y="675.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1026.2" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1023.2" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1026.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (19 samples, 0.30%)</title><rect x="1023.8" y="899.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1026.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (18 samples, 0.28%)</title><rect x="1024.0" y="883.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1027.0" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.22%)</title><rect x="1024.5" y="867.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1027.5" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.08%)</title><rect x="1024.5" y="851.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1027.5" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.08%)</title><rect x="1024.5" y="835.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.5" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.08%)</title><rect x="1024.5" y="819.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1027.5" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.08%)</title><rect x="1024.5" y="803.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1027.5" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.08%)</title><rect x="1024.5" y="787.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (4 samples, 0.06%)</title><rect x="1024.7" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1027.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (4 samples, 0.06%)</title><rect x="1024.7" y="755.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="1024.7" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1027.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (2 samples, 0.03%)</title><rect x="1025.1" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1028.1" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="1025.1" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1028.1" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="1025.1" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1028.1" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.14%)</title><rect x="1025.5" y="851.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1028.5" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.14%)</title><rect x="1025.5" y="835.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1028.5" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (9 samples, 0.14%)</title><rect x="1025.5" y="819.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1028.5" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (9 samples, 0.14%)</title><rect x="1025.5" y="803.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1028.5" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.14%)</title><rect x="1025.5" y="787.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1028.5" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.14%)</title><rect x="1025.5" y="771.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1028.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.03%)</title><rect x="1025.5" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1028.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (2 samples, 0.03%)</title><rect x="1025.5" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1028.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (2 samples, 0.03%)</title><rect x="1025.5" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1028.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$71/1590135872.compare (7 samples, 0.11%)</title><rect x="1025.8" y="755.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1028.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (7 samples, 0.11%)</title><rect x="1025.8" y="739.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1028.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="1025.8" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1028.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (5 samples, 0.08%)</title><rect x="1026.2" y="723.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1029.2" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.08%)</title><rect x="1026.2" y="707.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1029.2" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.08%)</title><rect x="1026.2" y="691.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1029.2" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1026.6" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1029.6" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1026.6" y="659.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1029.6" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1026.8" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1029.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1026.8" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1029.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1026.8" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1029.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (387 samples, 6.06%)</title><rect x="1027.3" y="915.0" width="71.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1030.3" y="926.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (17 samples, 0.27%)</title><rect x="1028.1" y="899.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1031.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (17 samples, 0.27%)</title><rect x="1028.1" y="883.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1031.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (14 samples, 0.22%)</title><rect x="1028.4" y="867.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1031.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (11 samples, 0.17%)</title><rect x="1029.0" y="851.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1032.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.08%)</title><rect x="1030.1" y="835.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="1030.6" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.16%)</title><rect x="1031.2" y="899.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1034.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (10 samples, 0.16%)</title><rect x="1031.2" y="883.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1034.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 0.16%)</title><rect x="1031.2" y="867.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1034.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (9 samples, 0.14%)</title><rect x="1031.4" y="851.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1034.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (9 samples, 0.14%)</title><rect x="1031.4" y="835.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1034.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (9 samples, 0.14%)</title><rect x="1031.4" y="819.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1034.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.06%)</title><rect x="1032.3" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1035.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (3 samples, 0.05%)</title><rect x="1032.5" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (3 samples, 0.05%)</title><rect x="1032.5" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getOffsetsIndex (2 samples, 0.03%)</title><rect x="1032.7" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1035.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.iterator (323 samples, 5.05%)</title><rect x="1033.0" y="899.0" width="59.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1036.0" y="910.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.&lt;init&gt; (323 samples, 5.05%)</title><rect x="1033.0" y="883.0" width="59.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.0" y="894.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getOffsetsIndex (323 samples, 5.05%)</title><rect x="1033.0" y="867.0" width="59.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1036.0" y="878.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.30%)</title><rect x="1033.2" y="851.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1036.2" y="862.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (18 samples, 0.28%)</title><rect x="1033.4" y="835.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1036.4" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.17%)</title><rect x="1034.3" y="819.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.3" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="1035.6" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1038.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (2 samples, 0.03%)</title><rect x="1036.0" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1039.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (2 samples, 0.03%)</title><rect x="1036.4" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (303 samples, 4.74%)</title><rect x="1036.7" y="851.0" width="56.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1039.7" y="862.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (31 samples, 0.49%)</title><rect x="1040.1" y="835.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1043.1" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.06%)</title><rect x="1041.2" y="819.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1044.2" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (17 samples, 0.27%)</title><rect x="1041.9" y="819.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1044.9" y="830.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (2 samples, 0.03%)</title><rect x="1042.5" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (12 samples, 0.19%)</title><rect x="1042.8" y="803.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.8" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (4 samples, 0.06%)</title><rect x="1045.0" y="819.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.0" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (199 samples, 3.11%)</title><rect x="1045.8" y="835.0" width="36.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.8" y="846.0">jav..</text>
</g>
<g>
<title>java/nio/Buffer.markValue (2 samples, 0.03%)</title><rect x="1056.3" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.3" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (139 samples, 2.18%)</title><rect x="1056.7" y="819.0" width="25.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.7" y="830.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (139 samples, 2.18%)</title><rect x="1056.7" y="803.0" width="25.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1059.7" y="814.0">j..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (136 samples, 2.13%)</title><rect x="1057.2" y="787.0" width="25.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.2" y="798.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (107 samples, 1.67%)</title><rect x="1061.5" y="771.0" width="19.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (107 samples, 1.67%)</title><rect x="1061.5" y="755.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.5" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (91 samples, 1.42%)</title><rect x="1064.4" y="739.0" width="16.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.4" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (12 samples, 0.19%)</title><rect x="1074.2" y="723.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1077.2" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.14%)</title><rect x="1074.8" y="707.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="1075.7" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1078.7" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.06%)</title><rect x="1075.7" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1078.7" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (25 samples, 0.39%)</title><rect x="1076.4" y="723.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.4" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (25 samples, 0.39%)</title><rect x="1076.4" y="707.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.13%)</title><rect x="1078.6" y="691.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1081.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.08%)</title><rect x="1080.1" y="691.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1083.1" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.08%)</title><rect x="1080.1" y="675.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1083.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.08%)</title><rect x="1081.2" y="771.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.2" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (32 samples, 0.50%)</title><rect x="1082.5" y="835.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1085.5" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (32 samples, 0.50%)</title><rect x="1082.5" y="819.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1085.5" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (32 samples, 0.50%)</title><rect x="1082.5" y="803.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.5" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (24 samples, 0.38%)</title><rect x="1084.0" y="787.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (21 samples, 0.33%)</title><rect x="1084.6" y="771.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1087.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (21 samples, 0.33%)</title><rect x="1084.6" y="755.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1087.6" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (21 samples, 0.33%)</title><rect x="1084.6" y="739.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1087.6" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.11%)</title><rect x="1084.7" y="723.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.7" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.11%)</title><rect x="1084.7" y="707.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1087.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="1085.3" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1088.3" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.06%)</title><rect x="1085.3" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1088.3" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.20%)</title><rect x="1086.0" y="723.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.0" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.20%)</title><rect x="1086.0" y="707.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="1087.0" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.06%)</title><rect x="1087.7" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1090.7" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.06%)</title><rect x="1087.7" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.7" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferS.get (13 samples, 0.20%)</title><rect x="1088.4" y="835.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1091.4" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferS.ix (4 samples, 0.06%)</title><rect x="1089.4" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1092.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (4 samples, 0.06%)</title><rect x="1090.1" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.1" y="830.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="1090.8" y="835.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.8" y="846.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="1090.8" y="819.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1093.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="1090.8" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.8" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="1090.8" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.8" y="798.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.13%)</title><rect x="1091.2" y="835.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1094.2" y="846.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.13%)</title><rect x="1091.2" y="819.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1094.2" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.13%)</title><rect x="1091.2" y="803.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1094.2" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.09%)</title><rect x="1091.6" y="787.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1094.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="1092.1" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.iterator (5 samples, 0.08%)</title><rect x="1092.7" y="899.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (3 samples, 0.05%)</title><rect x="1092.7" y="883.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1092.7" y="867.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.03%)</title><rect x="1093.2" y="883.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1096.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1093.2" y="867.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1093.2" y="851.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (2 samples, 0.03%)</title><rect x="1093.2" y="835.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (2 samples, 0.03%)</title><rect x="1093.2" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="1093.2" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1096.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.iterator (28 samples, 0.44%)</title><rect x="1093.6" y="899.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (4 samples, 0.06%)</title><rect x="1093.6" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.6" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.06%)</title><rect x="1093.6" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1096.6" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.06%)</title><rect x="1093.6" y="851.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.6" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="1093.6" y="835.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.6" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1093.6" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1096.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (24 samples, 0.38%)</title><rect x="1094.3" y="883.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (11 samples, 0.17%)</title><rect x="1094.5" y="867.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (11 samples, 0.17%)</title><rect x="1094.5" y="851.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1097.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 0.16%)</title><rect x="1094.7" y="835.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (9 samples, 0.14%)</title><rect x="1094.9" y="819.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1097.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (8 samples, 0.13%)</title><rect x="1095.1" y="803.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1098.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.09%)</title><rect x="1095.5" y="787.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.06%)</title><rect x="1095.5" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.06%)</title><rect x="1095.5" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1098.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.iterator (10 samples, 0.16%)</title><rect x="1096.6" y="867.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1099.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.13%)</title><rect x="1096.7" y="851.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.09%)</title><rect x="1097.1" y="835.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 0.09%)</title><rect x="1097.1" y="819.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1100.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.06%)</title><rect x="1097.5" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1100.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.06%)</title><rect x="1097.5" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1100.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.05%)</title><rect x="1097.7" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1100.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.05%)</title><rect x="1097.7" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.05%)</title><rect x="1097.7" y="739.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1100.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.05%)</title><rect x="1097.7" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.7" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.05%)</title><rect x="1097.7" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1100.7" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.05%)</title><rect x="1097.7" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1100.7" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.05%)</title><rect x="1097.7" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1100.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.iterator (2 samples, 0.03%)</title><rect x="1098.4" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1101.4" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (2 samples, 0.03%)</title><rect x="1098.4" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1101.4" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (2 samples, 0.03%)</title><rect x="1098.4" y="835.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.4" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1098.4" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1101.4" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1098.4" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1101.4" y="814.0"></text>
</g>
<g>
<title>[tid=3184] (19 samples, 0.30%)</title><rect x="1098.8" y="1091.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1101.8" y="1102.0"></text>
</g>
<g>
<title>start_thread (19 samples, 0.30%)</title><rect x="1098.8" y="1075.0" width="3.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1101.8" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (19 samples, 0.30%)</title><rect x="1098.8" y="1059.0" width="3.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1101.8" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (19 samples, 0.30%)</title><rect x="1098.8" y="1043.0" width="3.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1101.8" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (19 samples, 0.30%)</title><rect x="1098.8" y="1027.0" width="3.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1101.8" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (19 samples, 0.30%)</title><rect x="1098.8" y="1011.0" width="3.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1101.8" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (19 samples, 0.30%)</title><rect x="1098.8" y="995.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1101.8" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (19 samples, 0.30%)</title><rect x="1098.8" y="979.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1101.8" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (13 samples, 0.20%)</title><rect x="1099.9" y="963.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1102.9" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.08%)</title><rect x="1101.2" y="947.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1104.2" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1101.7" y="931.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1104.7" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1101.7" y="915.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1104.7" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1101.7" y="899.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1104.7" y="910.0"></text>
</g>
<g>
<title>[tid=3189] (8 samples, 0.13%)</title><rect x="1102.5" y="1091.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1105.5" y="1102.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.09%)</title><rect x="1102.8" y="1075.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1105.8" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="1102.8" y="1059.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1105.8" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="1102.8" y="1043.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1105.8" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="1102.8" y="1027.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1105.8" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="1102.8" y="1011.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1105.8" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1102.8" y="995.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1105.8" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1102.8" y="979.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1105.8" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1102.8" y="963.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1105.8" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1102.8" y="947.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1105.8" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1102.8" y="931.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1105.8" y="942.0"></text>
</g>
<g>
<title>__GI___sched_yield (4 samples, 0.06%)</title><rect x="1103.2" y="995.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1106.2" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="1103.4" y="979.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1106.4" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1103.4" y="963.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1106.4" y="974.0"></text>
</g>
<g>
<title>sys_sched_yield (2 samples, 0.03%)</title><rect x="1103.4" y="947.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1106.4" y="958.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="1103.4" y="931.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1106.4" y="942.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="1103.4" y="915.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1106.4" y="926.0"></text>
</g>
<g>
<title>[tid=3193] (173 samples, 2.71%)</title><rect x="1103.9" y="1091.0" width="32.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1106.9" y="1102.0">[t..</text>
</g>
<g>
<title>[GC_active] (2 samples, 0.03%)</title><rect x="1103.9" y="1075.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1106.9" y="1086.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="1103.9" y="1059.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1106.9" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1103.9" y="1043.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1106.9" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1103.9" y="1027.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1106.9" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1103.9" y="1011.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1106.9" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1103.9" y="995.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1106.9" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1103.9" y="979.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1106.9" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1103.9" y="963.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1106.9" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1103.9" y="947.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1106.9" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1103.9" y="931.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1106.9" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1103.9" y="915.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1106.9" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1103.9" y="899.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1106.9" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1103.9" y="883.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1106.9" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1103.9" y="867.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1106.9" y="878.0"></text>
</g>
<g>
<title>start_thread (171 samples, 2.68%)</title><rect x="1104.3" y="1075.0" width="31.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1107.3" y="1086.0">st..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (171 samples, 2.68%)</title><rect x="1104.3" y="1059.0" width="31.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1107.3" y="1070.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (171 samples, 2.68%)</title><rect x="1104.3" y="1043.0" width="31.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1107.3" y="1054.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (171 samples, 2.68%)</title><rect x="1104.3" y="1027.0" width="31.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1107.3" y="1038.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (171 samples, 2.68%)</title><rect x="1104.3" y="1011.0" width="31.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1107.3" y="1022.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (171 samples, 2.68%)</title><rect x="1104.3" y="995.0" width="31.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1107.3" y="1006.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (171 samples, 2.68%)</title><rect x="1104.3" y="979.0" width="31.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1107.3" y="990.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (171 samples, 2.68%)</title><rect x="1104.3" y="963.0" width="31.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1107.3" y="974.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (171 samples, 2.68%)</title><rect x="1104.3" y="947.0" width="31.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1107.3" y="958.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (171 samples, 2.68%)</title><rect x="1104.3" y="931.0" width="31.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1107.3" y="942.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (171 samples, 2.68%)</title><rect x="1104.3" y="915.0" width="31.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1107.3" y="926.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (165 samples, 2.58%)</title><rect x="1104.9" y="899.0" width="30.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1107.9" y="910.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (104 samples, 1.63%)</title><rect x="1115.9" y="883.0" width="19.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1118.9" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (61 samples, 0.95%)</title><rect x="1123.7" y="867.0" width="11.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1126.7" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (38 samples, 0.59%)</title><rect x="1128.0" y="851.0" width="7.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1131.0" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (24 samples, 0.38%)</title><rect x="1130.5" y="835.0" width="4.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1133.5" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.33%)</title><rect x="1131.1" y="819.0" width="3.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1134.1" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (20 samples, 0.31%)</title><rect x="1131.1" y="803.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1134.1" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (17 samples, 0.27%)</title><rect x="1131.6" y="787.0" width="3.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1134.6" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (16 samples, 0.25%)</title><rect x="1131.6" y="771.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1134.6" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (15 samples, 0.23%)</title><rect x="1131.8" y="755.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1134.8" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (15 samples, 0.23%)</title><rect x="1131.8" y="739.0" width="2.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1134.8" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (15 samples, 0.23%)</title><rect x="1131.8" y="723.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1134.8" y="734.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (15 samples, 0.23%)</title><rect x="1131.8" y="707.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1134.8" y="718.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (15 samples, 0.23%)</title><rect x="1131.8" y="691.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1134.8" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (15 samples, 0.23%)</title><rect x="1131.8" y="675.0" width="2.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1134.8" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.22%)</title><rect x="1132.0" y="659.0" width="2.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1135.0" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.22%)</title><rect x="1132.0" y="643.0" width="2.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1135.0" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.22%)</title><rect x="1132.0" y="627.0" width="2.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1135.0" y="638.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.22%)</title><rect x="1132.0" y="611.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1135.0" y="622.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.22%)</title><rect x="1132.0" y="595.0" width="2.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1135.0" y="606.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (13 samples, 0.20%)</title><rect x="1132.0" y="579.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1135.0" y="590.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (13 samples, 0.20%)</title><rect x="1132.0" y="563.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1135.0" y="574.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (13 samples, 0.20%)</title><rect x="1132.0" y="547.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1135.0" y="558.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (13 samples, 0.20%)</title><rect x="1132.0" y="531.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1135.0" y="542.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (12 samples, 0.19%)</title><rect x="1132.2" y="515.0" width="2.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1135.2" y="526.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (12 samples, 0.19%)</title><rect x="1132.2" y="499.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1135.2" y="510.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (11 samples, 0.17%)</title><rect x="1132.4" y="483.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1135.4" y="494.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10 samples, 0.16%)</title><rect x="1132.6" y="467.0" width="1.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1135.6" y="478.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10 samples, 0.16%)</title><rect x="1132.6" y="451.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1135.6" y="462.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10 samples, 0.16%)</title><rect x="1132.6" y="435.0" width="1.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1135.6" y="446.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10 samples, 0.16%)</title><rect x="1132.6" y="419.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1135.6" y="430.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (9 samples, 0.14%)</title><rect x="1132.8" y="403.0" width="1.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1135.8" y="414.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (9 samples, 0.14%)</title><rect x="1132.8" y="387.0" width="1.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1135.8" y="398.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (9 samples, 0.14%)</title><rect x="1132.8" y="371.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1135.8" y="382.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (9 samples, 0.14%)</title><rect x="1132.8" y="355.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1135.8" y="366.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (9 samples, 0.14%)</title><rect x="1132.8" y="339.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1135.8" y="350.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1132.9" y="323.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1135.9" y="334.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1132.9" y="307.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1135.9" y="318.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="1133.1" y="291.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1136.1" y="302.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="1133.1" y="275.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1136.1" y="286.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="1133.1" y="259.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1136.1" y="270.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="1133.1" y="243.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1136.1" y="254.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="1133.1" y="227.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1136.1" y="238.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="1133.1" y="211.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1136.1" y="222.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="1133.1" y="195.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1136.1" y="206.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="1133.3" y="179.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1136.3" y="190.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="1133.3" y="163.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1136.3" y="174.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.08%)</title><rect x="1133.5" y="147.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1136.5" y="158.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.08%)</title><rect x="1133.5" y="131.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1136.5" y="142.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="1133.9" y="115.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1136.9" y="126.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="1133.9" y="99.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1136.9" y="110.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="1133.9" y="83.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1136.9" y="94.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1134.0" y="67.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1137.0" y="78.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1134.0" y="51.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1137.0" y="62.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1134.0" y="35.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1137.0" y="46.0"></text>
</g>
<g>
<title>__memset_avx2_erms (2 samples, 0.03%)</title><rect x="1135.5" y="899.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1138.5" y="910.0"></text>
</g>
<g>
<title>[tid=3194] (11 samples, 0.17%)</title><rect x="1135.9" y="1091.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1138.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="1135.9" y="1075.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1138.9" y="1086.0"></text>
</g>
<g>
<title>start_thread (8 samples, 0.13%)</title><rect x="1136.4" y="1075.0" width="1.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1139.4" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1136.4" y="1059.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1139.4" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1136.4" y="1043.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1139.4" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1136.4" y="1027.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1139.4" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1136.4" y="1011.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1139.4" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1136.4" y="995.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1139.4" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1136.4" y="979.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1139.4" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1136.4" y="963.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1139.4" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1136.4" y="947.0" width="1.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1139.4" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1136.4" y="931.0" width="1.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1139.4" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1136.4" y="915.0" width="1.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1139.4" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1136.4" y="899.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1139.4" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1136.4" y="883.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1139.4" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.13%)</title><rect x="1136.4" y="867.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1139.4" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="1136.6" y="851.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1139.6" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="1136.6" y="835.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1139.6" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.09%)</title><rect x="1136.8" y="819.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1139.8" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.08%)</title><rect x="1137.0" y="803.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1140.0" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.06%)</title><rect x="1137.0" y="787.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1140.0" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.06%)</title><rect x="1137.0" y="771.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1140.0" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.06%)</title><rect x="1137.0" y="755.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1140.0" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="1137.2" y="739.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1140.2" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1137.4" y="723.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1140.4" y="734.0"></text>
</g>
<g>
<title>[tid=3196] (3 samples, 0.05%)</title><rect x="1138.1" y="1091.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1141.1" y="1102.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.05%)</title><rect x="1138.1" y="1075.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1141.1" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="1138.1" y="1059.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1141.1" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="1138.1" y="1043.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1141.1" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="1138.1" y="1027.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1141.1" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="1138.1" y="1011.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1141.1" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="1138.1" y="995.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1141.1" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="1138.1" y="979.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1141.1" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1138.1" y="963.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1141.1" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1138.1" y="947.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1141.1" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1138.1" y="931.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1141.1" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1138.1" y="915.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1141.1" y="926.0"></text>
</g>
<g>
<title>[tid=3197] (2 samples, 0.03%)</title><rect x="1138.7" y="1091.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1141.7" y="1102.0"></text>
</g>
<g>
<title>[tid=3207] (18 samples, 0.28%)</title><rect x="1139.0" y="1091.0" width="3.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1142.0" y="1102.0"></text>
</g>
<g>
<title>start_thread (18 samples, 0.28%)</title><rect x="1139.0" y="1075.0" width="3.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1142.0" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (18 samples, 0.28%)</title><rect x="1139.0" y="1059.0" width="3.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1142.0" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (18 samples, 0.28%)</title><rect x="1139.0" y="1043.0" width="3.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1142.0" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (18 samples, 0.28%)</title><rect x="1139.0" y="1027.0" width="3.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1142.0" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (18 samples, 0.28%)</title><rect x="1139.0" y="1011.0" width="3.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1142.0" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (18 samples, 0.28%)</title><rect x="1139.0" y="995.0" width="3.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1142.0" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (18 samples, 0.28%)</title><rect x="1139.0" y="979.0" width="3.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1142.0" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (12 samples, 0.19%)</title><rect x="1140.1" y="963.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1143.1" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="1140.9" y="947.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1143.9" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="1141.6" y="931.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1144.6" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="1141.6" y="915.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1144.6" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1141.8" y="899.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1144.8" y="910.0"></text>
</g>
<g>
<title>[tid=3208] (21 samples, 0.33%)</title><rect x="1142.4" y="1091.0" width="3.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1145.4" y="1102.0"></text>
</g>
<g>
<title>start_thread (21 samples, 0.33%)</title><rect x="1142.4" y="1075.0" width="3.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1145.4" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.33%)</title><rect x="1142.4" y="1059.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1145.4" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.33%)</title><rect x="1142.4" y="1043.0" width="3.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1145.4" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.33%)</title><rect x="1142.4" y="1027.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1145.4" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (20 samples, 0.31%)</title><rect x="1142.4" y="1011.0" width="3.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1145.4" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (20 samples, 0.31%)</title><rect x="1142.4" y="995.0" width="3.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1145.4" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (20 samples, 0.31%)</title><rect x="1142.4" y="979.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1145.4" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.22%)</title><rect x="1143.5" y="963.0" width="2.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1146.5" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.11%)</title><rect x="1144.8" y="947.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1147.8" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.05%)</title><rect x="1145.5" y="931.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1148.5" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1145.7" y="915.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1148.7" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.03%)</title><rect x="1145.7" y="899.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1148.7" y="910.0"></text>
</g>
<g>
<title>[tid=3209] (22 samples, 0.34%)</title><rect x="1146.2" y="1091.0" width="4.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1149.2" y="1102.0"></text>
</g>
<g>
<title>start_thread (21 samples, 0.33%)</title><rect x="1146.4" y="1075.0" width="3.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1149.4" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.33%)</title><rect x="1146.4" y="1059.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1149.4" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.33%)</title><rect x="1146.4" y="1043.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1149.4" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.33%)</title><rect x="1146.4" y="1027.0" width="3.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1149.4" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.33%)</title><rect x="1146.4" y="1011.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1149.4" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.33%)</title><rect x="1146.4" y="995.0" width="3.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1149.4" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (21 samples, 0.33%)</title><rect x="1146.4" y="979.0" width="3.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1149.4" y="990.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (16 samples, 0.25%)</title><rect x="1147.3" y="963.0" width="3.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1150.3" y="974.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.08%)</title><rect x="1149.4" y="947.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1152.4" y="958.0"></text>
</g>
<g>
<title>[worker tid=3199] (215 samples, 3.36%)</title><rect x="1150.3" y="1091.0" width="39.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1153.3" y="1102.0">[wo..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO$Worker.run (214 samples, 3.35%)</title><rect x="1150.5" y="1075.0" width="39.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1153.5" y="1086.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.dump (214 samples, 3.35%)</title><rect x="1150.5" y="1059.0" width="39.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1153.5" y="1070.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.write (214 samples, 3.35%)</title><rect x="1150.5" y="1043.0" width="39.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.5" y="1054.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.writeOffsets (35 samples, 0.55%)</title><rect x="1150.5" y="1027.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.5" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (34 samples, 0.53%)</title><rect x="1150.7" y="1011.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.7" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (31 samples, 0.49%)</title><rect x="1150.9" y="995.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.9" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (30 samples, 0.47%)</title><rect x="1150.9" y="979.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.9" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (30 samples, 0.47%)</title><rect x="1150.9" y="963.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1153.9" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (30 samples, 0.47%)</title><rect x="1150.9" y="947.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.47%)</title><rect x="1150.9" y="931.0" width="5.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1153.9" y="942.0"></text>
</g>
<g>
<title>write (30 samples, 0.47%)</title><rect x="1150.9" y="915.0" width="5.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1153.9" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.34%)</title><rect x="1152.3" y="899.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1155.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.34%)</title><rect x="1152.3" y="883.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1155.3" y="894.0"></text>
</g>
<g>
<title>sys_write (18 samples, 0.28%)</title><rect x="1153.1" y="867.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1156.1" y="878.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.27%)</title><rect x="1153.3" y="851.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1156.3" y="862.0"></text>
</g>
<g>
<title>__vfs_write (17 samples, 0.27%)</title><rect x="1153.3" y="835.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1156.3" y="846.0"></text>
</g>
<g>
<title>new_sync_write (16 samples, 0.25%)</title><rect x="1153.4" y="819.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1156.4" y="830.0"></text>
</g>
<g>
<title>ext4_file_write_iter (16 samples, 0.25%)</title><rect x="1153.4" y="803.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1156.4" y="814.0"></text>
</g>
<g>
<title>__generic_file_write_iter (16 samples, 0.25%)</title><rect x="1153.4" y="787.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1156.4" y="798.0"></text>
</g>
<g>
<title>generic_perform_write (15 samples, 0.23%)</title><rect x="1153.6" y="771.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1156.6" y="782.0"></text>
</g>
<g>
<title>ext4_da_write_begin (4 samples, 0.06%)</title><rect x="1153.8" y="755.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1156.8" y="766.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.03%)</title><rect x="1153.8" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1156.8" y="750.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.03%)</title><rect x="1153.8" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1156.8" y="734.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.03%)</title><rect x="1154.2" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1157.2" y="750.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.03%)</title><rect x="1154.2" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1157.2" y="734.0"></text>
</g>
<g>
<title>ext4_da_write_end (9 samples, 0.14%)</title><rect x="1154.5" y="755.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.5" y="766.0"></text>
</g>
<g>
<title>generic_write_end (9 samples, 0.14%)</title><rect x="1154.5" y="739.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1157.5" y="750.0"></text>
</g>
<g>
<title>__mark_inode_dirty (9 samples, 0.14%)</title><rect x="1154.5" y="723.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1157.5" y="734.0"></text>
</g>
<g>
<title>ext4_dirty_inode (9 samples, 0.14%)</title><rect x="1154.5" y="707.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1157.5" y="718.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (9 samples, 0.14%)</title><rect x="1154.5" y="691.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1157.5" y="702.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (8 samples, 0.13%)</title><rect x="1154.5" y="675.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1157.5" y="686.0"></text>
</g>
<g>
<title>ext4_do_update_inode (8 samples, 0.13%)</title><rect x="1154.5" y="659.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.5" y="670.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (6 samples, 0.09%)</title><rect x="1154.9" y="643.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1157.9" y="654.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.57 (6 samples, 0.09%)</title><rect x="1154.9" y="627.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1157.9" y="638.0"></text>
</g>
<g>
<title>crypto_shash_update (4 samples, 0.06%)</title><rect x="1155.3" y="611.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1158.3" y="622.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.05%)</title><rect x="1155.5" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1158.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.03%)</title><rect x="1156.6" y="995.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1159.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.writeRows (179 samples, 2.80%)</title><rect x="1156.9" y="1027.0" width="33.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.9" y="1038.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.writeByteBuffer (141 samples, 2.21%)</title><rect x="1157.1" y="1011.0" width="26.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.1" y="1022.0">r..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (140 samples, 2.19%)</title><rect x="1157.3" y="995.0" width="25.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.3" y="1006.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (137 samples, 2.14%)</title><rect x="1157.3" y="979.0" width="25.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.3" y="990.0">s..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.06%)</title><rect x="1157.9" y="963.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.9" y="974.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.06%)</title><rect x="1157.9" y="947.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.9" y="958.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.05%)</title><rect x="1158.1" y="931.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1161.1" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="1158.1" y="915.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.1" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.05%)</title><rect x="1158.1" y="899.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.1" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (128 samples, 2.00%)</title><rect x="1158.6" y="963.0" width="23.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.6" y="974.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (128 samples, 2.00%)</title><rect x="1158.6" y="947.0" width="23.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1161.6" y="958.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (128 samples, 2.00%)</title><rect x="1158.6" y="931.0" width="23.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.6" y="942.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (3 samples, 0.05%)</title><rect x="1158.8" y="915.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1161.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 1.92%)</title><rect x="1159.3" y="915.0" width="22.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1162.3" y="926.0">[..</text>
</g>
<g>
<title>write (121 samples, 1.89%)</title><rect x="1159.7" y="899.0" width="22.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1162.7" y="910.0">w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (101 samples, 1.58%)</title><rect x="1163.4" y="883.0" width="18.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1166.4" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (99 samples, 1.55%)</title><rect x="1163.4" y="867.0" width="18.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1166.4" y="878.0"></text>
</g>
<g>
<title>sys_write (94 samples, 1.47%)</title><rect x="1164.3" y="851.0" width="17.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1167.3" y="862.0"></text>
</g>
<g>
<title>__fdget_pos (8 samples, 0.13%)</title><rect x="1164.9" y="835.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1167.9" y="846.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.09%)</title><rect x="1164.9" y="819.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1167.9" y="830.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.06%)</title><rect x="1165.3" y="803.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1168.3" y="814.0"></text>
</g>
<g>
<title>vfs_write (82 samples, 1.28%)</title><rect x="1166.5" y="835.0" width="15.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1169.5" y="846.0"></text>
</g>
<g>
<title>__vfs_write (79 samples, 1.24%)</title><rect x="1166.9" y="819.0" width="14.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1169.9" y="830.0"></text>
</g>
<g>
<title>new_sync_write (78 samples, 1.22%)</title><rect x="1167.1" y="803.0" width="14.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1170.1" y="814.0"></text>
</g>
<g>
<title>ext4_file_write_iter (78 samples, 1.22%)</title><rect x="1167.1" y="787.0" width="14.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1170.1" y="798.0"></text>
</g>
<g>
<title>__generic_file_write_iter (75 samples, 1.17%)</title><rect x="1167.3" y="771.0" width="13.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1170.3" y="782.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.03%)</title><rect x="1168.0" y="755.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1171.0" y="766.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.03%)</title><rect x="1168.0" y="739.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1171.0" y="750.0"></text>
</g>
<g>
<title>generic_perform_write (67 samples, 1.05%)</title><rect x="1168.4" y="755.0" width="12.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1171.4" y="766.0"></text>
</g>
<g>
<title>ext4_da_write_begin (25 samples, 0.39%)</title><rect x="1168.6" y="739.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1171.6" y="750.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (9 samples, 0.14%)</title><rect x="1168.8" y="723.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1171.8" y="734.0"></text>
</g>
<g>
<title>jbd2__journal_start (8 samples, 0.13%)</title><rect x="1168.9" y="707.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1171.9" y="718.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.03%)</title><rect x="1169.3" y="691.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1172.3" y="702.0"></text>
</g>
<g>
<title>start_this_handle (4 samples, 0.06%)</title><rect x="1169.7" y="691.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1172.7" y="702.0"></text>
</g>
<g>
<title>ext4_block_write_begin (5 samples, 0.08%)</title><rect x="1170.4" y="723.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1173.4" y="734.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (8 samples, 0.13%)</title><rect x="1171.3" y="723.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1174.3" y="734.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.11%)</title><rect x="1171.3" y="707.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1174.3" y="718.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.09%)</title><rect x="1171.5" y="691.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1174.5" y="702.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (4 samples, 0.06%)</title><rect x="1171.9" y="675.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1174.9" y="686.0"></text>
</g>
<g>
<title>__radix_tree_lookup (4 samples, 0.06%)</title><rect x="1171.9" y="659.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1174.9" y="670.0"></text>
</g>
<g>
<title>ext4_da_write_end (37 samples, 0.58%)</title><rect x="1173.2" y="739.0" width="6.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1176.2" y="750.0"></text>
</g>
<g>
<title>__ext4_journal_stop (7 samples, 0.11%)</title><rect x="1173.2" y="723.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1176.2" y="734.0"></text>
</g>
<g>
<title>jbd2_journal_stop (7 samples, 0.11%)</title><rect x="1173.2" y="707.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1176.2" y="718.0"></text>
</g>
<g>
<title>__wake_up (4 samples, 0.06%)</title><rect x="1173.6" y="691.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1176.6" y="702.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.06%)</title><rect x="1173.6" y="675.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1176.6" y="686.0"></text>
</g>
<g>
<title>generic_write_end (30 samples, 0.47%)</title><rect x="1174.5" y="723.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1177.5" y="734.0"></text>
</g>
<g>
<title>__mark_inode_dirty (27 samples, 0.42%)</title><rect x="1174.7" y="707.0" width="5.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1177.7" y="718.0"></text>
</g>
<g>
<title>ext4_dirty_inode (27 samples, 0.42%)</title><rect x="1174.7" y="691.0" width="5.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1177.7" y="702.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (27 samples, 0.42%)</title><rect x="1174.7" y="675.0" width="5.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1177.7" y="686.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (21 samples, 0.33%)</title><rect x="1174.7" y="659.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1177.7" y="670.0"></text>
</g>
<g>
<title>ext4_do_update_inode (19 samples, 0.30%)</title><rect x="1175.0" y="643.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1178.0" y="654.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (13 samples, 0.20%)</title><rect x="1176.0" y="627.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1179.0" y="638.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.57 (13 samples, 0.20%)</title><rect x="1176.0" y="611.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1179.0" y="622.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.03%)</title><rect x="1176.5" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1179.5" y="606.0"></text>
</g>
<g>
<title>crypto_shash_update (8 samples, 0.13%)</title><rect x="1176.9" y="595.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1179.9" y="606.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (8 samples, 0.13%)</title><rect x="1176.9" y="579.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1179.9" y="590.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (6 samples, 0.09%)</title><rect x="1178.6" y="659.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1181.6" y="670.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (3 samples, 0.05%)</title><rect x="1178.9" y="643.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1181.9" y="654.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.03%)</title><rect x="1179.7" y="707.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1182.7" y="718.0"></text>
</g>
<g>
<title>__block_commit_write.isra.34 (2 samples, 0.03%)</title><rect x="1179.7" y="691.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1182.7" y="702.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.03%)</title><rect x="1180.4" y="739.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1183.4" y="750.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.03%)</title><rect x="1181.7" y="867.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1184.7" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.03%)</title><rect x="1182.2" y="963.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.2" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="1182.2" y="947.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1185.2" y="958.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="1182.2" y="931.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1185.2" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.05%)</title><rect x="1182.6" y="979.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1185.6" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (37 samples, 0.58%)</title><rect x="1183.2" y="1011.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.2" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (36 samples, 0.56%)</title><rect x="1183.4" y="995.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.4" y="1006.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.03%)</title><rect x="1183.4" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1186.4" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="1183.4" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1186.4" y="974.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="1183.4" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1186.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (34 samples, 0.53%)</title><rect x="1183.7" y="979.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.7" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (34 samples, 0.53%)</title><rect x="1183.7" y="963.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.7" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (33 samples, 0.52%)</title><rect x="1183.9" y="947.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1186.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.50%)</title><rect x="1184.1" y="931.0" width="5.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1187.1" y="942.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="1184.1" y="915.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1187.1" y="926.0"></text>
</g>
<g>
<title>write (30 samples, 0.47%)</title><rect x="1184.5" y="915.0" width="5.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1187.5" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.42%)</title><rect x="1185.0" y="899.0" width="5.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1188.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.42%)</title><rect x="1185.0" y="883.0" width="5.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1188.0" y="894.0"></text>
</g>
<g>
<title>sys_write (24 samples, 0.38%)</title><rect x="1185.6" y="867.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1188.6" y="878.0"></text>
</g>
<g>
<title>vfs_write (24 samples, 0.38%)</title><rect x="1185.6" y="851.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1188.6" y="862.0"></text>
</g>
<g>
<title>__vfs_write (21 samples, 0.33%)</title><rect x="1185.8" y="835.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1188.8" y="846.0"></text>
</g>
<g>
<title>new_sync_write (21 samples, 0.33%)</title><rect x="1185.8" y="819.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1188.8" y="830.0"></text>
</g>
<g>
<title>ext4_file_write_iter (21 samples, 0.33%)</title><rect x="1185.8" y="803.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1188.8" y="814.0"></text>
</g>
<g>
<title>__generic_file_write_iter (20 samples, 0.31%)</title><rect x="1185.8" y="787.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1188.8" y="798.0"></text>
</g>
<g>
<title>generic_perform_write (20 samples, 0.31%)</title><rect x="1185.8" y="771.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1188.8" y="782.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.03%)</title><rect x="1186.1" y="755.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1189.1" y="766.0"></text>
</g>
<g>
<title>ext4_da_write_end (14 samples, 0.22%)</title><rect x="1186.5" y="755.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1189.5" y="766.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.05%)</title><rect x="1186.5" y="739.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1189.5" y="750.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.05%)</title><rect x="1186.5" y="723.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1189.5" y="734.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="1186.7" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1189.7" y="718.0"></text>
</g>
<g>
<title>generic_write_end (11 samples, 0.17%)</title><rect x="1187.0" y="739.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1190.0" y="750.0"></text>
</g>
<g>
<title>__mark_inode_dirty (7 samples, 0.11%)</title><rect x="1187.2" y="723.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1190.2" y="734.0"></text>
</g>
<g>
<title>ext4_dirty_inode (6 samples, 0.09%)</title><rect x="1187.4" y="707.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1190.4" y="718.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (5 samples, 0.08%)</title><rect x="1187.6" y="691.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1190.6" y="702.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (4 samples, 0.06%)</title><rect x="1187.8" y="675.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1190.8" y="686.0"></text>
</g>
<g>
<title>ext4_do_update_inode (4 samples, 0.06%)</title><rect x="1187.8" y="659.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1190.8" y="670.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (2 samples, 0.03%)</title><rect x="1187.8" y="643.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1190.8" y="654.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.03%)</title><rect x="1188.2" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1191.2" y="654.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.57 (2 samples, 0.03%)</title><rect x="1188.2" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1191.2" y="638.0"></text>
</g>
<g>
<title>block_write_end (3 samples, 0.05%)</title><rect x="1188.5" y="723.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1191.5" y="734.0"></text>
</g>
<g>
<title>__block_commit_write.isra.34 (3 samples, 0.05%)</title><rect x="1188.5" y="707.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1191.5" y="718.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.03%)</title><rect x="1188.7" y="691.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1191.7" y="702.0"></text>
</g>
</g>
</svg>
