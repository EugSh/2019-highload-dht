<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2198" onload="init(evt)" viewBox="0 0 1200 2198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2181"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2181"> </text>
<g id="frames">
<g>
<title>all (719 samples, 100.00%)</title><rect x="10.0" y="2147.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="2158.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.28%)</title><rect x="10.0" y="2131.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="2142.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.28%)</title><rect x="10.0" y="2115.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="2126.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.28%)</title><rect x="10.0" y="2099.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="2110.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.28%)</title><rect x="10.0" y="2083.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="2094.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.28%)</title><rect x="10.0" y="2067.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="2078.0"></text>
</g>
<g>
<title>G1AllocRegion::par_allocate(HeapRegion*, unsigned long, unsigned long, unsigned long*) (1 samples, 0.14%)</title><rect x="10.0" y="2051.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="2062.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.14%)</title><rect x="11.6" y="2051.0" width="1.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="14.6" y="2062.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.42%)</title><rect x="13.3" y="2131.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.3" y="2142.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.42%)</title><rect x="13.3" y="2115.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.3" y="2126.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.42%)</title><rect x="13.3" y="2099.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.3" y="2110.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.14%)</title><rect x="13.3" y="2083.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.3" y="2094.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.28%)</title><rect x="14.9" y="2083.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="17.9" y="2094.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.28%)</title><rect x="14.9" y="2067.0" width="3.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.9" y="2078.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.14%)</title><rect x="14.9" y="2051.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.9" y="2062.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.14%)</title><rect x="14.9" y="2035.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.9" y="2046.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.14%)</title><rect x="16.6" y="2051.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.6" y="2062.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.14%)</title><rect x="18.2" y="2131.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="21.2" y="2142.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.14%)</title><rect x="18.2" y="2115.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.2" y="2126.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.14%)</title><rect x="18.2" y="2099.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="21.2" y="2110.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) [clone .part.147] (1 samples, 0.14%)</title><rect x="18.2" y="2083.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="21.2" y="2094.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.14%)</title><rect x="18.2" y="2067.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="21.2" y="2078.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.14%)</title><rect x="18.2" y="2051.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.2" y="2062.0"></text>
</g>
<g>
<title>AbstractCompiler::can_compile_method(methodHandle const&amp;) (1 samples, 0.14%)</title><rect x="18.2" y="2035.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="21.2" y="2046.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.28%)</title><rect x="19.8" y="2131.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="22.8" y="2142.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.28%)</title><rect x="19.8" y="2115.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="22.8" y="2126.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.14%)</title><rect x="19.8" y="2099.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="22.8" y="2110.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.14%)</title><rect x="19.8" y="2083.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="22.8" y="2094.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.14%)</title><rect x="21.5" y="2099.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="24.5" y="2110.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.42%)</title><rect x="23.1" y="2131.0" width="5.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="26.1" y="2142.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.14%)</title><rect x="24.8" y="2115.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="27.8" y="2126.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.14%)</title><rect x="24.8" y="2099.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="27.8" y="2110.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.14%)</title><rect x="24.8" y="2083.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="27.8" y="2094.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (1 samples, 0.14%)</title><rect x="26.4" y="2115.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="29.4" y="2126.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.14%)</title><rect x="26.4" y="2099.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="29.4" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="28.1" y="2131.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="31.1" y="2142.0"></text>
</g>
<g>
<title>__GI___open64 (1 samples, 0.14%)</title><rect x="28.1" y="2115.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="31.1" y="2126.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="28.1" y="2099.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="31.1" y="2110.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="28.1" y="2083.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="31.1" y="2094.0"></text>
</g>
<g>
<title>sys_openat (1 samples, 0.14%)</title><rect x="28.1" y="2067.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="31.1" y="2078.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.14%)</title><rect x="28.1" y="2051.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="31.1" y="2062.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.14%)</title><rect x="28.1" y="2035.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="31.1" y="2046.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.14%)</title><rect x="28.1" y="2019.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="31.1" y="2030.0"></text>
</g>
<g>
<title>get_empty_filp (1 samples, 0.14%)</title><rect x="28.1" y="2003.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="31.1" y="2014.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.56%)</title><rect x="29.7" y="2131.0" width="6.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="32.7" y="2142.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (1 samples, 0.14%)</title><rect x="33.0" y="2115.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="36.0" y="2126.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.14%)</title><rect x="33.0" y="2099.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="36.0" y="2110.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.14%)</title><rect x="33.0" y="2083.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="36.0" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="34.6" y="2115.0" width="1.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="37.6" y="2126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="34.6" y="2099.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="37.6" y="2110.0"></text>
</g>
<g>
<title>SharedRuntime::exception_handler_for_return_address(JavaThread*, unsigned char*) (1 samples, 0.14%)</title><rect x="34.6" y="2083.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="37.6" y="2094.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.14%)</title><rect x="36.3" y="2131.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="39.3" y="2142.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.14%)</title><rect x="37.9" y="2131.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="40.9" y="2142.0"></text>
</g>
<g>
<title>java/lang/Thread.run (373 samples, 51.88%)</title><rect x="39.5" y="2131.0" width="612.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.5" y="2142.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (373 samples, 51.88%)</title><rect x="39.5" y="2115.0" width="612.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.5" y="2126.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (373 samples, 51.88%)</title><rect x="39.5" y="2099.0" width="612.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.5" y="2110.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.14%)</title><rect x="39.5" y="2083.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.5" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.14%)</title><rect x="39.5" y="2067.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.5" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.14%)</title><rect x="39.5" y="2051.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.5" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.14%)</title><rect x="39.5" y="2035.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.5" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.14%)</title><rect x="39.5" y="2019.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.5" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.14%)</title><rect x="41.2" y="2083.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.2" y="2094.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService$$Lambda$63/1595514211.run (213 samples, 29.62%)</title><rect x="42.8" y="2083.0" width="349.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.8" y="2094.0">ru/mail/polis/service/shkalev/ShardedService$$L..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.lambda$executePut$10 (212 samples, 29.49%)</title><rect x="44.5" y="2067.0" width="347.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.5" y="2078.0">ru/mail/polis/service/shkalev/ShardedService.la..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.acceptReplicas (6 samples, 0.83%)</title><rect x="44.5" y="2051.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.5" y="2062.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.83%)</title><rect x="44.5" y="2035.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.5" y="2046.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.83%)</title><rect x="44.5" y="2019.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.5" y="2030.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.14%)</title><rect x="44.5" y="2003.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.5" y="2014.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.70%)</title><rect x="46.1" y="2003.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.1" y="2014.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.70%)</title><rect x="46.1" y="1987.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.1" y="1998.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.70%)</title><rect x="46.1" y="1971.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.1" y="1982.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.70%)</title><rect x="46.1" y="1955.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.1" y="1966.0"></text>
</g>
<g>
<title>__send (5 samples, 0.70%)</title><rect x="46.1" y="1939.0" width="8.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="49.1" y="1950.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.56%)</title><rect x="47.7" y="1923.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="50.7" y="1934.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.56%)</title><rect x="47.7" y="1907.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="50.7" y="1918.0"></text>
</g>
<g>
<title>sys_sendto (4 samples, 0.56%)</title><rect x="47.7" y="1891.0" width="6.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="50.7" y="1902.0"></text>
</g>
<g>
<title>SYSC_sendto (4 samples, 0.56%)</title><rect x="47.7" y="1875.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="50.7" y="1886.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.56%)</title><rect x="47.7" y="1859.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="50.7" y="1870.0"></text>
</g>
<g>
<title>inet_sendmsg (4 samples, 0.56%)</title><rect x="47.7" y="1843.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="50.7" y="1854.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.56%)</title><rect x="47.7" y="1827.0" width="6.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="50.7" y="1838.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (4 samples, 0.56%)</title><rect x="47.7" y="1811.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="50.7" y="1822.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.14%)</title><rect x="47.7" y="1795.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="50.7" y="1806.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.14%)</title><rect x="49.4" y="1795.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="52.4" y="1806.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.14%)</title><rect x="49.4" y="1779.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="52.4" y="1790.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.14%)</title><rect x="49.4" y="1763.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="52.4" y="1774.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.14%)</title><rect x="51.0" y="1795.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="54.0" y="1806.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="51.0" y="1779.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="54.0" y="1790.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="51.0" y="1763.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="54.0" y="1774.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="51.0" y="1747.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="54.0" y="1758.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.14%)</title><rect x="51.0" y="1731.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="54.0" y="1742.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.14%)</title><rect x="51.0" y="1715.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="54.0" y="1726.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.14%)</title><rect x="51.0" y="1699.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="54.0" y="1710.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.14%)</title><rect x="51.0" y="1683.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="54.0" y="1694.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="51.0" y="1667.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="54.0" y="1678.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.14%)</title><rect x="51.0" y="1651.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="54.0" y="1662.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="51.0" y="1635.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="54.0" y="1646.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="51.0" y="1619.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="54.0" y="1630.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.14%)</title><rect x="51.0" y="1603.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="54.0" y="1614.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.14%)</title><rect x="52.7" y="1795.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="55.7" y="1806.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.14%)</title><rect x="52.7" y="1779.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="55.7" y="1790.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.14%)</title><rect x="52.7" y="1763.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="55.7" y="1774.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.14%)</title><rect x="52.7" y="1747.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="55.7" y="1758.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.executeReplication (206 samples, 28.65%)</title><rect x="54.3" y="2051.0" width="338.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.3" y="2062.0">ru/mail/polis/service/shkalev/ShardedService.e..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService$$Lambda$65/80192722.action (4 samples, 0.56%)</title><rect x="54.3" y="2035.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.3" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.lambda$executePut$8 (4 samples, 0.56%)</title><rect x="54.3" y="2019.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.3" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.put (4 samples, 0.56%)</title><rect x="54.3" y="2003.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.3" y="2014.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.14%)</title><rect x="54.3" y="1987.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.3" y="1998.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.14%)</title><rect x="54.3" y="1971.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.3" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.upsert (3 samples, 0.42%)</title><rect x="56.0" y="1987.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.0" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.upsert (3 samples, 0.42%)</title><rect x="56.0" y="1971.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.0" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.upsert (3 samples, 0.42%)</title><rect x="56.0" y="1955.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.0" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (3 samples, 0.42%)</title><rect x="56.0" y="1939.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.0" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.42%)</title><rect x="56.0" y="1923.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="59.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.42%)</title><rect x="56.0" y="1907.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="59.0" y="1918.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.28%)</title><rect x="57.6" y="1891.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.6" y="1902.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.28%)</title><rect x="57.6" y="1875.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.6" y="1886.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.28%)</title><rect x="57.6" y="1859.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="60.6" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.proxy (202 samples, 28.09%)</title><rect x="60.9" y="2035.0" width="331.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.9" y="2046.0">ru/mail/polis/service/shkalev/ShardedService...</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (57 samples, 7.93%)</title><rect x="62.5" y="2019.0" width="93.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.5" y="2030.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (57 samples, 7.93%)</title><rect x="62.5" y="2003.0" width="93.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.5" y="2014.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (57 samples, 7.93%)</title><rect x="62.5" y="1987.0" width="93.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.5" y="1998.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (38 samples, 5.29%)</title><rect x="62.5" y="1971.0" width="62.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.5" y="1982.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (38 samples, 5.29%)</title><rect x="62.5" y="1955.0" width="62.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.5" y="1966.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (38 samples, 5.29%)</title><rect x="62.5" y="1939.0" width="62.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.5" y="1950.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (38 samples, 5.29%)</title><rect x="62.5" y="1923.0" width="62.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.5" y="1934.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (37 samples, 5.15%)</title><rect x="62.5" y="1907.0" width="60.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.5" y="1918.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (37 samples, 5.15%)</title><rect x="62.5" y="1891.0" width="60.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.5" y="1902.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.14%)</title><rect x="64.2" y="1875.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.2" y="1886.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.14%)</title><rect x="64.2" y="1859.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.2" y="1870.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (11 samples, 1.53%)</title><rect x="65.8" y="1875.0" width="18.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.8" y="1886.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (10 samples, 1.39%)</title><rect x="65.8" y="1859.0" width="16.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.8" y="1870.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (10 samples, 1.39%)</title><rect x="65.8" y="1843.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.8" y="1854.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (10 samples, 1.39%)</title><rect x="65.8" y="1827.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.8" y="1838.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (10 samples, 1.39%)</title><rect x="65.8" y="1811.0" width="16.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.8" y="1822.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (10 samples, 1.39%)</title><rect x="65.8" y="1795.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.8" y="1806.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (10 samples, 1.39%)</title><rect x="65.8" y="1779.0" width="16.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.8" y="1790.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.28%)</title><rect x="65.8" y="1763.0" width="3.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="68.8" y="1774.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.14%)</title><rect x="65.8" y="1747.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="68.8" y="1758.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.14%)</title><rect x="67.4" y="1747.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="70.4" y="1758.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.14%)</title><rect x="67.4" y="1731.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="70.4" y="1742.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 1.11%)</title><rect x="69.1" y="1763.0" width="13.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="72.1" y="1774.0"></text>
</g>
<g>
<title>__write (8 samples, 1.11%)</title><rect x="69.1" y="1747.0" width="13.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="72.1" y="1758.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.83%)</title><rect x="72.4" y="1731.0" width="9.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="75.4" y="1742.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.83%)</title><rect x="72.4" y="1715.0" width="9.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="75.4" y="1726.0"></text>
</g>
<g>
<title>sys_write (6 samples, 0.83%)</title><rect x="72.4" y="1699.0" width="9.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="75.4" y="1710.0"></text>
</g>
<g>
<title>vfs_write (6 samples, 0.83%)</title><rect x="72.4" y="1683.0" width="9.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="75.4" y="1694.0"></text>
</g>
<g>
<title>__vfs_write (6 samples, 0.83%)</title><rect x="72.4" y="1667.0" width="9.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="75.4" y="1678.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 0.83%)</title><rect x="72.4" y="1651.0" width="9.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="75.4" y="1662.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.14%)</title><rect x="72.4" y="1635.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.4" y="1646.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.70%)</title><rect x="74.0" y="1635.0" width="8.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="77.0" y="1646.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.28%)</title><rect x="77.3" y="1619.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="80.3" y="1630.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.28%)</title><rect x="77.3" y="1603.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="80.3" y="1614.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.28%)</title><rect x="77.3" y="1587.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="80.3" y="1598.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.14%)</title><rect x="80.6" y="1619.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.6" y="1630.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.14%)</title><rect x="80.6" y="1603.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="83.6" y="1614.0"></text>
</g>
<g>
<title>__mnt_want_write (1 samples, 0.14%)</title><rect x="80.6" y="1587.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="83.6" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.14%)</title><rect x="82.2" y="1859.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.2" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.14%)</title><rect x="82.2" y="1843.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.2" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.14%)</title><rect x="82.2" y="1827.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.2" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="82.2" y="1811.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.2" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.14%)</title><rect x="82.2" y="1795.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.2" y="1806.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="82.2" y="1779.0" width="1.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="85.2" y="1790.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.14%)</title><rect x="82.2" y="1763.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="85.2" y="1774.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (24 samples, 3.34%)</title><rect x="83.9" y="1875.0" width="39.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.9" y="1886.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (24 samples, 3.34%)</title><rect x="83.9" y="1859.0" width="39.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.9" y="1870.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (24 samples, 3.34%)</title><rect x="83.9" y="1843.0" width="39.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.9" y="1854.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (12 samples, 1.67%)</title><rect x="85.5" y="1827.0" width="19.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.5" y="1838.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.throwableProxyToString (12 samples, 1.67%)</title><rect x="85.5" y="1811.0" width="19.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.5" y="1822.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (12 samples, 1.67%)</title><rect x="85.5" y="1795.0" width="19.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.5" y="1806.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinFirstLine (2 samples, 0.28%)</title><rect x="85.5" y="1779.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.5" y="1790.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinExceptionMessage (2 samples, 0.28%)</title><rect x="85.5" y="1763.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.5" y="1774.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.14%)</title><rect x="87.1" y="1747.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.1" y="1758.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.14%)</title><rect x="87.1" y="1731.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.1" y="1742.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.14%)</title><rect x="87.1" y="1715.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.1" y="1726.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (10 samples, 1.39%)</title><rect x="88.8" y="1779.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.8" y="1790.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.printStackLine (1 samples, 0.14%)</title><rect x="88.8" y="1763.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.8" y="1774.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.14%)</title><rect x="88.8" y="1747.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.8" y="1758.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.14%)</title><rect x="88.8" y="1731.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.8" y="1742.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (1 samples, 0.14%)</title><rect x="88.8" y="1715.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.8" y="1726.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (9 samples, 1.25%)</title><rect x="90.4" y="1763.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.4" y="1774.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.getSTEAsString (8 samples, 1.11%)</title><rect x="92.1" y="1747.0" width="13.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.1" y="1758.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.toString (1 samples, 0.14%)</title><rect x="92.1" y="1731.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.1" y="1742.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.97%)</title><rect x="93.7" y="1731.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.7" y="1742.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.97%)</title><rect x="93.7" y="1715.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.7" y="1726.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (7 samples, 0.97%)</title><rect x="93.7" y="1699.0" width="11.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.7" y="1710.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="103.5" y="1683.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="106.5" y="1694.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (9 samples, 1.25%)</title><rect x="105.2" y="1827.0" width="14.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.2" y="1838.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (9 samples, 1.25%)</title><rect x="105.2" y="1811.0" width="14.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.2" y="1822.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (8 samples, 1.11%)</title><rect x="106.8" y="1795.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.8" y="1806.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (8 samples, 1.11%)</title><rect x="106.8" y="1779.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.8" y="1790.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (4 samples, 0.56%)</title><rect x="106.8" y="1763.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.8" y="1774.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (4 samples, 0.56%)</title><rect x="106.8" y="1747.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.8" y="1758.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (4 samples, 0.56%)</title><rect x="106.8" y="1731.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.8" y="1742.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (4 samples, 0.56%)</title><rect x="106.8" y="1715.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.8" y="1726.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (2 samples, 0.28%)</title><rect x="106.8" y="1699.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.8" y="1710.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (2 samples, 0.28%)</title><rect x="106.8" y="1683.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.8" y="1694.0"></text>
</g>
<g>
<title>java/text/DigitList.set (2 samples, 0.28%)</title><rect x="110.1" y="1699.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.1" y="1710.0"></text>
</g>
<g>
<title>SharedRuntime::ldiv(long, long) (1 samples, 0.14%)</title><rect x="111.8" y="1683.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="114.8" y="1694.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (4 samples, 0.56%)</title><rect x="113.4" y="1763.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.4" y="1774.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (4 samples, 0.56%)</title><rect x="113.4" y="1747.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.4" y="1758.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (4 samples, 0.56%)</title><rect x="113.4" y="1731.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.4" y="1742.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (4 samples, 0.56%)</title><rect x="113.4" y="1715.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.4" y="1726.0"></text>
</g>
<g>
<title>sun/util/calendar/BaseCalendar.getFixedDate (1 samples, 0.14%)</title><rect x="118.3" y="1699.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.3" y="1710.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.28%)</title><rect x="120.0" y="1827.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.0" y="1838.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.28%)</title><rect x="120.0" y="1811.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.0" y="1822.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.14%)</title><rect x="121.6" y="1795.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.6" y="1806.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.14%)</title><rect x="123.2" y="1907.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.2" y="1918.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.14%)</title><rect x="123.2" y="1891.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.2" y="1902.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.14%)</title><rect x="123.2" y="1875.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.2" y="1886.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.14%)</title><rect x="123.2" y="1859.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.2" y="1870.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.14%)</title><rect x="123.2" y="1843.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.2" y="1854.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.14%)</title><rect x="123.2" y="1827.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.2" y="1838.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.14%)</title><rect x="123.2" y="1811.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.2" y="1822.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (19 samples, 2.64%)</title><rect x="124.9" y="1971.0" width="31.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.9" y="1982.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/ThrowableProxy.&lt;init&gt; (19 samples, 2.64%)</title><rect x="124.9" y="1955.0" width="31.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.9" y="1966.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/ThrowableProxyUtil.steArrayToStepArray (1 samples, 0.14%)</title><rect x="124.9" y="1939.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.9" y="1950.0"></text>
</g>
<g>
<title>java/lang/Throwable.getStackTrace (16 samples, 2.23%)</title><rect x="126.5" y="1939.0" width="26.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.5" y="1950.0">j..</text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.14%)</title><rect x="126.5" y="1923.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.5" y="1934.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.14%)</title><rect x="126.5" y="1907.0" width="1.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="129.5" y="1918.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.296] (1 samples, 0.14%)</title><rect x="126.5" y="1891.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="129.5" y="1902.0"></text>
</g>
<g>
<title>java/lang/Throwable.getOurStackTrace (15 samples, 2.09%)</title><rect x="128.2" y="1923.0" width="24.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.2" y="1934.0">j..</text>
</g>
<g>
<title>java/lang/StackTraceElement.of (15 samples, 2.09%)</title><rect x="128.2" y="1907.0" width="24.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.2" y="1918.0">j..</text>
</g>
<g>
<title>java/lang/StackTraceElement.initStackTraceElements (15 samples, 2.09%)</title><rect x="128.2" y="1891.0" width="24.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.2" y="1902.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.14%)</title><rect x="129.8" y="1875.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="132.8" y="1886.0"></text>
</g>
<g>
<title>JVM_InitStackTraceElementArray (13 samples, 1.81%)</title><rect x="131.4" y="1875.0" width="21.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="134.4" y="1886.0">J..</text>
</g>
<g>
<title>java_lang_Throwable::get_stack_trace_elements(Handle, objArrayHandle, Thread*) (13 samples, 1.81%)</title><rect x="131.4" y="1859.0" width="21.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="134.4" y="1870.0">j..</text>
</g>
<g>
<title>BacktraceIterator::init(objArrayHandle, Thread*) (1 samples, 0.14%)</title><rect x="133.1" y="1843.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="136.1" y="1854.0"></text>
</g>
<g>
<title>InstanceKlass::method_with_orig_idnum(int, int) (1 samples, 0.14%)</title><rect x="134.7" y="1843.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="137.7" y="1854.0"></text>
</g>
<g>
<title>Method::line_number_from_bci(int) const (1 samples, 0.14%)</title><rect x="136.4" y="1843.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="139.4" y="1854.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::fill_in(Handle, InstanceKlass*, methodHandle const&amp;, int, int, Symbol*, Thread*) (9 samples, 1.25%)</title><rect x="138.0" y="1843.0" width="14.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="141.0" y="1854.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (8 samples, 1.11%)</title><rect x="139.7" y="1827.0" width="13.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="142.7" y="1838.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (6 samples, 0.83%)</title><rect x="139.7" y="1811.0" width="9.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="142.7" y="1822.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1187956ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1187956ul&gt;::oop_access_barrier(void*) (2 samples, 0.28%)</title><rect x="141.3" y="1795.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="144.3" y="1806.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1196148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1196148ul&gt;::oop_access_barrier(void*) (1 samples, 0.14%)</title><rect x="144.6" y="1795.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="147.6" y="1806.0"></text>
</g>
<g>
<title>StringTable::do_lookup(unsigned short*, int, unsigned long) (2 samples, 0.28%)</title><rect x="146.2" y="1795.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="149.2" y="1806.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1196148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1196148ul&gt;::oop_access_barrier(void*) (1 samples, 0.14%)</title><rect x="146.2" y="1779.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="149.2" y="1790.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;565366ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 565366ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.14%)</title><rect x="147.9" y="1779.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="150.9" y="1790.0"></text>
</g>
<g>
<title>Symbol::as_unicode(int&amp;) const (2 samples, 0.28%)</title><rect x="149.5" y="1811.0" width="3.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="152.5" y="1822.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.28%)</title><rect x="152.8" y="1939.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.8" y="1950.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.14%)</title><rect x="152.8" y="1923.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.8" y="1934.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.14%)</title><rect x="152.8" y="1907.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.8" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (1 samples, 0.14%)</title><rect x="154.4" y="1923.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.4" y="1934.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.14%)</title><rect x="154.4" y="1907.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="157.4" y="1918.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (1 samples, 0.14%)</title><rect x="154.4" y="1891.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="157.4" y="1902.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (144 samples, 20.03%)</title><rect x="156.1" y="2019.0" width="236.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.1" y="2030.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (144 samples, 20.03%)</title><rect x="156.1" y="2003.0" width="236.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.1" y="2014.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (48 samples, 6.68%)</title><rect x="156.1" y="1987.0" width="78.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.1" y="1998.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (48 samples, 6.68%)</title><rect x="156.1" y="1971.0" width="78.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.1" y="1982.0">one/nio/n..</text>
</g>
<g>
<title>[unknown] (27 samples, 3.76%)</title><rect x="156.1" y="1955.0" width="44.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="159.1" y="1966.0">[unk..</text>
</g>
<g>
<title>/home/eugen/Загрузки/idea-IU-192.6817.14/jbr/lib/server/libjvm.so (6 samples, 0.83%)</title><rect x="156.1" y="1939.0" width="9.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="159.1" y="1950.0"></text>
</g>
<g>
<title>_IO_str_init_static_internal (4 samples, 0.56%)</title><rect x="156.1" y="1923.0" width="6.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="159.1" y="1934.0"></text>
</g>
<g>
<title>vsnprintf (2 samples, 0.28%)</title><rect x="162.6" y="1923.0" width="3.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="165.6" y="1934.0"></text>
</g>
<g>
<title>__strchrnul_avx2 (1 samples, 0.14%)</title><rect x="162.6" y="1907.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="165.6" y="1918.0"></text>
</g>
<g>
<title>vfprintf (1 samples, 0.14%)</title><rect x="164.3" y="1907.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="167.3" y="1918.0"></text>
</g>
<g>
<title>Klass::is_klass() const volatile (1 samples, 0.14%)</title><rect x="165.9" y="1939.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="168.9" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="165.9" y="1923.0" width="1.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="168.9" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="165.9" y="1907.0" width="1.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="168.9" y="1918.0"></text>
</g>
<g>
<title>/home/eugen/Загрузки/idea-IU-192.6817.14/jbr/lib/server/libjvm.so (1 samples, 0.14%)</title><rect x="165.9" y="1891.0" width="1.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="168.9" y="1902.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.14%)</title><rect x="165.9" y="1875.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="168.9" y="1886.0"></text>
</g>
<g>
<title>vfprintf (1 samples, 0.14%)</title><rect x="165.9" y="1859.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="168.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 2.36%)</title><rect x="167.6" y="1939.0" width="27.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="170.6" y="1950.0">[..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 1.67%)</title><rect x="167.6" y="1923.0" width="19.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="170.6" y="1934.0"></text>
</g>
<g>
<title>jni_ThrowNew (12 samples, 1.67%)</title><rect x="167.6" y="1907.0" width="19.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="170.6" y="1918.0"></text>
</g>
<g>
<title>Exceptions::_throw_msg(Thread*, char const*, int, Symbol*, char const*, Handle, Handle) (12 samples, 1.67%)</title><rect x="167.6" y="1891.0" width="19.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="170.6" y="1902.0"></text>
</g>
<g>
<title>Exceptions::_throw(Thread*, char const*, int, Handle, char const*) (6 samples, 0.83%)</title><rect x="167.6" y="1875.0" width="9.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="170.6" y="1886.0"></text>
</g>
<g>
<title>Events::log_exception(Thread*, char const*, ...) (1 samples, 0.14%)</title><rect x="167.6" y="1859.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="170.6" y="1870.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.14%)</title><rect x="167.6" y="1843.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="170.6" y="1854.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.14%)</title><rect x="167.6" y="1827.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="170.6" y="1838.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.14%)</title><rect x="167.6" y="1811.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="170.6" y="1822.0"></text>
</g>
<g>
<title>InstanceKlass::oop_print_value_on(oopDesc*, outputStream*) (1 samples, 0.14%)</title><rect x="169.2" y="1859.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="172.2" y="1870.0"></text>
</g>
<g>
<title>oopDesc::print_value_string() (4 samples, 0.56%)</title><rect x="170.8" y="1859.0" width="6.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="173.8" y="1870.0"></text>
</g>
<g>
<title>InstanceKlass::oop_print_value_on(oopDesc*, outputStream*) (3 samples, 0.42%)</title><rect x="172.5" y="1843.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="175.5" y="1854.0"></text>
</g>
<g>
<title>Symbol::print_value_on(outputStream*) const (1 samples, 0.14%)</title><rect x="172.5" y="1827.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="175.5" y="1838.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.14%)</title><rect x="172.5" y="1811.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="175.5" y="1822.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (1 samples, 0.14%)</title><rect x="172.5" y="1795.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="175.5" y="1806.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (2 samples, 0.28%)</title><rect x="174.1" y="1827.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="177.1" y="1838.0"></text>
</g>
<g>
<title>__strchr_avx2 (1 samples, 0.14%)</title><rect x="174.1" y="1811.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="177.1" y="1822.0"></text>
</g>
<g>
<title>stringStream::write(char const*, unsigned long) (1 samples, 0.14%)</title><rect x="175.8" y="1811.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="178.8" y="1822.0"></text>
</g>
<g>
<title>Exceptions::new_exception(Thread*, Symbol*, char const*, Handle, Handle, Handle, Exceptions::ExceptionMsgToUtf8Mode) (6 samples, 0.83%)</title><rect x="177.4" y="1875.0" width="9.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="180.4" y="1886.0"></text>
</g>
<g>
<title>Exceptions::new_exception(Thread*, Symbol*, Symbol*, JavaCallArguments*, Handle, Handle, Handle) (4 samples, 0.56%)</title><rect x="179.0" y="1859.0" width="6.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="182.0" y="1870.0"></text>
</g>
<g>
<title>JavaCalls::construct_new_instance(InstanceKlass*, Symbol*, JavaCallArguments*, Thread*) (3 samples, 0.42%)</title><rect x="179.0" y="1843.0" width="5.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="182.0" y="1854.0"></text>
</g>
<g>
<title>JavaCalls::call_special(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (3 samples, 0.42%)</title><rect x="179.0" y="1827.0" width="5.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="182.0" y="1838.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call(CallInfo&amp;, Handle, LinkInfo const&amp;, Thread*) (3 samples, 0.42%)</title><rect x="179.0" y="1811.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="182.0" y="1822.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (2 samples, 0.28%)</title><rect x="179.0" y="1795.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="182.0" y="1806.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (2 samples, 0.28%)</title><rect x="179.0" y="1779.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="182.0" y="1790.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.14%)</title><rect x="180.7" y="1763.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="183.7" y="1774.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.14%)</title><rect x="180.7" y="1747.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="183.7" y="1758.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.14%)</title><rect x="182.3" y="1795.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="185.3" y="1806.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.14%)</title><rect x="184.0" y="1843.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="187.0" y="1854.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.14%)</title><rect x="184.0" y="1827.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="187.0" y="1838.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.14%)</title><rect x="184.0" y="1811.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="187.0" y="1822.0"></text>
</g>
<g>
<title>java_lang_String::create_from_str(char const*, Thread*) (1 samples, 0.14%)</title><rect x="185.6" y="1859.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="188.6" y="1870.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.14%)</title><rect x="185.6" y="1843.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="188.6" y="1854.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.14%)</title><rect x="185.6" y="1827.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="188.6" y="1838.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.14%)</title><rect x="185.6" y="1811.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="188.6" y="1822.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.14%)</title><rect x="185.6" y="1795.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="188.6" y="1806.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.14%)</title><rect x="185.6" y="1779.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="188.6" y="1790.0"></text>
</g>
<g>
<title>throw_by_name (4 samples, 0.56%)</title><rect x="187.2" y="1923.0" width="6.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="190.2" y="1934.0"></text>
</g>
<g>
<title>jni_FindClass (3 samples, 0.42%)</title><rect x="188.9" y="1907.0" width="4.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="191.9" y="1918.0"></text>
</g>
<g>
<title>JavaThread::security_get_caller_class(int) (1 samples, 0.14%)</title><rect x="188.9" y="1891.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="191.9" y="1902.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.14%)</title><rect x="188.9" y="1875.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="191.9" y="1886.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.14%)</title><rect x="188.9" y="1859.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="191.9" y="1870.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.14%)</title><rect x="190.5" y="1891.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="193.5" y="1902.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (1 samples, 0.14%)</title><rect x="192.2" y="1891.0" width="1.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="195.2" y="1902.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.14%)</title><rect x="192.2" y="1875.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="195.2" y="1886.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.14%)</title><rect x="192.2" y="1859.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="195.2" y="1870.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::non_reflection_class_loader(oopDesc*) (1 samples, 0.14%)</title><rect x="192.2" y="1843.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="195.2" y="1854.0"></text>
</g>
<g>
<title>throw_io_exception (1 samples, 0.14%)</title><rect x="193.8" y="1923.0" width="1.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="196.8" y="1934.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.14%)</title><rect x="195.5" y="1939.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="198.5" y="1950.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="195.5" y="1923.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="198.5" y="1934.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="195.5" y="1907.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="198.5" y="1918.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.14%)</title><rect x="195.5" y="1891.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="198.5" y="1902.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.14%)</title><rect x="195.5" y="1875.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="198.5" y="1886.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.14%)</title><rect x="195.5" y="1859.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="198.5" y="1870.0"></text>
</g>
<g>
<title>stringStream::write(char const*, unsigned long) (1 samples, 0.14%)</title><rect x="197.1" y="1939.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="200.1" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="197.1" y="1923.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="200.1" y="1934.0"></text>
</g>
<g>
<title>/home/eugen/Загрузки/idea-IU-192.6817.14/jbr/lib/server/libjvm.so (1 samples, 0.14%)</title><rect x="197.1" y="1907.0" width="1.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="200.1" y="1918.0"></text>
</g>
<g>
<title>_IO_no_init (1 samples, 0.14%)</title><rect x="197.1" y="1891.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="200.1" y="1902.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.14%)</title><rect x="198.7" y="1939.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="201.7" y="1950.0"></text>
</g>
<g>
<title>vfprintf (1 samples, 0.14%)</title><rect x="198.7" y="1923.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="201.7" y="1934.0"></text>
</g>
<g>
<title>__GI__IO_default_xsputn (1 samples, 0.14%)</title><rect x="200.4" y="1955.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="203.4" y="1966.0"></text>
</g>
<g>
<title>java/net/SocketTimeoutException.&lt;init&gt; (13 samples, 1.81%)</title><rect x="202.0" y="1955.0" width="21.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.0" y="1966.0">j..</text>
</g>
<g>
<title>java/io/InterruptedIOException.&lt;init&gt; (13 samples, 1.81%)</title><rect x="202.0" y="1939.0" width="21.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="205.0" y="1950.0">j..</text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (13 samples, 1.81%)</title><rect x="202.0" y="1923.0" width="21.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="205.0" y="1934.0">j..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (13 samples, 1.81%)</title><rect x="202.0" y="1907.0" width="21.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.0" y="1918.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (13 samples, 1.81%)</title><rect x="202.0" y="1891.0" width="21.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="205.0" y="1902.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (13 samples, 1.81%)</title><rect x="202.0" y="1875.0" width="21.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.0" y="1886.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (13 samples, 1.81%)</title><rect x="202.0" y="1859.0" width="21.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.0" y="1870.0">j..</text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (13 samples, 1.81%)</title><rect x="202.0" y="1843.0" width="21.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="205.0" y="1854.0">J..</text>
</g>
<g>
<title>JVM_FillInStackTrace (13 samples, 1.81%)</title><rect x="202.0" y="1827.0" width="21.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="205.0" y="1838.0">J..</text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (13 samples, 1.81%)</title><rect x="202.0" y="1811.0" width="21.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="205.0" y="1822.0">j..</text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (13 samples, 1.81%)</title><rect x="202.0" y="1795.0" width="21.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="205.0" y="1806.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.42%)</title><rect x="205.3" y="1779.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="208.3" y="1790.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.14%)</title><rect x="210.2" y="1779.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="213.2" y="1790.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (1 samples, 0.14%)</title><rect x="210.2" y="1763.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="213.2" y="1774.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (3 samples, 0.42%)</title><rect x="211.9" y="1779.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="214.9" y="1790.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.14%)</title><rect x="216.8" y="1779.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="219.8" y="1790.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.42%)</title><rect x="218.4" y="1779.0" width="5.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="221.4" y="1790.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.42%)</title><rect x="218.4" y="1763.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="221.4" y="1774.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.28%)</title><rect x="220.1" y="1747.0" width="3.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="223.1" y="1758.0"></text>
</g>
<g>
<title>recv (7 samples, 0.97%)</title><rect x="223.4" y="1955.0" width="11.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="226.4" y="1966.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.83%)</title><rect x="225.0" y="1939.0" width="9.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="228.0" y="1950.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.83%)</title><rect x="225.0" y="1923.0" width="9.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="228.0" y="1934.0"></text>
</g>
<g>
<title>sys_recvfrom (6 samples, 0.83%)</title><rect x="225.0" y="1907.0" width="9.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="228.0" y="1918.0"></text>
</g>
<g>
<title>SYSC_recvfrom (6 samples, 0.83%)</title><rect x="225.0" y="1891.0" width="9.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="228.0" y="1902.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.83%)</title><rect x="225.0" y="1875.0" width="9.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="228.0" y="1886.0"></text>
</g>
<g>
<title>inet_recvmsg (5 samples, 0.70%)</title><rect x="225.0" y="1859.0" width="8.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="228.0" y="1870.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.70%)</title><rect x="225.0" y="1843.0" width="8.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="228.0" y="1854.0"></text>
</g>
<g>
<title>sk_wait_data (4 samples, 0.56%)</title><rect x="225.0" y="1827.0" width="6.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="228.0" y="1838.0"></text>
</g>
<g>
<title>wait_woken (2 samples, 0.28%)</title><rect x="228.3" y="1811.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="231.3" y="1822.0"></text>
</g>
<g>
<title>schedule_timeout (2 samples, 0.28%)</title><rect x="228.3" y="1795.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="231.3" y="1806.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.28%)</title><rect x="228.3" y="1779.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="231.3" y="1790.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.28%)</title><rect x="228.3" y="1763.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="231.3" y="1774.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.28%)</title><rect x="228.3" y="1747.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="231.3" y="1758.0"></text>
</g>
<g>
<title>wait_woken (1 samples, 0.14%)</title><rect x="231.6" y="1827.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="234.6" y="1838.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.14%)</title><rect x="233.2" y="1859.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="236.2" y="1870.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.14%)</title><rect x="234.8" y="1987.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.8" y="1998.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.14%)</title><rect x="234.8" y="1971.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.8" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.14%)</title><rect x="234.8" y="1955.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.8" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.14%)</title><rect x="234.8" y="1939.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.8" y="1950.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.14%)</title><rect x="234.8" y="1923.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.8" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.length (1 samples, 0.14%)</title><rect x="234.8" y="1907.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.8" y="1918.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (1 samples, 0.14%)</title><rect x="236.5" y="1987.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.5" y="1998.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.14%)</title><rect x="236.5" y="1971.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="239.5" y="1982.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (19 samples, 2.64%)</title><rect x="238.1" y="1987.0" width="31.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.1" y="1998.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (3 samples, 0.42%)</title><rect x="238.1" y="1971.0" width="4.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="241.1" y="1982.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="239.8" y="1955.0" width="1.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="242.8" y="1966.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.14%)</title><rect x="241.4" y="1955.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="244.4" y="1966.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.14%)</title><rect x="241.4" y="1939.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="244.4" y="1950.0"></text>
</g>
<g>
<title>__send (16 samples, 2.23%)</title><rect x="243.0" y="1971.0" width="26.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="246.0" y="1982.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 2.09%)</title><rect x="244.7" y="1955.0" width="24.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="247.7" y="1966.0">e..</text>
</g>
<g>
<title>do_syscall_64 (15 samples, 2.09%)</title><rect x="244.7" y="1939.0" width="24.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="247.7" y="1950.0">d..</text>
</g>
<g>
<title>sys_sendto (15 samples, 2.09%)</title><rect x="244.7" y="1923.0" width="24.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="247.7" y="1934.0">s..</text>
</g>
<g>
<title>SYSC_sendto (15 samples, 2.09%)</title><rect x="244.7" y="1907.0" width="24.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="247.7" y="1918.0">S..</text>
</g>
<g>
<title>sock_sendmsg (15 samples, 2.09%)</title><rect x="244.7" y="1891.0" width="24.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="247.7" y="1902.0">s..</text>
</g>
<g>
<title>inet_sendmsg (15 samples, 2.09%)</title><rect x="244.7" y="1875.0" width="24.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="247.7" y="1886.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (15 samples, 2.09%)</title><rect x="244.7" y="1859.0" width="24.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="247.7" y="1870.0">t..</text>
</g>
<g>
<title>release_sock (1 samples, 0.14%)</title><rect x="244.7" y="1843.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="247.7" y="1854.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.14%)</title><rect x="244.7" y="1827.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="247.7" y="1838.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="244.7" y="1811.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="247.7" y="1822.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.14%)</title><rect x="244.7" y="1795.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="247.7" y="1806.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.14%)</title><rect x="244.7" y="1779.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="247.7" y="1790.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.14%)</title><rect x="244.7" y="1763.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="247.7" y="1774.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (14 samples, 1.95%)</title><rect x="246.3" y="1843.0" width="23.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="249.3" y="1854.0">t..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.14%)</title><rect x="246.3" y="1827.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="249.3" y="1838.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.14%)</title><rect x="246.3" y="1811.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="249.3" y="1822.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.14%)</title><rect x="248.0" y="1827.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="251.0" y="1838.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.14%)</title><rect x="249.6" y="1827.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="252.6" y="1838.0"></text>
</g>
<g>
<title>tcp_push (10 samples, 1.39%)</title><rect x="251.3" y="1827.0" width="16.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="254.3" y="1838.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (10 samples, 1.39%)</title><rect x="251.3" y="1811.0" width="16.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="254.3" y="1822.0"></text>
</g>
<g>
<title>tcp_write_xmit (10 samples, 1.39%)</title><rect x="251.3" y="1795.0" width="16.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="254.3" y="1806.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (10 samples, 1.39%)</title><rect x="251.3" y="1779.0" width="16.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="254.3" y="1790.0"></text>
</g>
<g>
<title>ip_queue_xmit (9 samples, 1.25%)</title><rect x="252.9" y="1763.0" width="14.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="255.9" y="1774.0"></text>
</g>
<g>
<title>ip_local_out (8 samples, 1.11%)</title><rect x="254.5" y="1747.0" width="13.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="257.5" y="1758.0"></text>
</g>
<g>
<title>ip_output (8 samples, 1.11%)</title><rect x="254.5" y="1731.0" width="13.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="257.5" y="1742.0"></text>
</g>
<g>
<title>ip_finish_output (8 samples, 1.11%)</title><rect x="254.5" y="1715.0" width="13.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="257.5" y="1726.0"></text>
</g>
<g>
<title>ip_finish_output2 (8 samples, 1.11%)</title><rect x="254.5" y="1699.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="257.5" y="1710.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 0.83%)</title><rect x="256.2" y="1683.0" width="9.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="259.2" y="1694.0"></text>
</g>
<g>
<title>do_softirq.part.17 (5 samples, 0.70%)</title><rect x="257.8" y="1667.0" width="8.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="260.8" y="1678.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 0.70%)</title><rect x="257.8" y="1651.0" width="8.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="260.8" y="1662.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.70%)</title><rect x="257.8" y="1635.0" width="8.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="260.8" y="1646.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 0.70%)</title><rect x="257.8" y="1619.0" width="8.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="260.8" y="1630.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.70%)</title><rect x="257.8" y="1603.0" width="8.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="260.8" y="1614.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 0.70%)</title><rect x="257.8" y="1587.0" width="8.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="260.8" y="1598.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.70%)</title><rect x="257.8" y="1571.0" width="8.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="260.8" y="1582.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.70%)</title><rect x="257.8" y="1555.0" width="8.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="260.8" y="1566.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 0.70%)</title><rect x="257.8" y="1539.0" width="8.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="260.8" y="1550.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 0.70%)</title><rect x="257.8" y="1523.0" width="8.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="260.8" y="1534.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 0.70%)</title><rect x="257.8" y="1507.0" width="8.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="260.8" y="1518.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 0.70%)</title><rect x="257.8" y="1491.0" width="8.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="260.8" y="1502.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="257.8" y="1475.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="260.8" y="1486.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.42%)</title><rect x="259.5" y="1475.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="262.5" y="1486.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.42%)</title><rect x="259.5" y="1459.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="262.5" y="1470.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.42%)</title><rect x="259.5" y="1443.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="262.5" y="1454.0"></text>
</g>
<g>
<title>tcp_send_ack (3 samples, 0.42%)</title><rect x="259.5" y="1427.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="262.5" y="1438.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.39 (3 samples, 0.42%)</title><rect x="259.5" y="1411.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="262.5" y="1422.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.42%)</title><rect x="259.5" y="1395.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="262.5" y="1406.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.28%)</title><rect x="261.1" y="1379.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="264.1" y="1390.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.28%)</title><rect x="261.1" y="1363.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.1" y="1374.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.28%)</title><rect x="261.1" y="1347.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="264.1" y="1358.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.28%)</title><rect x="261.1" y="1331.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="264.1" y="1342.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.28%)</title><rect x="261.1" y="1315.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="264.1" y="1326.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.28%)</title><rect x="261.1" y="1299.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="264.1" y="1310.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.28%)</title><rect x="261.1" y="1283.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="264.1" y="1294.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="262.7" y="1267.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="265.7" y="1278.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.14%)</title><rect x="264.4" y="1475.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="267.4" y="1486.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.14%)</title><rect x="266.0" y="1683.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="269.0" y="1694.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="266.0" y="1667.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="269.0" y="1678.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="266.0" y="1651.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="269.0" y="1662.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.14%)</title><rect x="267.7" y="1827.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="270.7" y="1838.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.14%)</title><rect x="267.7" y="1811.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="270.7" y="1822.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (58 samples, 8.07%)</title><rect x="269.3" y="1987.0" width="95.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.3" y="1998.0">one/nio/poo..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (58 samples, 8.07%)</title><rect x="269.3" y="1971.0" width="95.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.3" y="1982.0">one/nio/poo..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (58 samples, 8.07%)</title><rect x="269.3" y="1955.0" width="95.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.3" y="1966.0">one/nio/poo..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.setKeepAlive (2 samples, 0.28%)</title><rect x="269.3" y="1939.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.3" y="1950.0"></text>
</g>
<g>
<title>__GI___setsockopt (2 samples, 0.28%)</title><rect x="269.3" y="1923.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="272.3" y="1934.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.28%)</title><rect x="269.3" y="1907.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="272.3" y="1918.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.28%)</title><rect x="269.3" y="1891.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="272.3" y="1902.0"></text>
</g>
<g>
<title>sys_setsockopt (2 samples, 0.28%)</title><rect x="269.3" y="1875.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="272.3" y="1886.0"></text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.14%)</title><rect x="269.3" y="1859.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="272.3" y="1870.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.14%)</title><rect x="270.9" y="1859.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="273.9" y="1870.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.14%)</title><rect x="270.9" y="1843.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="273.9" y="1854.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (1 samples, 0.14%)</title><rect x="270.9" y="1827.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="273.9" y="1838.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setNoDelay (1 samples, 0.14%)</title><rect x="272.6" y="1939.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="275.6" y="1950.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.14%)</title><rect x="272.6" y="1923.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="275.6" y="1934.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="272.6" y="1907.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="275.6" y="1918.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="272.6" y="1891.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="275.6" y="1902.0"></text>
</g>
<g>
<title>sys_setsockopt (1 samples, 0.14%)</title><rect x="272.6" y="1875.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="275.6" y="1886.0"></text>
</g>
<g>
<title>sock_common_setsockopt (1 samples, 0.14%)</title><rect x="272.6" y="1859.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="275.6" y="1870.0"></text>
</g>
<g>
<title>tcp_setsockopt (1 samples, 0.14%)</title><rect x="272.6" y="1843.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="275.6" y="1854.0"></text>
</g>
<g>
<title>do_tcp_setsockopt.isra.40 (1 samples, 0.14%)</title><rect x="272.6" y="1827.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="275.6" y="1838.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.14%)</title><rect x="272.6" y="1811.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="275.6" y="1822.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.14%)</title><rect x="272.6" y="1795.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="275.6" y="1806.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="272.6" y="1779.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="275.6" y="1790.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (7 samples, 0.97%)</title><rect x="274.2" y="1939.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.2" y="1950.0"></text>
</g>
<g>
<title>__GI___setsockopt (7 samples, 0.97%)</title><rect x="274.2" y="1923.0" width="11.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="277.2" y="1934.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.42%)</title><rect x="280.8" y="1907.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="283.8" y="1918.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.42%)</title><rect x="280.8" y="1891.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="283.8" y="1902.0"></text>
</g>
<g>
<title>sys_setsockopt (2 samples, 0.28%)</title><rect x="282.4" y="1875.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="285.4" y="1886.0"></text>
</g>
<g>
<title>sock_set_timeout (1 samples, 0.14%)</title><rect x="282.4" y="1859.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="285.4" y="1870.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.14%)</title><rect x="284.1" y="1859.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="287.1" y="1870.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.14%)</title><rect x="284.1" y="1843.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="287.1" y="1854.0"></text>
</g>
<g>
<title>one/nio/net/Socket.connect (38 samples, 5.29%)</title><rect x="285.7" y="1939.0" width="62.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.7" y="1950.0">one/ni..</text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.14%)</title><rect x="285.7" y="1923.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.7" y="1934.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.14%)</title><rect x="285.7" y="1907.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.7" y="1918.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.14%)</title><rect x="285.7" y="1891.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.7" y="1902.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.14%)</title><rect x="285.7" y="1875.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="288.7" y="1886.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.14%)</title><rect x="285.7" y="1859.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.7" y="1870.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.14%)</title><rect x="285.7" y="1843.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="288.7" y="1854.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.14%)</title><rect x="285.7" y="1827.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="288.7" y="1838.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.14%)</title><rect x="285.7" y="1811.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="288.7" y="1822.0"></text>
</g>
<g>
<title>_init (1 samples, 0.14%)</title><rect x="285.7" y="1795.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="288.7" y="1806.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect (37 samples, 5.15%)</title><rect x="287.4" y="1923.0" width="60.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.4" y="1934.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect0 (37 samples, 5.15%)</title><rect x="287.4" y="1907.0" width="60.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.4" y="1918.0">one/ni..</text>
</g>
<g>
<title>[unknown] (37 samples, 5.15%)</title><rect x="287.4" y="1891.0" width="60.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="290.4" y="1902.0">[unkno..</text>
</g>
<g>
<title>__libc_connect (37 samples, 5.15%)</title><rect x="287.4" y="1875.0" width="60.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="290.4" y="1886.0">__libc..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 4.59%)</title><rect x="293.9" y="1859.0" width="54.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="296.9" y="1870.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (33 samples, 4.59%)</title><rect x="293.9" y="1843.0" width="54.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="296.9" y="1854.0">do_sy..</text>
</g>
<g>
<title>sys_connect (33 samples, 4.59%)</title><rect x="293.9" y="1827.0" width="54.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="296.9" y="1838.0">sys_c..</text>
</g>
<g>
<title>SYSC_connect (33 samples, 4.59%)</title><rect x="293.9" y="1811.0" width="54.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="296.9" y="1822.0">SYSC_..</text>
</g>
<g>
<title>inet_stream_connect (32 samples, 4.45%)</title><rect x="293.9" y="1795.0" width="52.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="296.9" y="1806.0">inet_..</text>
</g>
<g>
<title>__inet_stream_connect (31 samples, 4.31%)</title><rect x="293.9" y="1779.0" width="50.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="296.9" y="1790.0">__ine..</text>
</g>
<g>
<title>release_sock (14 samples, 1.95%)</title><rect x="293.9" y="1763.0" width="23.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="296.9" y="1774.0">r..</text>
</g>
<g>
<title>__release_sock (14 samples, 1.95%)</title><rect x="293.9" y="1747.0" width="23.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="296.9" y="1758.0">_..</text>
</g>
<g>
<title>tcp_v4_do_rcv (14 samples, 1.95%)</title><rect x="293.9" y="1731.0" width="23.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="296.9" y="1742.0">t..</text>
</g>
<g>
<title>tcp_rcv_state_process (14 samples, 1.95%)</title><rect x="293.9" y="1715.0" width="23.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="296.9" y="1726.0">t..</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.14%)</title><rect x="295.6" y="1699.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="298.6" y="1710.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.14%)</title><rect x="295.6" y="1683.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="298.6" y="1694.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.14%)</title><rect x="295.6" y="1667.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="298.6" y="1678.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.14%)</title><rect x="295.6" y="1651.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="298.6" y="1662.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.14%)</title><rect x="295.6" y="1635.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="298.6" y="1646.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.14%)</title><rect x="295.6" y="1619.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="298.6" y="1630.0"></text>
</g>
<g>
<title>tcp_finish_connect (2 samples, 0.28%)</title><rect x="297.2" y="1699.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="300.2" y="1710.0"></text>
</g>
<g>
<title>tcp_init_transfer (2 samples, 0.28%)</title><rect x="297.2" y="1683.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="300.2" y="1694.0"></text>
</g>
<g>
<title>tcp_default_init_rwnd (1 samples, 0.14%)</title><rect x="297.2" y="1667.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="300.2" y="1678.0"></text>
</g>
<g>
<title>tcp_get_metrics (1 samples, 0.14%)</title><rect x="298.8" y="1667.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="301.8" y="1678.0"></text>
</g>
<g>
<title>tcp_send_ack (10 samples, 1.39%)</title><rect x="300.5" y="1699.0" width="16.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="303.5" y="1710.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.39 (10 samples, 1.39%)</title><rect x="300.5" y="1683.0" width="16.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="303.5" y="1694.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (10 samples, 1.39%)</title><rect x="300.5" y="1667.0" width="16.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="303.5" y="1678.0"></text>
</g>
<g>
<title>ip_queue_xmit (9 samples, 1.25%)</title><rect x="302.1" y="1651.0" width="14.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="305.1" y="1662.0"></text>
</g>
<g>
<title>ip_local_out (9 samples, 1.25%)</title><rect x="302.1" y="1635.0" width="14.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="305.1" y="1646.0"></text>
</g>
<g>
<title>ip_output (9 samples, 1.25%)</title><rect x="302.1" y="1619.0" width="14.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="305.1" y="1630.0"></text>
</g>
<g>
<title>ip_finish_output (9 samples, 1.25%)</title><rect x="302.1" y="1603.0" width="14.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="305.1" y="1614.0"></text>
</g>
<g>
<title>ip_finish_output2 (9 samples, 1.25%)</title><rect x="302.1" y="1587.0" width="14.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="305.1" y="1598.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (9 samples, 1.25%)</title><rect x="302.1" y="1571.0" width="14.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="305.1" y="1582.0"></text>
</g>
<g>
<title>do_softirq.part.17 (9 samples, 1.25%)</title><rect x="302.1" y="1555.0" width="14.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="305.1" y="1566.0"></text>
</g>
<g>
<title>do_softirq_own_stack (9 samples, 1.25%)</title><rect x="302.1" y="1539.0" width="14.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="305.1" y="1550.0"></text>
</g>
<g>
<title>__softirqentry_text_start (9 samples, 1.25%)</title><rect x="302.1" y="1523.0" width="14.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="305.1" y="1534.0"></text>
</g>
<g>
<title>net_rx_action (9 samples, 1.25%)</title><rect x="302.1" y="1507.0" width="14.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="305.1" y="1518.0"></text>
</g>
<g>
<title>process_backlog (9 samples, 1.25%)</title><rect x="302.1" y="1491.0" width="14.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="305.1" y="1502.0"></text>
</g>
<g>
<title>__netif_receive_skb (9 samples, 1.25%)</title><rect x="302.1" y="1475.0" width="14.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="305.1" y="1486.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (9 samples, 1.25%)</title><rect x="302.1" y="1459.0" width="14.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="305.1" y="1470.0"></text>
</g>
<g>
<title>ip_rcv (9 samples, 1.25%)</title><rect x="302.1" y="1443.0" width="14.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="305.1" y="1454.0"></text>
</g>
<g>
<title>ip_rcv_finish (9 samples, 1.25%)</title><rect x="302.1" y="1427.0" width="14.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="305.1" y="1438.0"></text>
</g>
<g>
<title>ip_local_deliver (9 samples, 1.25%)</title><rect x="302.1" y="1411.0" width="14.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="305.1" y="1422.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (9 samples, 1.25%)</title><rect x="302.1" y="1395.0" width="14.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="305.1" y="1406.0"></text>
</g>
<g>
<title>tcp_v4_rcv (9 samples, 1.25%)</title><rect x="302.1" y="1379.0" width="14.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="305.1" y="1390.0"></text>
</g>
<g>
<title>tcp_check_req (4 samples, 0.56%)</title><rect x="303.8" y="1363.0" width="6.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="306.8" y="1374.0"></text>
</g>
<g>
<title>tcp_v6_syn_recv_sock (4 samples, 0.56%)</title><rect x="303.8" y="1347.0" width="6.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="306.8" y="1358.0"></text>
</g>
<g>
<title>__inet_inherit_port (1 samples, 0.14%)</title><rect x="303.8" y="1331.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="306.8" y="1342.0"></text>
</g>
<g>
<title>tcp_v4_syn_recv_sock (3 samples, 0.42%)</title><rect x="305.4" y="1331.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="308.4" y="1342.0"></text>
</g>
<g>
<title>tcp_create_openreq_child (2 samples, 0.28%)</title><rect x="305.4" y="1315.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="308.4" y="1326.0"></text>
</g>
<g>
<title>inet_csk_clone_lock (1 samples, 0.14%)</title><rect x="307.1" y="1299.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="310.1" y="1310.0"></text>
</g>
<g>
<title>memcpy_erms (1 samples, 0.14%)</title><rect x="307.1" y="1283.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="310.1" y="1294.0"></text>
</g>
<g>
<title>tcp_sync_mss (1 samples, 0.14%)</title><rect x="308.7" y="1315.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="311.7" y="1326.0"></text>
</g>
<g>
<title>tcp_child_process (4 samples, 0.56%)</title><rect x="310.3" y="1363.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="313.3" y="1374.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.42%)</title><rect x="310.3" y="1347.0" width="5.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="313.3" y="1358.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.42%)</title><rect x="310.3" y="1331.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="313.3" y="1342.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.28%)</title><rect x="310.3" y="1315.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="313.3" y="1326.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.28%)</title><rect x="310.3" y="1299.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="313.3" y="1310.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="313.6" y="1315.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="316.6" y="1326.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.14%)</title><rect x="315.3" y="1347.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="318.3" y="1358.0"></text>
</g>
<g>
<title>tcp_validate_incoming (1 samples, 0.14%)</title><rect x="315.3" y="1331.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="318.3" y="1342.0"></text>
</g>
<g>
<title>tcp_v6_connect (17 samples, 2.36%)</title><rect x="316.9" y="1763.0" width="27.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="319.9" y="1774.0">t..</text>
</g>
<g>
<title>tcp_v4_connect (17 samples, 2.36%)</title><rect x="316.9" y="1747.0" width="27.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="319.9" y="1758.0">t..</text>
</g>
<g>
<title>ip_route_output_key_hash (2 samples, 0.28%)</title><rect x="316.9" y="1731.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="319.9" y="1742.0"></text>
</g>
<g>
<title>ip_route_output_key_hash_rcu (2 samples, 0.28%)</title><rect x="316.9" y="1715.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="319.9" y="1726.0"></text>
</g>
<g>
<title>fib_table_lookup (1 samples, 0.14%)</title><rect x="318.5" y="1699.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="321.5" y="1710.0"></text>
</g>
<g>
<title>tcp_connect (14 samples, 1.95%)</title><rect x="320.2" y="1731.0" width="23.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="323.2" y="1742.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (13 samples, 1.81%)</title><rect x="320.2" y="1715.0" width="21.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="323.2" y="1726.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (12 samples, 1.67%)</title><rect x="321.8" y="1699.0" width="19.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="324.8" y="1710.0"></text>
</g>
<g>
<title>ip_local_out (11 samples, 1.53%)</title><rect x="323.5" y="1683.0" width="18.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="326.5" y="1694.0"></text>
</g>
<g>
<title>ip_output (11 samples, 1.53%)</title><rect x="323.5" y="1667.0" width="18.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="326.5" y="1678.0"></text>
</g>
<g>
<title>ip_finish_output (11 samples, 1.53%)</title><rect x="323.5" y="1651.0" width="18.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="326.5" y="1662.0"></text>
</g>
<g>
<title>ip_finish_output2 (11 samples, 1.53%)</title><rect x="323.5" y="1635.0" width="18.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="326.5" y="1646.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (11 samples, 1.53%)</title><rect x="323.5" y="1619.0" width="18.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="326.5" y="1630.0"></text>
</g>
<g>
<title>do_softirq.part.17 (11 samples, 1.53%)</title><rect x="323.5" y="1603.0" width="18.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="326.5" y="1614.0"></text>
</g>
<g>
<title>do_softirq_own_stack (11 samples, 1.53%)</title><rect x="323.5" y="1587.0" width="18.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="326.5" y="1598.0"></text>
</g>
<g>
<title>__softirqentry_text_start (11 samples, 1.53%)</title><rect x="323.5" y="1571.0" width="18.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="326.5" y="1582.0"></text>
</g>
<g>
<title>net_rx_action (10 samples, 1.39%)</title><rect x="323.5" y="1555.0" width="16.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="326.5" y="1566.0"></text>
</g>
<g>
<title>process_backlog (10 samples, 1.39%)</title><rect x="323.5" y="1539.0" width="16.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="326.5" y="1550.0"></text>
</g>
<g>
<title>__netif_receive_skb (10 samples, 1.39%)</title><rect x="323.5" y="1523.0" width="16.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="326.5" y="1534.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (10 samples, 1.39%)</title><rect x="323.5" y="1507.0" width="16.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="326.5" y="1518.0"></text>
</g>
<g>
<title>ip_rcv (9 samples, 1.25%)</title><rect x="325.1" y="1491.0" width="14.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="328.1" y="1502.0"></text>
</g>
<g>
<title>ip_rcv_finish (9 samples, 1.25%)</title><rect x="325.1" y="1475.0" width="14.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="328.1" y="1486.0"></text>
</g>
<g>
<title>ip_local_deliver (9 samples, 1.25%)</title><rect x="325.1" y="1459.0" width="14.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="328.1" y="1470.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (9 samples, 1.25%)</title><rect x="325.1" y="1443.0" width="14.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="328.1" y="1454.0"></text>
</g>
<g>
<title>tcp_v4_rcv (9 samples, 1.25%)</title><rect x="325.1" y="1427.0" width="14.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="328.1" y="1438.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.14%)</title><rect x="326.7" y="1411.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="329.7" y="1422.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.97%)</title><rect x="328.4" y="1411.0" width="11.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="331.4" y="1422.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (6 samples, 0.83%)</title><rect x="328.4" y="1395.0" width="9.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="331.4" y="1406.0"></text>
</g>
<g>
<title>tcp_v6_conn_request (6 samples, 0.83%)</title><rect x="328.4" y="1379.0" width="9.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="331.4" y="1390.0"></text>
</g>
<g>
<title>tcp_v4_conn_request (6 samples, 0.83%)</title><rect x="328.4" y="1363.0" width="9.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="331.4" y="1374.0"></text>
</g>
<g>
<title>tcp_conn_request (6 samples, 0.83%)</title><rect x="328.4" y="1347.0" width="9.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="331.4" y="1358.0"></text>
</g>
<g>
<title>tcp_try_fastopen (1 samples, 0.14%)</title><rect x="331.7" y="1331.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="334.7" y="1342.0"></text>
</g>
<g>
<title>tcp_v4_send_synack (3 samples, 0.42%)</title><rect x="333.3" y="1331.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="336.3" y="1342.0"></text>
</g>
<g>
<title>ip_build_and_send_pkt (2 samples, 0.28%)</title><rect x="333.3" y="1315.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="336.3" y="1326.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.28%)</title><rect x="333.3" y="1299.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="336.3" y="1310.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.28%)</title><rect x="333.3" y="1283.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="336.3" y="1294.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.14%)</title><rect x="335.0" y="1267.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="338.0" y="1278.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="335.0" y="1251.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="338.0" y="1262.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.14%)</title><rect x="335.0" y="1235.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="338.0" y="1246.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="335.0" y="1219.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="338.0" y="1230.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="335.0" y="1203.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="338.0" y="1214.0"></text>
</g>
<g>
<title>sock_edemux (1 samples, 0.14%)</title><rect x="335.0" y="1187.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="338.0" y="1198.0"></text>
</g>
<g>
<title>tcp_make_synack (1 samples, 0.14%)</title><rect x="336.6" y="1315.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="339.6" y="1326.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.14%)</title><rect x="336.6" y="1299.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="339.6" y="1310.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.14%)</title><rect x="336.6" y="1283.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="339.6" y="1294.0"></text>
</g>
<g>
<title>tcp_v6_conn_request (1 samples, 0.14%)</title><rect x="338.2" y="1395.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="341.2" y="1406.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.14%)</title><rect x="339.9" y="1555.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="342.9" y="1566.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.14%)</title><rect x="341.5" y="1715.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="344.5" y="1726.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.14%)</title><rect x="341.5" y="1699.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="344.5" y="1710.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.14%)</title><rect x="343.2" y="1731.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="346.2" y="1742.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.14%)</title><rect x="344.8" y="1779.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="347.8" y="1790.0"></text>
</g>
<g>
<title>security_socket_connect (1 samples, 0.14%)</title><rect x="346.4" y="1795.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="349.4" y="1806.0"></text>
</g>
<g>
<title>apparmor_socket_connect (1 samples, 0.14%)</title><rect x="346.4" y="1779.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="349.4" y="1790.0"></text>
</g>
<g>
<title>aa_sock_connect_perm (1 samples, 0.14%)</title><rect x="346.4" y="1763.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="349.4" y="1774.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.14%)</title><rect x="346.4" y="1747.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="349.4" y="1758.0"></text>
</g>
<g>
<title>aa_label_sk_perm (1 samples, 0.14%)</title><rect x="346.4" y="1731.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="349.4" y="1742.0"></text>
</g>
<g>
<title>one/nio/net/Socket.create (10 samples, 1.39%)</title><rect x="348.1" y="1939.0" width="16.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="351.1" y="1950.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.&lt;init&gt; (10 samples, 1.39%)</title><rect x="348.1" y="1923.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="351.1" y="1934.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.socket0 (10 samples, 1.39%)</title><rect x="348.1" y="1907.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.1" y="1918.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 1.39%)</title><rect x="348.1" y="1891.0" width="16.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="351.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 1.39%)</title><rect x="348.1" y="1875.0" width="16.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="351.1" y="1886.0"></text>
</g>
<g>
<title>socket (10 samples, 1.39%)</title><rect x="348.1" y="1859.0" width="16.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="351.1" y="1870.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 1.39%)</title><rect x="348.1" y="1843.0" width="16.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="351.1" y="1854.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 1.39%)</title><rect x="348.1" y="1827.0" width="16.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="351.1" y="1838.0"></text>
</g>
<g>
<title>sys_socket (9 samples, 1.25%)</title><rect x="349.7" y="1811.0" width="14.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="352.7" y="1822.0"></text>
</g>
<g>
<title>__sock_create (6 samples, 0.83%)</title><rect x="349.7" y="1795.0" width="9.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="352.7" y="1806.0"></text>
</g>
<g>
<title>inet6_create (3 samples, 0.42%)</title><rect x="349.7" y="1779.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="352.7" y="1790.0"></text>
</g>
<g>
<title>sk_alloc (2 samples, 0.28%)</title><rect x="349.7" y="1763.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="352.7" y="1774.0"></text>
</g>
<g>
<title>sk_prot_alloc (1 samples, 0.14%)</title><rect x="351.4" y="1747.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="354.4" y="1758.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.14%)</title><rect x="351.4" y="1731.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="354.4" y="1742.0"></text>
</g>
<g>
<title>tcp_v6_init_sock (1 samples, 0.14%)</title><rect x="353.0" y="1763.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="356.0" y="1774.0"></text>
</g>
<g>
<title>tcp_init_sock (1 samples, 0.14%)</title><rect x="353.0" y="1747.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="356.0" y="1758.0"></text>
</g>
<g>
<title>tcp_init_xmit_timers (1 samples, 0.14%)</title><rect x="353.0" y="1731.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="356.0" y="1742.0"></text>
</g>
<g>
<title>inet_csk_init_xmit_timers (1 samples, 0.14%)</title><rect x="353.0" y="1715.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="356.0" y="1726.0"></text>
</g>
<g>
<title>security_socket_create (1 samples, 0.14%)</title><rect x="354.6" y="1779.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="357.6" y="1790.0"></text>
</g>
<g>
<title>sock_alloc (1 samples, 0.14%)</title><rect x="356.3" y="1779.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="359.3" y="1790.0"></text>
</g>
<g>
<title>new_inode_pseudo (1 samples, 0.14%)</title><rect x="356.3" y="1763.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="359.3" y="1774.0"></text>
</g>
<g>
<title>sock_alloc_inode (1 samples, 0.14%)</title><rect x="356.3" y="1747.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="359.3" y="1758.0"></text>
</g>
<g>
<title>try_module_get (1 samples, 0.14%)</title><rect x="357.9" y="1779.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="360.9" y="1790.0"></text>
</g>
<g>
<title>sock_map_fd (3 samples, 0.42%)</title><rect x="359.6" y="1795.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="362.6" y="1806.0"></text>
</g>
<g>
<title>mntget (1 samples, 0.14%)</title><rect x="359.6" y="1779.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="362.6" y="1790.0"></text>
</g>
<g>
<title>sock_alloc_file (2 samples, 0.28%)</title><rect x="361.2" y="1779.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="364.2" y="1790.0"></text>
</g>
<g>
<title>d_alloc_pseudo (1 samples, 0.14%)</title><rect x="361.2" y="1763.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.2" y="1774.0"></text>
</g>
<g>
<title>__d_alloc (1 samples, 0.14%)</title><rect x="361.2" y="1747.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="364.2" y="1758.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.14%)</title><rect x="361.2" y="1731.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="364.2" y="1742.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.14%)</title><rect x="361.2" y="1715.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="364.2" y="1726.0"></text>
</g>
<g>
<title>security_d_instantiate (1 samples, 0.14%)</title><rect x="362.9" y="1763.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="365.9" y="1774.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.invalidateObject (17 samples, 2.36%)</title><rect x="364.5" y="1987.0" width="27.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="367.5" y="1998.0">o..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.destroyObject (17 samples, 2.36%)</title><rect x="364.5" y="1971.0" width="27.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.5" y="1982.0">o..</text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.14%)</title><rect x="364.5" y="1955.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="367.5" y="1966.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.14%)</title><rect x="364.5" y="1939.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="367.5" y="1950.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.14%)</title><rect x="364.5" y="1923.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="367.5" y="1934.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.14%)</title><rect x="364.5" y="1907.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="367.5" y="1918.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.14%)</title><rect x="364.5" y="1891.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="367.5" y="1902.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.14%)</title><rect x="364.5" y="1875.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="367.5" y="1886.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.14%)</title><rect x="364.5" y="1859.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="367.5" y="1870.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.14%)</title><rect x="364.5" y="1843.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="367.5" y="1854.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.14%)</title><rect x="364.5" y="1827.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="367.5" y="1838.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.14%)</title><rect x="364.5" y="1811.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="367.5" y="1822.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.destroyObject (16 samples, 2.23%)</title><rect x="366.1" y="1955.0" width="26.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.1" y="1966.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (15 samples, 2.09%)</title><rect x="367.8" y="1939.0" width="24.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="370.8" y="1950.0">o..</text>
</g>
<g>
<title>[unknown] (11 samples, 1.53%)</title><rect x="367.8" y="1923.0" width="18.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="370.8" y="1934.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 1.53%)</title><rect x="367.8" y="1907.0" width="18.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="370.8" y="1918.0"></text>
</g>
<g>
<title>__GI___shutdown (11 samples, 1.53%)</title><rect x="367.8" y="1891.0" width="18.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="370.8" y="1902.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 1.53%)</title><rect x="367.8" y="1875.0" width="18.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="370.8" y="1886.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 1.53%)</title><rect x="367.8" y="1859.0" width="18.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="370.8" y="1870.0"></text>
</g>
<g>
<title>sys_shutdown (11 samples, 1.53%)</title><rect x="367.8" y="1843.0" width="18.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="370.8" y="1854.0"></text>
</g>
<g>
<title>inet_shutdown (11 samples, 1.53%)</title><rect x="367.8" y="1827.0" width="18.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="370.8" y="1838.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.14%)</title><rect x="367.8" y="1811.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="370.8" y="1822.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.14%)</title><rect x="367.8" y="1795.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="370.8" y="1806.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="367.8" y="1779.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="370.8" y="1790.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.14%)</title><rect x="367.8" y="1763.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="370.8" y="1774.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.14%)</title><rect x="367.8" y="1747.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="370.8" y="1758.0"></text>
</g>
<g>
<title>tcp_xmit_recovery.part.54 (1 samples, 0.14%)</title><rect x="367.8" y="1731.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="370.8" y="1742.0"></text>
</g>
<g>
<title>tcp_xmit_retransmit_queue (1 samples, 0.14%)</title><rect x="367.8" y="1715.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="370.8" y="1726.0"></text>
</g>
<g>
<title>tcp_xmit_retransmit_queue.part.41 (1 samples, 0.14%)</title><rect x="367.8" y="1699.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="370.8" y="1710.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.14%)</title><rect x="367.8" y="1683.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="370.8" y="1694.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.14%)</title><rect x="367.8" y="1667.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="370.8" y="1678.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.14%)</title><rect x="367.8" y="1651.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="370.8" y="1662.0"></text>
</g>
<g>
<title>tcp_shutdown (10 samples, 1.39%)</title><rect x="369.4" y="1811.0" width="16.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="372.4" y="1822.0"></text>
</g>
<g>
<title>tcp_send_fin (10 samples, 1.39%)</title><rect x="369.4" y="1795.0" width="16.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="372.4" y="1806.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.14%)</title><rect x="369.4" y="1779.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="372.4" y="1790.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.14%)</title><rect x="369.4" y="1763.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="372.4" y="1774.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.14%)</title><rect x="369.4" y="1747.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="372.4" y="1758.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.14%)</title><rect x="369.4" y="1731.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="372.4" y="1742.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (9 samples, 1.25%)</title><rect x="371.1" y="1779.0" width="14.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="374.1" y="1790.0"></text>
</g>
<g>
<title>tcp_write_xmit (9 samples, 1.25%)</title><rect x="371.1" y="1763.0" width="14.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="374.1" y="1774.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (7 samples, 0.97%)</title><rect x="371.1" y="1747.0" width="11.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="374.1" y="1758.0"></text>
</g>
<g>
<title>ip_queue_xmit (7 samples, 0.97%)</title><rect x="371.1" y="1731.0" width="11.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="374.1" y="1742.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 0.97%)</title><rect x="371.1" y="1715.0" width="11.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="374.1" y="1726.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.14%)</title><rect x="371.1" y="1699.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="374.1" y="1710.0"></text>
</g>
<g>
<title>ip_output (6 samples, 0.83%)</title><rect x="372.7" y="1699.0" width="9.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="375.7" y="1710.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.83%)</title><rect x="372.7" y="1683.0" width="9.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="375.7" y="1694.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 0.70%)</title><rect x="374.3" y="1667.0" width="8.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="377.3" y="1678.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 0.70%)</title><rect x="374.3" y="1651.0" width="8.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="377.3" y="1662.0"></text>
</g>
<g>
<title>do_softirq.part.17 (5 samples, 0.70%)</title><rect x="374.3" y="1635.0" width="8.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="377.3" y="1646.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 0.70%)</title><rect x="374.3" y="1619.0" width="8.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="377.3" y="1630.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.70%)</title><rect x="374.3" y="1603.0" width="8.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="377.3" y="1614.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 0.70%)</title><rect x="374.3" y="1587.0" width="8.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="377.3" y="1598.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.70%)</title><rect x="374.3" y="1571.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="377.3" y="1582.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 0.70%)</title><rect x="374.3" y="1555.0" width="8.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="377.3" y="1566.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.70%)</title><rect x="374.3" y="1539.0" width="8.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="377.3" y="1550.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.70%)</title><rect x="374.3" y="1523.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="377.3" y="1534.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 0.70%)</title><rect x="374.3" y="1507.0" width="8.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="377.3" y="1518.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 0.70%)</title><rect x="374.3" y="1491.0" width="8.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="377.3" y="1502.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.56%)</title><rect x="376.0" y="1475.0" width="6.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="379.0" y="1486.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.14%)</title><rect x="377.6" y="1459.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="380.6" y="1470.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.28%)</title><rect x="379.3" y="1459.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="382.3" y="1470.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.14%)</title><rect x="379.3" y="1443.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="382.3" y="1454.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="380.9" y="1443.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="383.9" y="1454.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.14%)</title><rect x="380.9" y="1427.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="383.9" y="1438.0"></text>
</g>
<g>
<title>tcp_validate_incoming (1 samples, 0.14%)</title><rect x="380.9" y="1411.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="383.9" y="1422.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.14%)</title><rect x="382.5" y="1747.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="385.5" y="1758.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.14%)</title><rect x="382.5" y="1731.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="385.5" y="1742.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (1 samples, 0.14%)</title><rect x="382.5" y="1715.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="385.5" y="1726.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.14%)</title><rect x="382.5" y="1699.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="385.5" y="1710.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.14%)</title><rect x="382.5" y="1683.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="385.5" y="1694.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.14%)</title><rect x="382.5" y="1667.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="385.5" y="1678.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.14%)</title><rect x="384.2" y="1747.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="387.2" y="1758.0"></text>
</g>
<g>
<title>close (4 samples, 0.56%)</title><rect x="385.8" y="1923.0" width="6.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="388.8" y="1934.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.56%)</title><rect x="385.8" y="1907.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="388.8" y="1918.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.56%)</title><rect x="385.8" y="1891.0" width="6.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="388.8" y="1902.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.56%)</title><rect x="385.8" y="1875.0" width="6.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="388.8" y="1886.0"></text>
</g>
<g>
<title>task_work_run (4 samples, 0.56%)</title><rect x="385.8" y="1859.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="388.8" y="1870.0"></text>
</g>
<g>
<title>____fput (4 samples, 0.56%)</title><rect x="385.8" y="1843.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="388.8" y="1854.0"></text>
</g>
<g>
<title>__fput (4 samples, 0.56%)</title><rect x="385.8" y="1827.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="388.8" y="1838.0"></text>
</g>
<g>
<title>dput (3 samples, 0.42%)</title><rect x="385.8" y="1811.0" width="5.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="388.8" y="1822.0"></text>
</g>
<g>
<title>dput.part.26 (3 samples, 0.42%)</title><rect x="385.8" y="1795.0" width="5.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="388.8" y="1806.0"></text>
</g>
<g>
<title>__dentry_kill (3 samples, 0.42%)</title><rect x="385.8" y="1779.0" width="5.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="388.8" y="1790.0"></text>
</g>
<g>
<title>dentry_unlink_inode (3 samples, 0.42%)</title><rect x="385.8" y="1763.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="388.8" y="1774.0"></text>
</g>
<g>
<title>iput (3 samples, 0.42%)</title><rect x="385.8" y="1747.0" width="5.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="388.8" y="1758.0"></text>
</g>
<g>
<title>evict (3 samples, 0.42%)</title><rect x="385.8" y="1731.0" width="5.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="388.8" y="1742.0"></text>
</g>
<g>
<title>destroy_inode (1 samples, 0.14%)</title><rect x="385.8" y="1715.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="388.8" y="1726.0"></text>
</g>
<g>
<title>__destroy_inode (1 samples, 0.14%)</title><rect x="385.8" y="1699.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="388.8" y="1710.0"></text>
</g>
<g>
<title>security_inode_free (1 samples, 0.14%)</title><rect x="385.8" y="1683.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="388.8" y="1694.0"></text>
</g>
<g>
<title>inode_wait_for_writeback (1 samples, 0.14%)</title><rect x="387.5" y="1715.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="390.5" y="1726.0"></text>
</g>
<g>
<title>wake_up_bit (1 samples, 0.14%)</title><rect x="389.1" y="1715.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="392.1" y="1726.0"></text>
</g>
<g>
<title>__wake_up_bit (1 samples, 0.14%)</title><rect x="389.1" y="1699.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="392.1" y="1710.0"></text>
</g>
<g>
<title>sock_close (1 samples, 0.14%)</title><rect x="390.8" y="1811.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="393.8" y="1822.0"></text>
</g>
<g>
<title>__sock_release (1 samples, 0.14%)</title><rect x="390.8" y="1795.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="393.8" y="1806.0"></text>
</g>
<g>
<title>inet_release (1 samples, 0.14%)</title><rect x="390.8" y="1779.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="393.8" y="1790.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService$$Lambda$67/1924820545.run (53 samples, 7.37%)</title><rect x="392.4" y="2083.0" width="87.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.4" y="2094.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.lambda$executeAsync$0 (53 samples, 7.37%)</title><rect x="392.4" y="2067.0" width="87.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.4" y="2078.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (39 samples, 5.42%)</title><rect x="392.4" y="2051.0" width="64.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="395.4" y="2062.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (20 samples, 2.78%)</title><rect x="395.7" y="2035.0" width="32.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.7" y="2046.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (20 samples, 2.78%)</title><rect x="395.7" y="2019.0" width="32.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.7" y="2030.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (20 samples, 2.78%)</title><rect x="395.7" y="2003.0" width="32.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.7" y="2014.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (20 samples, 2.78%)</title><rect x="395.7" y="1987.0" width="32.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.7" y="1998.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (20 samples, 2.78%)</title><rect x="395.7" y="1971.0" width="32.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.7" y="1982.0">on..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="395.7" y="1955.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="398.7" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="395.7" y="1939.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="398.7" y="1950.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.14%)</title><rect x="395.7" y="1923.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="398.7" y="1934.0"></text>
</g>
<g>
<title>__send (19 samples, 2.64%)</title><rect x="397.3" y="1955.0" width="31.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="400.3" y="1966.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 2.64%)</title><rect x="397.3" y="1939.0" width="31.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="400.3" y="1950.0">en..</text>
</g>
<g>
<title>do_syscall_64 (19 samples, 2.64%)</title><rect x="397.3" y="1923.0" width="31.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="400.3" y="1934.0">do..</text>
</g>
<g>
<title>sys_sendto (19 samples, 2.64%)</title><rect x="397.3" y="1907.0" width="31.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="400.3" y="1918.0">sy..</text>
</g>
<g>
<title>SYSC_sendto (19 samples, 2.64%)</title><rect x="397.3" y="1891.0" width="31.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="400.3" y="1902.0">SY..</text>
</g>
<g>
<title>sock_sendmsg (19 samples, 2.64%)</title><rect x="397.3" y="1875.0" width="31.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="400.3" y="1886.0">so..</text>
</g>
<g>
<title>inet_sendmsg (18 samples, 2.50%)</title><rect x="399.0" y="1859.0" width="29.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="402.0" y="1870.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (18 samples, 2.50%)</title><rect x="399.0" y="1843.0" width="29.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="402.0" y="1854.0">tc..</text>
</g>
<g>
<title>release_sock (6 samples, 0.83%)</title><rect x="399.0" y="1827.0" width="9.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="402.0" y="1838.0"></text>
</g>
<g>
<title>__release_sock (6 samples, 0.83%)</title><rect x="399.0" y="1811.0" width="9.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="402.0" y="1822.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (6 samples, 0.83%)</title><rect x="399.0" y="1795.0" width="9.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="402.0" y="1806.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (6 samples, 0.83%)</title><rect x="399.0" y="1779.0" width="9.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="402.0" y="1790.0"></text>
</g>
<g>
<title>tcp_validate_incoming (6 samples, 0.83%)</title><rect x="399.0" y="1763.0" width="9.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="402.0" y="1774.0"></text>
</g>
<g>
<title>tcp_reset (5 samples, 0.70%)</title><rect x="400.6" y="1747.0" width="8.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="403.6" y="1758.0"></text>
</g>
<g>
<title>tcp_done (5 samples, 0.70%)</title><rect x="400.6" y="1731.0" width="8.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="403.6" y="1742.0"></text>
</g>
<g>
<title>sock_def_wakeup (4 samples, 0.56%)</title><rect x="400.6" y="1715.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="403.6" y="1726.0"></text>
</g>
<g>
<title>__wake_up (4 samples, 0.56%)</title><rect x="400.6" y="1699.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="403.6" y="1710.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.56%)</title><rect x="400.6" y="1683.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="403.6" y="1694.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.56%)</title><rect x="400.6" y="1667.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="403.6" y="1678.0"></text>
</g>
<g>
<title>tcp_set_state (1 samples, 0.14%)</title><rect x="407.2" y="1715.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="410.2" y="1726.0"></text>
</g>
<g>
<title>inet_unhash (1 samples, 0.14%)</title><rect x="407.2" y="1699.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="410.2" y="1710.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="407.2" y="1683.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="410.2" y="1694.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (12 samples, 1.67%)</title><rect x="408.8" y="1827.0" width="19.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="411.8" y="1838.0"></text>
</g>
<g>
<title>tcp_push (11 samples, 1.53%)</title><rect x="410.4" y="1811.0" width="18.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="413.4" y="1822.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (11 samples, 1.53%)</title><rect x="410.4" y="1795.0" width="18.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.4" y="1806.0"></text>
</g>
<g>
<title>tcp_write_xmit (11 samples, 1.53%)</title><rect x="410.4" y="1779.0" width="18.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="413.4" y="1790.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (9 samples, 1.25%)</title><rect x="410.4" y="1763.0" width="14.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="413.4" y="1774.0"></text>
</g>
<g>
<title>ip_queue_xmit (9 samples, 1.25%)</title><rect x="410.4" y="1747.0" width="14.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="413.4" y="1758.0"></text>
</g>
<g>
<title>ip_local_out (9 samples, 1.25%)</title><rect x="410.4" y="1731.0" width="14.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="413.4" y="1742.0"></text>
</g>
<g>
<title>ip_output (9 samples, 1.25%)</title><rect x="410.4" y="1715.0" width="14.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="413.4" y="1726.0"></text>
</g>
<g>
<title>ip_finish_output (9 samples, 1.25%)</title><rect x="410.4" y="1699.0" width="14.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.4" y="1710.0"></text>
</g>
<g>
<title>ip_finish_output2 (9 samples, 1.25%)</title><rect x="410.4" y="1683.0" width="14.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="413.4" y="1694.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (9 samples, 1.25%)</title><rect x="410.4" y="1667.0" width="14.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="413.4" y="1678.0"></text>
</g>
<g>
<title>do_softirq.part.17 (9 samples, 1.25%)</title><rect x="410.4" y="1651.0" width="14.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="413.4" y="1662.0"></text>
</g>
<g>
<title>do_softirq_own_stack (9 samples, 1.25%)</title><rect x="410.4" y="1635.0" width="14.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="413.4" y="1646.0"></text>
</g>
<g>
<title>__softirqentry_text_start (9 samples, 1.25%)</title><rect x="410.4" y="1619.0" width="14.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="413.4" y="1630.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.14%)</title><rect x="410.4" y="1603.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="413.4" y="1614.0"></text>
</g>
<g>
<title>net_rx_action (8 samples, 1.11%)</title><rect x="412.1" y="1603.0" width="13.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="415.1" y="1614.0"></text>
</g>
<g>
<title>process_backlog (8 samples, 1.11%)</title><rect x="412.1" y="1587.0" width="13.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="415.1" y="1598.0"></text>
</g>
<g>
<title>__netif_receive_skb (8 samples, 1.11%)</title><rect x="412.1" y="1571.0" width="13.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="415.1" y="1582.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (8 samples, 1.11%)</title><rect x="412.1" y="1555.0" width="13.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="415.1" y="1566.0"></text>
</g>
<g>
<title>ip_rcv (8 samples, 1.11%)</title><rect x="412.1" y="1539.0" width="13.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="415.1" y="1550.0"></text>
</g>
<g>
<title>ip_rcv_finish (8 samples, 1.11%)</title><rect x="412.1" y="1523.0" width="13.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="415.1" y="1534.0"></text>
</g>
<g>
<title>ip_local_deliver (8 samples, 1.11%)</title><rect x="412.1" y="1507.0" width="13.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="415.1" y="1518.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (8 samples, 1.11%)</title><rect x="412.1" y="1491.0" width="13.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="415.1" y="1502.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.14%)</title><rect x="412.1" y="1475.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="415.1" y="1486.0"></text>
</g>
<g>
<title>tcp_v4_rcv (7 samples, 0.97%)</title><rect x="413.7" y="1475.0" width="11.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="416.7" y="1486.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.14%)</title><rect x="413.7" y="1459.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="416.7" y="1470.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.14%)</title><rect x="413.7" y="1443.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="416.7" y="1454.0"></text>
</g>
<g>
<title>skb_condense (1 samples, 0.14%)</title><rect x="415.4" y="1459.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="418.4" y="1470.0"></text>
</g>
<g>
<title>tcp_v4_send_reset (5 samples, 0.70%)</title><rect x="417.0" y="1459.0" width="8.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="420.0" y="1470.0"></text>
</g>
<g>
<title>ip_send_unicast_reply (5 samples, 0.70%)</title><rect x="417.0" y="1443.0" width="8.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="420.0" y="1454.0"></text>
</g>
<g>
<title>ip_append_data.part.44 (1 samples, 0.14%)</title><rect x="418.7" y="1427.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="421.7" y="1438.0"></text>
</g>
<g>
<title>__ip_append_data.isra.43 (1 samples, 0.14%)</title><rect x="418.7" y="1411.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="421.7" y="1422.0"></text>
</g>
<g>
<title>sock_wmalloc (1 samples, 0.14%)</title><rect x="418.7" y="1395.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="421.7" y="1406.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.14%)</title><rect x="418.7" y="1379.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="421.7" y="1390.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.14%)</title><rect x="418.7" y="1363.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="421.7" y="1374.0"></text>
</g>
<g>
<title>ip_push_pending_frames (1 samples, 0.14%)</title><rect x="420.3" y="1427.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="423.3" y="1438.0"></text>
</g>
<g>
<title>ip_send_skb (1 samples, 0.14%)</title><rect x="420.3" y="1411.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="423.3" y="1422.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.14%)</title><rect x="420.3" y="1395.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="423.3" y="1406.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.14%)</title><rect x="420.3" y="1379.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="423.3" y="1390.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.14%)</title><rect x="420.3" y="1363.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="423.3" y="1374.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="420.3" y="1347.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="423.3" y="1358.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.14%)</title><rect x="420.3" y="1331.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="423.3" y="1342.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="420.3" y="1315.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="423.3" y="1326.0"></text>
</g>
<g>
<title>ip_route_output_flow (2 samples, 0.28%)</title><rect x="421.9" y="1427.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="424.9" y="1438.0"></text>
</g>
<g>
<title>ip_route_output_key_hash (2 samples, 0.28%)</title><rect x="421.9" y="1411.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="424.9" y="1422.0"></text>
</g>
<g>
<title>ip_route_output_key_hash_rcu (2 samples, 0.28%)</title><rect x="421.9" y="1395.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="424.9" y="1406.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.14%)</title><rect x="425.2" y="1763.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="428.2" y="1774.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.14%)</title><rect x="426.9" y="1763.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="429.9" y="1774.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.14%)</title><rect x="426.9" y="1747.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="429.9" y="1758.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.14%)</title><rect x="426.9" y="1731.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="429.9" y="1742.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (17 samples, 2.36%)</title><rect x="428.5" y="2035.0" width="27.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="431.5" y="2046.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.close (17 samples, 2.36%)</title><rect x="428.5" y="2019.0" width="27.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="431.5" y="2030.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.unregister (4 samples, 0.56%)</title><rect x="428.5" y="2003.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.5" y="2014.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.disable (4 samples, 0.56%)</title><rect x="428.5" y="1987.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.5" y="1998.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (4 samples, 0.56%)</title><rect x="428.5" y="1971.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="431.5" y="1982.0"></text>
</g>
<g>
<title>__GI_epoll_ctl (3 samples, 0.42%)</title><rect x="430.1" y="1955.0" width="5.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="433.1" y="1966.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="433.4" y="1939.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="436.4" y="1950.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="433.4" y="1923.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="436.4" y="1934.0"></text>
</g>
<g>
<title>sys_epoll_ctl (1 samples, 0.14%)</title><rect x="433.4" y="1907.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="436.4" y="1918.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (12 samples, 1.67%)</title><rect x="435.1" y="2003.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="438.1" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.28%)</title><rect x="436.7" y="1987.0" width="3.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="439.7" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.28%)</title><rect x="436.7" y="1971.0" width="3.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="439.7" y="1982.0"></text>
</g>
<g>
<title>__GI___shutdown (2 samples, 0.28%)</title><rect x="436.7" y="1955.0" width="3.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="439.7" y="1966.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="438.3" y="1939.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="441.3" y="1950.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="438.3" y="1923.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="441.3" y="1934.0"></text>
</g>
<g>
<title>sys_shutdown (1 samples, 0.14%)</title><rect x="438.3" y="1907.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="441.3" y="1918.0"></text>
</g>
<g>
<title>security_socket_shutdown (1 samples, 0.14%)</title><rect x="438.3" y="1891.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="441.3" y="1902.0"></text>
</g>
<g>
<title>apparmor_socket_shutdown (1 samples, 0.14%)</title><rect x="438.3" y="1875.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="441.3" y="1886.0"></text>
</g>
<g>
<title>aa_sock_perm (1 samples, 0.14%)</title><rect x="438.3" y="1859.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="441.3" y="1870.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.14%)</title><rect x="438.3" y="1843.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="441.3" y="1854.0"></text>
</g>
<g>
<title>close (9 samples, 1.25%)</title><rect x="440.0" y="1987.0" width="14.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="443.0" y="1998.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.25%)</title><rect x="440.0" y="1971.0" width="14.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.0" y="1982.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.25%)</title><rect x="440.0" y="1955.0" width="14.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.0" y="1966.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (9 samples, 1.25%)</title><rect x="440.0" y="1939.0" width="14.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="443.0" y="1950.0"></text>
</g>
<g>
<title>task_work_run (9 samples, 1.25%)</title><rect x="440.0" y="1923.0" width="14.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="443.0" y="1934.0"></text>
</g>
<g>
<title>____fput (9 samples, 1.25%)</title><rect x="440.0" y="1907.0" width="14.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="443.0" y="1918.0"></text>
</g>
<g>
<title>__fput (9 samples, 1.25%)</title><rect x="440.0" y="1891.0" width="14.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="443.0" y="1902.0"></text>
</g>
<g>
<title>dput (4 samples, 0.56%)</title><rect x="440.0" y="1875.0" width="6.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="443.0" y="1886.0"></text>
</g>
<g>
<title>dput.part.26 (4 samples, 0.56%)</title><rect x="440.0" y="1859.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="443.0" y="1870.0"></text>
</g>
<g>
<title>___d_drop (1 samples, 0.14%)</title><rect x="440.0" y="1843.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="443.0" y="1854.0"></text>
</g>
<g>
<title>__dentry_kill (2 samples, 0.28%)</title><rect x="441.6" y="1843.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="444.6" y="1854.0"></text>
</g>
<g>
<title>dentry_free (1 samples, 0.14%)</title><rect x="441.6" y="1827.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="444.6" y="1838.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.14%)</title><rect x="441.6" y="1811.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="444.6" y="1822.0"></text>
</g>
<g>
<title>dentry_unlink_inode (1 samples, 0.14%)</title><rect x="443.3" y="1827.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="446.3" y="1838.0"></text>
</g>
<g>
<title>iput (1 samples, 0.14%)</title><rect x="443.3" y="1811.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="446.3" y="1822.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="443.3" y="1795.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="446.3" y="1806.0"></text>
</g>
<g>
<title>_raw_spin_trylock (1 samples, 0.14%)</title><rect x="444.9" y="1843.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="447.9" y="1854.0"></text>
</g>
<g>
<title>sock_close (5 samples, 0.70%)</title><rect x="446.6" y="1875.0" width="8.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="449.6" y="1886.0"></text>
</g>
<g>
<title>__sock_release (5 samples, 0.70%)</title><rect x="446.6" y="1859.0" width="8.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="449.6" y="1870.0"></text>
</g>
<g>
<title>inet6_release (5 samples, 0.70%)</title><rect x="446.6" y="1843.0" width="8.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="449.6" y="1854.0"></text>
</g>
<g>
<title>inet_release (5 samples, 0.70%)</title><rect x="446.6" y="1827.0" width="8.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="449.6" y="1838.0"></text>
</g>
<g>
<title>tcp_close (5 samples, 0.70%)</title><rect x="446.6" y="1811.0" width="8.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="449.6" y="1822.0"></text>
</g>
<g>
<title>inet_csk_destroy_sock (5 samples, 0.70%)</title><rect x="446.6" y="1795.0" width="8.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="449.6" y="1806.0"></text>
</g>
<g>
<title>tcp_v4_destroy_sock (1 samples, 0.14%)</title><rect x="448.2" y="1779.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="451.2" y="1790.0"></text>
</g>
<g>
<title>tcp_v6_destroy_sock (3 samples, 0.42%)</title><rect x="449.8" y="1779.0" width="5.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="452.8" y="1790.0"></text>
</g>
<g>
<title>inet6_destroy_sock (1 samples, 0.14%)</title><rect x="449.8" y="1763.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="452.8" y="1774.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.14%)</title><rect x="451.5" y="1763.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="454.5" y="1774.0"></text>
</g>
<g>
<title>tcp_v4_destroy_sock (1 samples, 0.14%)</title><rect x="453.1" y="1763.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="456.1" y="1774.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.14%)</title><rect x="453.1" y="1747.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="456.1" y="1758.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.14%)</title><rect x="453.1" y="1731.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="456.1" y="1742.0"></text>
</g>
<g>
<title>hrtimer_active (1 samples, 0.14%)</title><rect x="453.1" y="1715.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="456.1" y="1726.0"></text>
</g>
<g>
<title>one/nio/net/Session$QueueItem.releaseChain (1 samples, 0.14%)</title><rect x="454.8" y="2003.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.8" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService$$Lambda$66/2088607678.action (3 samples, 0.42%)</title><rect x="456.4" y="2051.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.4" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.lambda$executePut$7 (3 samples, 0.42%)</title><rect x="456.4" y="2035.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.4" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.put (3 samples, 0.42%)</title><rect x="456.4" y="2019.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.4" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.upsert (3 samples, 0.42%)</title><rect x="456.4" y="2003.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.4" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.upsert (3 samples, 0.42%)</title><rect x="456.4" y="1987.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.4" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.upsert (3 samples, 0.42%)</title><rect x="456.4" y="1971.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.4" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (3 samples, 0.42%)</title><rect x="456.4" y="1955.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.4" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.28%)</title><rect x="458.0" y="1939.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.0" y="1950.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="458.0" y="1923.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.14%)</title><rect x="459.7" y="1923.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.7" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService$$Lambda$78/639708821.action (11 samples, 1.53%)</title><rect x="461.3" y="2051.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.3" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.lambda$executeGet$1 (11 samples, 1.53%)</title><rect x="461.3" y="2035.0" width="18.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.3" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.get (11 samples, 1.53%)</title><rect x="461.3" y="2019.0" width="18.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.3" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.getRow (11 samples, 1.53%)</title><rect x="461.3" y="2003.0" width="18.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.3" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.28%)</title><rect x="461.3" y="1987.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="464.3" y="1998.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.28%)</title><rect x="461.3" y="1971.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.3" y="1982.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.14%)</title><rect x="463.0" y="1955.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.0" y="1966.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.14%)</title><rect x="463.0" y="1939.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.0" y="1950.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.14%)</title><rect x="463.0" y="1923.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.0" y="1934.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.14%)</title><rect x="463.0" y="1907.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.0" y="1918.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.14%)</title><rect x="463.0" y="1891.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.0" y="1902.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.14%)</title><rect x="463.0" y="1875.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.0" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$81/894641319.compare (1 samples, 0.14%)</title><rect x="463.0" y="1859.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.0" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (1 samples, 0.14%)</title><rect x="463.0" y="1843.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.0" y="1854.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="463.0" y="1827.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.0" y="1838.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.14%)</title><rect x="463.0" y="1811.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.0" y="1822.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.14%)</title><rect x="463.0" y="1795.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.0" y="1806.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.14%)</title><rect x="463.0" y="1779.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.0" y="1790.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.rowIterator (9 samples, 1.25%)</title><rect x="464.6" y="1987.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.6" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (1 samples, 0.14%)</title><rect x="464.6" y="1971.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.6" y="1982.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.14%)</title><rect x="464.6" y="1955.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.6" y="1966.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.14%)</title><rect x="464.6" y="1939.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.6" y="1950.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.14%)</title><rect x="464.6" y="1923.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.6" y="1934.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.14%)</title><rect x="464.6" y="1907.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.6" y="1918.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.14%)</title><rect x="464.6" y="1891.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.6" y="1902.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.14%)</title><rect x="464.6" y="1875.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="467.6" y="1886.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.14%)</title><rect x="464.6" y="1859.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.6" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.14%)</title><rect x="464.6" y="1843.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="467.6" y="1854.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1 samples, 0.14%)</title><rect x="464.6" y="1827.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.6" y="1838.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (1 samples, 0.14%)</title><rect x="464.6" y="1811.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="467.6" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (1 samples, 0.14%)</title><rect x="464.6" y="1795.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.6" y="1806.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getRowAt (1 samples, 0.14%)</title><rect x="464.6" y="1779.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.6" y="1790.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1 samples, 0.14%)</title><rect x="464.6" y="1763.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.6" y="1774.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (8 samples, 1.11%)</title><rect x="466.2" y="1971.0" width="13.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.2" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.iterator (1 samples, 0.14%)</title><rect x="467.9" y="1955.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.9" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.&lt;init&gt; (1 samples, 0.14%)</title><rect x="467.9" y="1939.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.9" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getOffsetsIndex (1 samples, 0.14%)</title><rect x="467.9" y="1923.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.9" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (1 samples, 0.14%)</title><rect x="467.9" y="1907.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.9" y="1918.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1 samples, 0.14%)</title><rect x="467.9" y="1891.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.9" y="1902.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (1 samples, 0.14%)</title><rect x="467.9" y="1875.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.9" y="1886.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (1 samples, 0.14%)</title><rect x="467.9" y="1859.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.9" y="1870.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (1 samples, 0.14%)</title><rect x="467.9" y="1843.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.9" y="1854.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.14%)</title><rect x="467.9" y="1827.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.9" y="1838.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.14%)</title><rect x="467.9" y="1811.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.9" y="1822.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.14%)</title><rect x="467.9" y="1795.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.9" y="1806.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.14%)</title><rect x="467.9" y="1779.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.9" y="1790.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.14%)</title><rect x="467.9" y="1763.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.9" y="1774.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.14%)</title><rect x="467.9" y="1747.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.9" y="1758.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.14%)</title><rect x="467.9" y="1731.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.9" y="1742.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.iterator (6 samples, 0.83%)</title><rect x="469.5" y="1955.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="472.5" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.14%)</title><rect x="469.5" y="1939.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.5" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.14%)</title><rect x="469.5" y="1923.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.5" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.14%)</title><rect x="469.5" y="1907.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.5" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (5 samples, 0.70%)</title><rect x="471.2" y="1939.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.2" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.iterator (5 samples, 0.70%)</title><rect x="471.2" y="1923.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.2" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.56%)</title><rect x="471.2" y="1907.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.2" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.56%)</title><rect x="471.2" y="1891.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.2" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.56%)</title><rect x="471.2" y="1875.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.2" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.56%)</title><rect x="471.2" y="1859.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.2" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.56%)</title><rect x="471.2" y="1843.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="474.2" y="1854.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.14%)</title><rect x="471.2" y="1827.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="474.2" y="1838.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.14%)</title><rect x="471.2" y="1811.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="474.2" y="1822.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.14%)</title><rect x="471.2" y="1795.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="474.2" y="1806.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.14%)</title><rect x="471.2" y="1779.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="474.2" y="1790.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.14%)</title><rect x="471.2" y="1763.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="474.2" y="1774.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.14%)</title><rect x="471.2" y="1747.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="474.2" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.42%)</title><rect x="472.8" y="1827.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.8" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.14%)</title><rect x="476.1" y="1811.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.1" y="1822.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="476.1" y="1795.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.1" y="1806.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="476.1" y="1779.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.1" y="1790.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.14%)</title><rect x="476.1" y="1763.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.1" y="1774.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.14%)</title><rect x="476.1" y="1747.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.1" y="1758.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.14%)</title><rect x="476.1" y="1731.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.1" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.14%)</title><rect x="477.7" y="1907.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.7" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.14%)</title><rect x="477.7" y="1891.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.7" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.14%)</title><rect x="477.7" y="1875.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.7" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService$$Lambda$73/267740599.run (105 samples, 14.60%)</title><rect x="479.4" y="2083.0" width="172.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.4" y="2094.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.lambda$executeGet$6 (105 samples, 14.60%)</title><rect x="479.4" y="2067.0" width="172.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.4" y="2078.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (4 samples, 0.56%)</title><rect x="481.0" y="2051.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.0" y="2062.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.56%)</title><rect x="481.0" y="2035.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.0" y="2046.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (3 samples, 0.42%)</title><rect x="482.7" y="2019.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.7" y="2030.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.42%)</title><rect x="482.7" y="2003.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.7" y="2014.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.42%)</title><rect x="482.7" y="1987.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.7" y="1998.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3 samples, 0.42%)</title><rect x="482.7" y="1971.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.7" y="1982.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.14%)</title><rect x="485.9" y="1955.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.9" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService$$Lambda$84/173389582.test (1 samples, 0.14%)</title><rect x="485.9" y="1939.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.9" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ServiceUtils.validResponse (1 samples, 0.14%)</title><rect x="485.9" y="1923.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.9" y="1934.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 1.11%)</title><rect x="487.6" y="2051.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.6" y="2062.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 1.11%)</title><rect x="487.6" y="2035.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.6" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.97%)</title><rect x="489.2" y="2019.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.2" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.97%)</title><rect x="489.2" y="2003.0" width="11.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.2" y="2014.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 0.97%)</title><rect x="489.2" y="1987.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.2" y="1998.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (7 samples, 0.97%)</title><rect x="489.2" y="1971.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.2" y="1982.0"></text>
</g>
<g>
<title>__send (7 samples, 0.97%)</title><rect x="489.2" y="1955.0" width="11.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="492.2" y="1966.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.97%)</title><rect x="489.2" y="1939.0" width="11.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="492.2" y="1950.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.97%)</title><rect x="489.2" y="1923.0" width="11.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="492.2" y="1934.0"></text>
</g>
<g>
<title>sys_sendto (7 samples, 0.97%)</title><rect x="489.2" y="1907.0" width="11.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="492.2" y="1918.0"></text>
</g>
<g>
<title>SYSC_sendto (7 samples, 0.97%)</title><rect x="489.2" y="1891.0" width="11.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="492.2" y="1902.0"></text>
</g>
<g>
<title>sock_sendmsg (7 samples, 0.97%)</title><rect x="489.2" y="1875.0" width="11.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="492.2" y="1886.0"></text>
</g>
<g>
<title>inet_sendmsg (6 samples, 0.83%)</title><rect x="489.2" y="1859.0" width="9.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="492.2" y="1870.0"></text>
</g>
<g>
<title>tcp_sendmsg (6 samples, 0.83%)</title><rect x="489.2" y="1843.0" width="9.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="492.2" y="1854.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (6 samples, 0.83%)</title><rect x="489.2" y="1827.0" width="9.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="492.2" y="1838.0"></text>
</g>
<g>
<title>tcp_push (6 samples, 0.83%)</title><rect x="489.2" y="1811.0" width="9.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="492.2" y="1822.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (6 samples, 0.83%)</title><rect x="489.2" y="1795.0" width="9.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="492.2" y="1806.0"></text>
</g>
<g>
<title>tcp_write_xmit (6 samples, 0.83%)</title><rect x="489.2" y="1779.0" width="9.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="492.2" y="1790.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.56%)</title><rect x="489.2" y="1763.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="492.2" y="1774.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.56%)</title><rect x="489.2" y="1747.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="492.2" y="1758.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.56%)</title><rect x="489.2" y="1731.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="492.2" y="1742.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.56%)</title><rect x="489.2" y="1715.0" width="6.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="492.2" y="1726.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.56%)</title><rect x="489.2" y="1699.0" width="6.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="492.2" y="1710.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.56%)</title><rect x="489.2" y="1683.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="492.2" y="1694.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.42%)</title><rect x="489.2" y="1667.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="492.2" y="1678.0"></text>
</g>
<g>
<title>do_softirq.part.17 (3 samples, 0.42%)</title><rect x="489.2" y="1651.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="492.2" y="1662.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.28%)</title><rect x="490.9" y="1635.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="493.9" y="1646.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.28%)</title><rect x="490.9" y="1619.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="493.9" y="1630.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.28%)</title><rect x="490.9" y="1603.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="493.9" y="1614.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.28%)</title><rect x="490.9" y="1587.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="493.9" y="1598.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.28%)</title><rect x="490.9" y="1571.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="493.9" y="1582.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.28%)</title><rect x="490.9" y="1555.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="493.9" y="1566.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.28%)</title><rect x="490.9" y="1539.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="493.9" y="1550.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.28%)</title><rect x="490.9" y="1523.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="493.9" y="1534.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.28%)</title><rect x="490.9" y="1507.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="493.9" y="1518.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.28%)</title><rect x="490.9" y="1491.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="493.9" y="1502.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.28%)</title><rect x="490.9" y="1475.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="493.9" y="1486.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.28%)</title><rect x="490.9" y="1459.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="493.9" y="1470.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.28%)</title><rect x="490.9" y="1443.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="493.9" y="1454.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="490.9" y="1427.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="493.9" y="1438.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.14%)</title><rect x="490.9" y="1411.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="493.9" y="1422.0"></text>
</g>
<g>
<title>native_sched_clock (1 samples, 0.14%)</title><rect x="490.9" y="1395.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="493.9" y="1406.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.14%)</title><rect x="492.5" y="1427.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="495.5" y="1438.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.14%)</title><rect x="492.5" y="1411.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="495.5" y="1422.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.14%)</title><rect x="492.5" y="1395.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="495.5" y="1406.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.14%)</title><rect x="492.5" y="1379.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="495.5" y="1390.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.14%)</title><rect x="492.5" y="1363.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="495.5" y="1374.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.14%)</title><rect x="494.1" y="1667.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="497.1" y="1678.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="494.1" y="1651.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="497.1" y="1662.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="494.1" y="1635.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="497.1" y="1646.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.14%)</title><rect x="494.1" y="1619.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="497.1" y="1630.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.14%)</title><rect x="494.1" y="1603.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="497.1" y="1614.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.14%)</title><rect x="494.1" y="1587.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="497.1" y="1598.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.14%)</title><rect x="494.1" y="1571.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="497.1" y="1582.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.14%)</title><rect x="495.8" y="1763.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="498.8" y="1774.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.14%)</title><rect x="497.4" y="1763.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="500.4" y="1774.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="499.1" y="1859.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="502.1" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.executeReplication (92 samples, 12.80%)</title><rect x="500.7" y="2051.0" width="151.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="503.7" y="2062.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService$$Lambda$75/458350815.action (13 samples, 1.81%)</title><rect x="502.4" y="2035.0" width="21.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.4" y="2046.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.lambda$executeGet$2 (13 samples, 1.81%)</title><rect x="502.4" y="2019.0" width="21.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.4" y="2030.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.get (13 samples, 1.81%)</title><rect x="502.4" y="2003.0" width="21.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.4" y="2014.0">r..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.14%)</title><rect x="502.4" y="1987.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.4" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1087493090.linkToTargetMethod (2 samples, 0.28%)</title><rect x="504.0" y="1987.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.0" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/286526834.invoke (2 samples, 0.28%)</title><rect x="504.0" y="1971.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="507.0" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1655745653.invokeStatic (1 samples, 0.14%)</title><rect x="504.0" y="1955.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.0" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.14%)</title><rect x="504.0" y="1939.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.0" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/176283021.invokeStatic (1 samples, 0.14%)</title><rect x="505.6" y="1955.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.6" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.14%)</title><rect x="505.6" y="1939.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.6" y="1950.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.14%)</title><rect x="505.6" y="1923.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.6" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.getRow (10 samples, 1.39%)</title><rect x="507.3" y="1987.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="510.3" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.rowIterator (10 samples, 1.39%)</title><rect x="507.3" y="1971.0" width="16.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.3" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (1 samples, 0.14%)</title><rect x="507.3" y="1955.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.3" y="1966.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.14%)</title><rect x="507.3" y="1939.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="510.3" y="1950.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.14%)</title><rect x="507.3" y="1923.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.3" y="1934.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.14%)</title><rect x="507.3" y="1907.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.3" y="1918.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.14%)</title><rect x="507.3" y="1891.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.3" y="1902.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.14%)</title><rect x="507.3" y="1875.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.3" y="1886.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.14%)</title><rect x="507.3" y="1859.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.3" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.14%)</title><rect x="507.3" y="1843.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.3" y="1854.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.14%)</title><rect x="507.3" y="1827.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.3" y="1838.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1 samples, 0.14%)</title><rect x="507.3" y="1811.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.3" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.14%)</title><rect x="507.3" y="1795.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.3" y="1806.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.14%)</title><rect x="507.3" y="1779.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.3" y="1790.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.14%)</title><rect x="507.3" y="1763.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.3" y="1774.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.14%)</title><rect x="507.3" y="1747.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.3" y="1758.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (9 samples, 1.25%)</title><rect x="508.9" y="1955.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="511.9" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.descendingMap (1 samples, 0.14%)</title><rect x="510.6" y="1939.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.6" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.descendingMap (1 samples, 0.14%)</title><rect x="510.6" y="1923.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.6" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.iterator (3 samples, 0.42%)</title><rect x="512.2" y="1939.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.2" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.&lt;init&gt; (3 samples, 0.42%)</title><rect x="512.2" y="1923.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.2" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getOffsetsIndex (3 samples, 0.42%)</title><rect x="512.2" y="1907.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.2" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (2 samples, 0.28%)</title><rect x="513.8" y="1891.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.8" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.iterator (4 samples, 0.56%)</title><rect x="517.1" y="1939.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.1" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (4 samples, 0.56%)</title><rect x="517.1" y="1923.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.1" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.iterator (4 samples, 0.56%)</title><rect x="517.1" y="1907.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.1" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.56%)</title><rect x="517.1" y="1891.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.1" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.56%)</title><rect x="517.1" y="1875.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.1" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.56%)</title><rect x="517.1" y="1859.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.1" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.56%)</title><rect x="517.1" y="1843.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.1" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.56%)</title><rect x="517.1" y="1827.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.1" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.56%)</title><rect x="517.1" y="1811.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.1" y="1822.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="520.4" y="1795.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.4" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.14%)</title><rect x="522.0" y="1795.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="525.0" y="1806.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="522.0" y="1779.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="525.0" y="1790.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="522.0" y="1763.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.0" y="1774.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.14%)</title><rect x="522.0" y="1747.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.0" y="1758.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.proxy (78 samples, 10.85%)</title><rect x="523.7" y="2035.0" width="128.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.7" y="2046.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (20 samples, 2.78%)</title><rect x="523.7" y="2019.0" width="32.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.7" y="2030.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (20 samples, 2.78%)</title><rect x="523.7" y="2003.0" width="32.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.7" y="2014.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (20 samples, 2.78%)</title><rect x="523.7" y="1987.0" width="32.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="526.7" y="1998.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (10 samples, 1.39%)</title><rect x="523.7" y="1971.0" width="16.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.7" y="1982.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (10 samples, 1.39%)</title><rect x="523.7" y="1955.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.7" y="1966.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (10 samples, 1.39%)</title><rect x="523.7" y="1939.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.7" y="1950.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (10 samples, 1.39%)</title><rect x="523.7" y="1923.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.7" y="1934.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (10 samples, 1.39%)</title><rect x="523.7" y="1907.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.7" y="1918.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (10 samples, 1.39%)</title><rect x="523.7" y="1891.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.7" y="1902.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (6 samples, 0.83%)</title><rect x="523.7" y="1875.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.7" y="1886.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (5 samples, 0.70%)</title><rect x="523.7" y="1859.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.7" y="1870.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (5 samples, 0.70%)</title><rect x="523.7" y="1843.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.7" y="1854.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (5 samples, 0.70%)</title><rect x="523.7" y="1827.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="526.7" y="1838.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (5 samples, 0.70%)</title><rect x="523.7" y="1811.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="526.7" y="1822.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (5 samples, 0.70%)</title><rect x="523.7" y="1795.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.7" y="1806.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (5 samples, 0.70%)</title><rect x="523.7" y="1779.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.7" y="1790.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.28%)</title><rect x="523.7" y="1763.0" width="3.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="526.7" y="1774.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.14%)</title><rect x="523.7" y="1747.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="526.7" y="1758.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.14%)</title><rect x="525.3" y="1747.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="528.3" y="1758.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.14%)</title><rect x="525.3" y="1731.0" width="1.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="528.3" y="1742.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.42%)</title><rect x="527.0" y="1763.0" width="4.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="530.0" y="1774.0"></text>
</g>
<g>
<title>__write (3 samples, 0.42%)</title><rect x="527.0" y="1747.0" width="4.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="530.0" y="1758.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.42%)</title><rect x="527.0" y="1731.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="530.0" y="1742.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.42%)</title><rect x="527.0" y="1715.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="530.0" y="1726.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.42%)</title><rect x="527.0" y="1699.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="530.0" y="1710.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.42%)</title><rect x="527.0" y="1683.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="530.0" y="1694.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.42%)</title><rect x="527.0" y="1667.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="530.0" y="1678.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.42%)</title><rect x="527.0" y="1651.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="530.0" y="1662.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.14%)</title><rect x="527.0" y="1635.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="530.0" y="1646.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.28%)</title><rect x="528.6" y="1635.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="531.6" y="1646.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.14%)</title><rect x="528.6" y="1619.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="531.6" y="1630.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.14%)</title><rect x="530.3" y="1619.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="533.3" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.14%)</title><rect x="531.9" y="1859.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="534.9" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.14%)</title><rect x="531.9" y="1843.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.9" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.14%)</title><rect x="531.9" y="1827.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.9" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.14%)</title><rect x="531.9" y="1811.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.9" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.14%)</title><rect x="531.9" y="1795.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.14%)</title><rect x="531.9" y="1779.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.9" y="1790.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.14%)</title><rect x="531.9" y="1763.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="534.9" y="1774.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.14%)</title><rect x="531.9" y="1747.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="534.9" y="1758.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="531.9" y="1731.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="534.9" y="1742.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="531.9" y="1715.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="534.9" y="1726.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.14%)</title><rect x="531.9" y="1699.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="534.9" y="1710.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (4 samples, 0.56%)</title><rect x="533.5" y="1875.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="536.5" y="1886.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.56%)</title><rect x="533.5" y="1859.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="536.5" y="1870.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.56%)</title><rect x="533.5" y="1843.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.5" y="1854.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (1 samples, 0.14%)</title><rect x="533.5" y="1827.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.5" y="1838.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.throwableProxyToString (1 samples, 0.14%)</title><rect x="533.5" y="1811.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="536.5" y="1822.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (1 samples, 0.14%)</title><rect x="533.5" y="1795.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="536.5" y="1806.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (1 samples, 0.14%)</title><rect x="533.5" y="1779.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.5" y="1790.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (1 samples, 0.14%)</title><rect x="533.5" y="1763.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.5" y="1774.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="533.5" y="1747.0" width="1.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="536.5" y="1758.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (3 samples, 0.42%)</title><rect x="535.2" y="1827.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="538.2" y="1838.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (3 samples, 0.42%)</title><rect x="535.2" y="1811.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.2" y="1822.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (3 samples, 0.42%)</title><rect x="535.2" y="1795.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.2" y="1806.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (3 samples, 0.42%)</title><rect x="535.2" y="1779.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="538.2" y="1790.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.14%)</title><rect x="536.8" y="1763.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.8" y="1774.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 0.14%)</title><rect x="536.8" y="1747.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="539.8" y="1758.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.14%)</title><rect x="536.8" y="1731.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.8" y="1742.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.14%)</title><rect x="536.8" y="1715.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.8" y="1726.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (1 samples, 0.14%)</title><rect x="536.8" y="1699.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.8" y="1710.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.append (1 samples, 0.14%)</title><rect x="536.8" y="1683.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.8" y="1694.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.length (1 samples, 0.14%)</title><rect x="536.8" y="1667.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.8" y="1678.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (1 samples, 0.14%)</title><rect x="538.5" y="1763.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.5" y="1774.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (1 samples, 0.14%)</title><rect x="538.5" y="1747.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.5" y="1758.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.14%)</title><rect x="538.5" y="1731.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.5" y="1742.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.14%)</title><rect x="538.5" y="1715.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.5" y="1726.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (10 samples, 1.39%)</title><rect x="540.1" y="1971.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.1" y="1982.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/ThrowableProxy.&lt;init&gt; (10 samples, 1.39%)</title><rect x="540.1" y="1955.0" width="16.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.1" y="1966.0"></text>
</g>
<g>
<title>java/lang/Throwable.getStackTrace (7 samples, 0.97%)</title><rect x="540.1" y="1939.0" width="11.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.1" y="1950.0"></text>
</g>
<g>
<title>java/lang/Throwable.getOurStackTrace (7 samples, 0.97%)</title><rect x="540.1" y="1923.0" width="11.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.1" y="1934.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.of (7 samples, 0.97%)</title><rect x="540.1" y="1907.0" width="11.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.1" y="1918.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.initStackTraceElements (7 samples, 0.97%)</title><rect x="540.1" y="1891.0" width="11.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.1" y="1902.0"></text>
</g>
<g>
<title>JVM_InitStackTraceElementArray (7 samples, 0.97%)</title><rect x="540.1" y="1875.0" width="11.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="543.1" y="1886.0"></text>
</g>
<g>
<title>InstanceKlass::method_with_orig_idnum(int, int) (1 samples, 0.14%)</title><rect x="540.1" y="1859.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="543.1" y="1870.0"></text>
</g>
<g>
<title>java_lang_Throwable::get_stack_trace_elements(Handle, objArrayHandle, Thread*) (6 samples, 0.83%)</title><rect x="541.7" y="1859.0" width="9.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="544.7" y="1870.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::fill_in(Handle, InstanceKlass*, methodHandle const&amp;, int, int, Symbol*, Thread*) (6 samples, 0.83%)</title><rect x="541.7" y="1843.0" width="9.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="544.7" y="1854.0"></text>
</g>
<g>
<title>InstanceKlass::module() const (1 samples, 0.14%)</title><rect x="541.7" y="1827.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="544.7" y="1838.0"></text>
</g>
<g>
<title>Method::line_number_from_bci(int) const (1 samples, 0.14%)</title><rect x="543.4" y="1827.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="546.4" y="1838.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (4 samples, 0.56%)</title><rect x="545.0" y="1827.0" width="6.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="548.0" y="1838.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (3 samples, 0.42%)</title><rect x="545.0" y="1811.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="548.0" y="1822.0"></text>
</g>
<g>
<title>StringTable::do_lookup(unsigned short*, int, unsigned long) (3 samples, 0.42%)</title><rect x="545.0" y="1795.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="548.0" y="1806.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;565366ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 565366ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.14%)</title><rect x="546.7" y="1779.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="549.7" y="1790.0"></text>
</g>
<g>
<title>java_lang_String::equals(oopDesc*, unsigned short*, int) (1 samples, 0.14%)</title><rect x="548.3" y="1779.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="551.3" y="1790.0"></text>
</g>
<g>
<title>Symbol::as_unicode(int&amp;) const (1 samples, 0.14%)</title><rect x="549.9" y="1811.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="552.9" y="1822.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.14%)</title><rect x="549.9" y="1795.0" width="1.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="552.9" y="1806.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.42%)</title><rect x="551.6" y="1939.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="554.6" y="1950.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.14%)</title><rect x="553.2" y="1923.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.2" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (1 samples, 0.14%)</title><rect x="554.9" y="1923.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.9" y="1934.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.14%)</title><rect x="554.9" y="1907.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="557.9" y="1918.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.14%)</title><rect x="554.9" y="1891.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="557.9" y="1902.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.14%)</title><rect x="554.9" y="1875.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="557.9" y="1886.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.14%)</title><rect x="554.9" y="1859.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="557.9" y="1870.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.14%)</title><rect x="554.9" y="1843.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="557.9" y="1854.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (58 samples, 8.07%)</title><rect x="556.5" y="2019.0" width="95.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.5" y="2030.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (58 samples, 8.07%)</title><rect x="556.5" y="2003.0" width="95.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.5" y="2014.0">one/nio/htt..</text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (1 samples, 0.14%)</title><rect x="556.5" y="1987.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="559.5" y="1998.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (1 samples, 0.14%)</title><rect x="556.5" y="1971.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="559.5" y="1982.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (19 samples, 2.64%)</title><rect x="558.2" y="1987.0" width="31.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.2" y="1998.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (19 samples, 2.64%)</title><rect x="558.2" y="1971.0" width="31.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.2" y="1982.0">on..</text>
</g>
<g>
<title>/home/eugen/Загрузки/idea-IU-192.6817.14/jbr/lib/server/libjvm.so (1 samples, 0.14%)</title><rect x="558.2" y="1955.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="561.2" y="1966.0"></text>
</g>
<g>
<title>_IO_str_init_static_internal (1 samples, 0.14%)</title><rect x="558.2" y="1939.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="561.2" y="1950.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 1.67%)</title><rect x="559.8" y="1955.0" width="19.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="562.8" y="1966.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 1.25%)</title><rect x="559.8" y="1939.0" width="14.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="562.8" y="1950.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.56%)</title><rect x="559.8" y="1923.0" width="6.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="562.8" y="1934.0"></text>
</g>
<g>
<title>Exceptions::_throw_msg(Thread*, char const*, int, Symbol*, char const*, Handle, Handle) (1 samples, 0.14%)</title><rect x="559.8" y="1907.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="562.8" y="1918.0"></text>
</g>
<g>
<title>jni_ThrowNew (3 samples, 0.42%)</title><rect x="561.4" y="1907.0" width="5.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="564.4" y="1918.0"></text>
</g>
<g>
<title>Exceptions::_throw_msg(Thread*, char const*, int, Symbol*, char const*, Handle, Handle) (3 samples, 0.42%)</title><rect x="561.4" y="1891.0" width="5.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="564.4" y="1902.0"></text>
</g>
<g>
<title>Events::log_exception(Thread*, char const*, ...) (1 samples, 0.14%)</title><rect x="561.4" y="1875.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="564.4" y="1886.0"></text>
</g>
<g>
<title>Exceptions::_throw(Thread*, char const*, int, Handle, char const*) (2 samples, 0.28%)</title><rect x="563.1" y="1875.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="566.1" y="1886.0"></text>
</g>
<g>
<title>Events::log_exception(Thread*, char const*, ...) (1 samples, 0.14%)</title><rect x="563.1" y="1859.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="566.1" y="1870.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.14%)</title><rect x="563.1" y="1843.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="566.1" y="1854.0"></text>
</g>
<g>
<title>stringStream::as_string() (1 samples, 0.14%)</title><rect x="564.7" y="1859.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="567.7" y="1870.0"></text>
</g>
<g>
<title>__fcntl (1 samples, 0.14%)</title><rect x="566.4" y="1923.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="569.4" y="1934.0"></text>
</g>
<g>
<title>recv (1 samples, 0.14%)</title><rect x="568.0" y="1923.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="571.0" y="1934.0"></text>
</g>
<g>
<title>throw_by_name (3 samples, 0.42%)</title><rect x="569.6" y="1923.0" width="5.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="572.6" y="1934.0"></text>
</g>
<g>
<title>jni_FindClass (3 samples, 0.42%)</title><rect x="569.6" y="1907.0" width="5.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="572.6" y="1918.0"></text>
</g>
<g>
<title>JavaThread::security_get_caller_class(int) (1 samples, 0.14%)</title><rect x="571.3" y="1891.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="574.3" y="1902.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.14%)</title><rect x="572.9" y="1891.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="575.9" y="1902.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.14%)</title><rect x="574.6" y="1939.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="577.6" y="1950.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="574.6" y="1923.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="577.6" y="1934.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="574.6" y="1907.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="577.6" y="1918.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.14%)</title><rect x="574.6" y="1891.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="577.6" y="1902.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.14%)</title><rect x="574.6" y="1875.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="577.6" y="1886.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.14%)</title><rect x="574.6" y="1859.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="577.6" y="1870.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.14%)</title><rect x="574.6" y="1843.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="577.6" y="1854.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.14%)</title><rect x="574.6" y="1827.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="577.6" y="1838.0"></text>
</g>
<g>
<title>vsnprintf (2 samples, 0.28%)</title><rect x="576.2" y="1939.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="579.2" y="1950.0"></text>
</g>
<g>
<title>__strchrnul_avx2 (1 samples, 0.14%)</title><rect x="576.2" y="1923.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="579.2" y="1934.0"></text>
</g>
<g>
<title>vfprintf (1 samples, 0.14%)</title><rect x="577.8" y="1923.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="580.8" y="1934.0"></text>
</g>
<g>
<title>java/net/SocketTimeoutException.&lt;init&gt; (3 samples, 0.42%)</title><rect x="579.5" y="1955.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.5" y="1966.0"></text>
</g>
<g>
<title>java/io/InterruptedIOException.&lt;init&gt; (3 samples, 0.42%)</title><rect x="579.5" y="1939.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="582.5" y="1950.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (3 samples, 0.42%)</title><rect x="579.5" y="1923.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.5" y="1934.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (3 samples, 0.42%)</title><rect x="579.5" y="1907.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.5" y="1918.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.42%)</title><rect x="579.5" y="1891.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.5" y="1902.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.42%)</title><rect x="579.5" y="1875.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.5" y="1886.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.42%)</title><rect x="579.5" y="1859.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.5" y="1870.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (3 samples, 0.42%)</title><rect x="579.5" y="1843.0" width="4.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="582.5" y="1854.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.42%)</title><rect x="579.5" y="1827.0" width="4.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="582.5" y="1838.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (3 samples, 0.42%)</title><rect x="579.5" y="1811.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="582.5" y="1822.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (3 samples, 0.42%)</title><rect x="579.5" y="1795.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="582.5" y="1806.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.14%)</title><rect x="581.1" y="1779.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="584.1" y="1790.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (1 samples, 0.14%)</title><rect x="581.1" y="1763.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="584.1" y="1774.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.14%)</title><rect x="581.1" y="1747.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="584.1" y="1758.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.14%)</title><rect x="581.1" y="1731.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="584.1" y="1742.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.14%)</title><rect x="581.1" y="1715.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="584.1" y="1726.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.14%)</title><rect x="582.8" y="1779.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="585.8" y="1790.0"></text>
</g>
<g>
<title>recv (3 samples, 0.42%)</title><rect x="584.4" y="1955.0" width="4.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="587.4" y="1966.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.42%)</title><rect x="584.4" y="1939.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="587.4" y="1950.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.42%)</title><rect x="584.4" y="1923.0" width="4.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="587.4" y="1934.0"></text>
</g>
<g>
<title>sys_recvfrom (1 samples, 0.14%)</title><rect x="587.7" y="1907.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="590.7" y="1918.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.14%)</title><rect x="587.7" y="1891.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="590.7" y="1902.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.14%)</title><rect x="587.7" y="1875.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="590.7" y="1886.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.14%)</title><rect x="587.7" y="1859.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="590.7" y="1870.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.14%)</title><rect x="587.7" y="1843.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="590.7" y="1854.0"></text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.14%)</title><rect x="587.7" y="1827.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="590.7" y="1838.0"></text>
</g>
<g>
<title>wait_woken (1 samples, 0.14%)</title><rect x="587.7" y="1811.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="590.7" y="1822.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.14%)</title><rect x="587.7" y="1795.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="590.7" y="1806.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.14%)</title><rect x="589.3" y="1987.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.3" y="1998.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.14%)</title><rect x="589.3" y="1971.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.3" y="1982.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.14%)</title><rect x="589.3" y="1955.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.3" y="1966.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.14%)</title><rect x="589.3" y="1939.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.3" y="1950.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (2 samples, 0.28%)</title><rect x="591.0" y="1987.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.0" y="1998.0"></text>
</g>
<g>
<title>__GI___setsockopt (2 samples, 0.28%)</title><rect x="591.0" y="1971.0" width="3.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="594.0" y="1982.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="592.6" y="1955.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="595.6" y="1966.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="592.6" y="1939.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="595.6" y="1950.0"></text>
</g>
<g>
<title>sys_setsockopt (1 samples, 0.14%)</title><rect x="592.6" y="1923.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="595.6" y="1934.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.14%)</title><rect x="592.6" y="1907.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="595.6" y="1918.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (4 samples, 0.56%)</title><rect x="594.3" y="1987.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.3" y="1998.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.14%)</title><rect x="594.3" y="1971.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="597.3" y="1982.0"></text>
</g>
<g>
<title>__send (3 samples, 0.42%)</title><rect x="595.9" y="1971.0" width="4.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="598.9" y="1982.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.42%)</title><rect x="595.9" y="1955.0" width="4.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="598.9" y="1966.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.42%)</title><rect x="595.9" y="1939.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="598.9" y="1950.0"></text>
</g>
<g>
<title>sys_sendto (3 samples, 0.42%)</title><rect x="595.9" y="1923.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="598.9" y="1934.0"></text>
</g>
<g>
<title>SYSC_sendto (3 samples, 0.42%)</title><rect x="595.9" y="1907.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="598.9" y="1918.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.28%)</title><rect x="595.9" y="1891.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="598.9" y="1902.0"></text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.28%)</title><rect x="595.9" y="1875.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="598.9" y="1886.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.28%)</title><rect x="595.9" y="1859.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="598.9" y="1870.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2 samples, 0.28%)</title><rect x="595.9" y="1843.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="598.9" y="1854.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.28%)</title><rect x="595.9" y="1827.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="598.9" y="1838.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.28%)</title><rect x="595.9" y="1811.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="598.9" y="1822.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (1 samples, 0.14%)</title><rect x="597.5" y="1795.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="600.5" y="1806.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.14%)</title><rect x="597.5" y="1779.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="600.5" y="1790.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="599.2" y="1891.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="602.2" y="1902.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.14%)</title><rect x="599.2" y="1875.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="602.2" y="1886.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.14%)</title><rect x="599.2" y="1859.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="602.2" y="1870.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.14%)</title><rect x="599.2" y="1843.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="602.2" y="1854.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (19 samples, 2.64%)</title><rect x="600.8" y="1987.0" width="31.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.8" y="1998.0">on..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (19 samples, 2.64%)</title><rect x="600.8" y="1971.0" width="31.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.8" y="1982.0">on..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (19 samples, 2.64%)</title><rect x="600.8" y="1955.0" width="31.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.8" y="1966.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (3 samples, 0.42%)</title><rect x="600.8" y="1939.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.8" y="1950.0"></text>
</g>
<g>
<title>__GI___setsockopt (3 samples, 0.42%)</title><rect x="600.8" y="1923.0" width="4.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="603.8" y="1934.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="604.1" y="1907.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="607.1" y="1918.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="604.1" y="1891.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="607.1" y="1902.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="604.1" y="1875.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="607.1" y="1886.0"></text>
</g>
<g>
<title>one/nio/net/Socket.connect (12 samples, 1.67%)</title><rect x="605.7" y="1939.0" width="19.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="608.7" y="1950.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect (12 samples, 1.67%)</title><rect x="605.7" y="1923.0" width="19.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.7" y="1934.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect0 (12 samples, 1.67%)</title><rect x="605.7" y="1907.0" width="19.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="608.7" y="1918.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 1.67%)</title><rect x="605.7" y="1891.0" width="19.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="608.7" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="605.7" y="1875.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="608.7" y="1886.0"></text>
</g>
<g>
<title>sockaddr_from_java (1 samples, 0.14%)</title><rect x="605.7" y="1859.0" width="1.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="608.7" y="1870.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.14%)</title><rect x="605.7" y="1843.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="608.7" y="1854.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.14%)</title><rect x="605.7" y="1827.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="608.7" y="1838.0"></text>
</g>
<g>
<title>__libc_connect (11 samples, 1.53%)</title><rect x="607.4" y="1875.0" width="18.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="610.4" y="1886.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 1.39%)</title><rect x="609.0" y="1859.0" width="16.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="612.0" y="1870.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 1.39%)</title><rect x="609.0" y="1843.0" width="16.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="612.0" y="1854.0"></text>
</g>
<g>
<title>sys_connect (10 samples, 1.39%)</title><rect x="609.0" y="1827.0" width="16.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="612.0" y="1838.0"></text>
</g>
<g>
<title>SYSC_connect (10 samples, 1.39%)</title><rect x="609.0" y="1811.0" width="16.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="612.0" y="1822.0"></text>
</g>
<g>
<title>inet_stream_connect (10 samples, 1.39%)</title><rect x="609.0" y="1795.0" width="16.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="612.0" y="1806.0"></text>
</g>
<g>
<title>__inet_stream_connect (10 samples, 1.39%)</title><rect x="609.0" y="1779.0" width="16.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="612.0" y="1790.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.70%)</title><rect x="609.0" y="1763.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="612.0" y="1774.0"></text>
</g>
<g>
<title>__release_sock (5 samples, 0.70%)</title><rect x="609.0" y="1747.0" width="8.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="612.0" y="1758.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 0.70%)</title><rect x="609.0" y="1731.0" width="8.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="612.0" y="1742.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (5 samples, 0.70%)</title><rect x="609.0" y="1715.0" width="8.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="612.0" y="1726.0"></text>
</g>
<g>
<title>tcp_send_ack (4 samples, 0.56%)</title><rect x="610.7" y="1699.0" width="6.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="613.7" y="1710.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.39 (4 samples, 0.56%)</title><rect x="610.7" y="1683.0" width="6.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="613.7" y="1694.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.14%)</title><rect x="610.7" y="1667.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="613.7" y="1678.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (1 samples, 0.14%)</title><rect x="610.7" y="1651.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="613.7" y="1662.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.14%)</title><rect x="610.7" y="1635.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="613.7" y="1646.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.42%)</title><rect x="612.3" y="1667.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="615.3" y="1678.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.42%)</title><rect x="612.3" y="1651.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="615.3" y="1662.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.42%)</title><rect x="612.3" y="1635.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="615.3" y="1646.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.42%)</title><rect x="612.3" y="1619.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="615.3" y="1630.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.42%)</title><rect x="612.3" y="1603.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="615.3" y="1614.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.42%)</title><rect x="612.3" y="1587.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="615.3" y="1598.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.42%)</title><rect x="612.3" y="1571.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="615.3" y="1582.0"></text>
</g>
<g>
<title>do_softirq.part.17 (3 samples, 0.42%)</title><rect x="612.3" y="1555.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="615.3" y="1566.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.42%)</title><rect x="612.3" y="1539.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="615.3" y="1550.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.42%)</title><rect x="612.3" y="1523.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="615.3" y="1534.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.42%)</title><rect x="612.3" y="1507.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="615.3" y="1518.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.42%)</title><rect x="612.3" y="1491.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="615.3" y="1502.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.42%)</title><rect x="612.3" y="1475.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="615.3" y="1486.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.42%)</title><rect x="612.3" y="1459.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="615.3" y="1470.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.42%)</title><rect x="612.3" y="1443.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="615.3" y="1454.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.28%)</title><rect x="613.9" y="1427.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="616.9" y="1438.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.28%)</title><rect x="613.9" y="1411.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="616.9" y="1422.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.28%)</title><rect x="613.9" y="1395.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="616.9" y="1406.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.28%)</title><rect x="613.9" y="1379.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="616.9" y="1390.0"></text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.14%)</title><rect x="613.9" y="1363.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="616.9" y="1374.0"></text>
</g>
<g>
<title>tcp_check_req (1 samples, 0.14%)</title><rect x="615.6" y="1363.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="618.6" y="1374.0"></text>
</g>
<g>
<title>tcp_v6_syn_recv_sock (1 samples, 0.14%)</title><rect x="615.6" y="1347.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="618.6" y="1358.0"></text>
</g>
<g>
<title>tcp_v4_syn_recv_sock (1 samples, 0.14%)</title><rect x="615.6" y="1331.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="618.6" y="1342.0"></text>
</g>
<g>
<title>tcp_sync_mss (1 samples, 0.14%)</title><rect x="615.6" y="1315.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="618.6" y="1326.0"></text>
</g>
<g>
<title>tcp_v6_connect (5 samples, 0.70%)</title><rect x="617.2" y="1763.0" width="8.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="620.2" y="1774.0"></text>
</g>
<g>
<title>tcp_v4_connect (5 samples, 0.70%)</title><rect x="617.2" y="1747.0" width="8.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="620.2" y="1758.0"></text>
</g>
<g>
<title>tcp_clear_retrans (1 samples, 0.14%)</title><rect x="617.2" y="1731.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.2" y="1742.0"></text>
</g>
<g>
<title>tcp_connect (4 samples, 0.56%)</title><rect x="618.9" y="1731.0" width="6.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="621.9" y="1742.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.56%)</title><rect x="618.9" y="1715.0" width="6.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="621.9" y="1726.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.42%)</title><rect x="620.5" y="1699.0" width="4.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="623.5" y="1710.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.42%)</title><rect x="620.5" y="1683.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="623.5" y="1694.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.42%)</title><rect x="620.5" y="1667.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="623.5" y="1678.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.42%)</title><rect x="620.5" y="1651.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="623.5" y="1662.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.42%)</title><rect x="620.5" y="1635.0" width="4.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="623.5" y="1646.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.42%)</title><rect x="620.5" y="1619.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="623.5" y="1630.0"></text>
</g>
<g>
<title>do_softirq.part.17 (3 samples, 0.42%)</title><rect x="620.5" y="1603.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="623.5" y="1614.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.42%)</title><rect x="620.5" y="1587.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="623.5" y="1598.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.42%)</title><rect x="620.5" y="1571.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="623.5" y="1582.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.42%)</title><rect x="620.5" y="1555.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="623.5" y="1566.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.42%)</title><rect x="620.5" y="1539.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="623.5" y="1550.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.42%)</title><rect x="620.5" y="1523.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="623.5" y="1534.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.42%)</title><rect x="620.5" y="1507.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="623.5" y="1518.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.42%)</title><rect x="620.5" y="1491.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="623.5" y="1502.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.42%)</title><rect x="620.5" y="1475.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="623.5" y="1486.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.42%)</title><rect x="620.5" y="1459.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="623.5" y="1470.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.42%)</title><rect x="620.5" y="1443.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="623.5" y="1454.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.42%)</title><rect x="620.5" y="1427.0" width="4.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="623.5" y="1438.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.14%)</title><rect x="622.2" y="1411.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="625.2" y="1422.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="622.2" y="1395.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="625.2" y="1406.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="623.8" y="1411.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="626.8" y="1422.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.14%)</title><rect x="623.8" y="1395.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="626.8" y="1406.0"></text>
</g>
<g>
<title>tcp_v6_conn_request (1 samples, 0.14%)</title><rect x="623.8" y="1379.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="626.8" y="1390.0"></text>
</g>
<g>
<title>tcp_v4_conn_request (1 samples, 0.14%)</title><rect x="623.8" y="1363.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="626.8" y="1374.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_sock_ops (1 samples, 0.14%)</title><rect x="623.8" y="1347.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="626.8" y="1358.0"></text>
</g>
<g>
<title>one/nio/net/Socket.create (4 samples, 0.56%)</title><rect x="625.4" y="1939.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.4" y="1950.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.&lt;init&gt; (4 samples, 0.56%)</title><rect x="625.4" y="1923.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.4" y="1934.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.socket0 (4 samples, 0.56%)</title><rect x="625.4" y="1907.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.4" y="1918.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.42%)</title><rect x="627.1" y="1891.0" width="4.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="630.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.42%)</title><rect x="627.1" y="1875.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="630.1" y="1886.0"></text>
</g>
<g>
<title>socket (3 samples, 0.42%)</title><rect x="627.1" y="1859.0" width="4.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="630.1" y="1870.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.42%)</title><rect x="627.1" y="1843.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="630.1" y="1854.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.42%)</title><rect x="627.1" y="1827.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="630.1" y="1838.0"></text>
</g>
<g>
<title>sys_socket (3 samples, 0.42%)</title><rect x="627.1" y="1811.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="630.1" y="1822.0"></text>
</g>
<g>
<title>__sock_create (2 samples, 0.28%)</title><rect x="627.1" y="1795.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="630.1" y="1806.0"></text>
</g>
<g>
<title>inet6_create (2 samples, 0.28%)</title><rect x="627.1" y="1779.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="630.1" y="1790.0"></text>
</g>
<g>
<title>sk_alloc (2 samples, 0.28%)</title><rect x="627.1" y="1763.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="630.1" y="1774.0"></text>
</g>
<g>
<title>cgroup_sk_alloc (1 samples, 0.14%)</title><rect x="627.1" y="1747.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="630.1" y="1758.0"></text>
</g>
<g>
<title>sk_prot_alloc (1 samples, 0.14%)</title><rect x="628.7" y="1747.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="631.7" y="1758.0"></text>
</g>
<g>
<title>security_sk_alloc (1 samples, 0.14%)</title><rect x="628.7" y="1731.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="631.7" y="1742.0"></text>
</g>
<g>
<title>__kmalloc (1 samples, 0.14%)</title><rect x="628.7" y="1715.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="631.7" y="1726.0"></text>
</g>
<g>
<title>sock_map_fd (1 samples, 0.14%)</title><rect x="630.4" y="1795.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="633.4" y="1806.0"></text>
</g>
<g>
<title>mntget (1 samples, 0.14%)</title><rect x="630.4" y="1779.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="633.4" y="1790.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.invalidateObject (12 samples, 1.67%)</title><rect x="632.0" y="1987.0" width="19.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.0" y="1998.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.destroyObject (12 samples, 1.67%)</title><rect x="632.0" y="1971.0" width="19.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.0" y="1982.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.destroyObject (12 samples, 1.67%)</title><rect x="632.0" y="1955.0" width="19.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.0" y="1966.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (12 samples, 1.67%)</title><rect x="632.0" y="1939.0" width="19.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="635.0" y="1950.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.83%)</title><rect x="633.6" y="1923.0" width="9.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="636.6" y="1934.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.83%)</title><rect x="633.6" y="1907.0" width="9.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="636.6" y="1918.0"></text>
</g>
<g>
<title>__GI___shutdown (6 samples, 0.83%)</title><rect x="633.6" y="1891.0" width="9.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="636.6" y="1902.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.70%)</title><rect x="635.3" y="1875.0" width="8.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="638.3" y="1886.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.70%)</title><rect x="635.3" y="1859.0" width="8.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="638.3" y="1870.0"></text>
</g>
<g>
<title>sys_shutdown (5 samples, 0.70%)</title><rect x="635.3" y="1843.0" width="8.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="638.3" y="1854.0"></text>
</g>
<g>
<title>inet_shutdown (5 samples, 0.70%)</title><rect x="635.3" y="1827.0" width="8.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="638.3" y="1838.0"></text>
</g>
<g>
<title>tcp_shutdown (5 samples, 0.70%)</title><rect x="635.3" y="1811.0" width="8.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="638.3" y="1822.0"></text>
</g>
<g>
<title>tcp_send_fin (5 samples, 0.70%)</title><rect x="635.3" y="1795.0" width="8.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="638.3" y="1806.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 0.70%)</title><rect x="635.3" y="1779.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="638.3" y="1790.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 0.70%)</title><rect x="635.3" y="1763.0" width="8.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="638.3" y="1774.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.42%)</title><rect x="635.3" y="1747.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="638.3" y="1758.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.42%)</title><rect x="635.3" y="1731.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="638.3" y="1742.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.42%)</title><rect x="635.3" y="1715.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="638.3" y="1726.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.42%)</title><rect x="635.3" y="1699.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="638.3" y="1710.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.42%)</title><rect x="635.3" y="1683.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="638.3" y="1694.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.42%)</title><rect x="635.3" y="1667.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="638.3" y="1678.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.42%)</title><rect x="635.3" y="1651.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="638.3" y="1662.0"></text>
</g>
<g>
<title>do_softirq.part.17 (3 samples, 0.42%)</title><rect x="635.3" y="1635.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="638.3" y="1646.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.42%)</title><rect x="635.3" y="1619.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="638.3" y="1630.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.42%)</title><rect x="635.3" y="1603.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="638.3" y="1614.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.42%)</title><rect x="635.3" y="1587.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="638.3" y="1598.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.42%)</title><rect x="635.3" y="1571.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="638.3" y="1582.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.42%)</title><rect x="635.3" y="1555.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="638.3" y="1566.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.42%)</title><rect x="635.3" y="1539.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="638.3" y="1550.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.42%)</title><rect x="635.3" y="1523.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="638.3" y="1534.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.42%)</title><rect x="635.3" y="1507.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="638.3" y="1518.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.42%)</title><rect x="635.3" y="1491.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="638.3" y="1502.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.42%)</title><rect x="635.3" y="1475.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="638.3" y="1486.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.42%)</title><rect x="635.3" y="1459.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="638.3" y="1470.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="635.3" y="1443.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="638.3" y="1454.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.28%)</title><rect x="636.9" y="1443.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="639.9" y="1454.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.28%)</title><rect x="636.9" y="1427.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="639.9" y="1438.0"></text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.28%)</title><rect x="636.9" y="1411.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="639.9" y="1422.0"></text>
</g>
<g>
<title>tcp_fin (2 samples, 0.28%)</title><rect x="636.9" y="1395.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="639.9" y="1406.0"></text>
</g>
<g>
<title>sock_def_wakeup (2 samples, 0.28%)</title><rect x="636.9" y="1379.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="639.9" y="1390.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.28%)</title><rect x="636.9" y="1363.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="639.9" y="1374.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.28%)</title><rect x="636.9" y="1347.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="639.9" y="1358.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.28%)</title><rect x="636.9" y="1331.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="639.9" y="1342.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.14%)</title><rect x="640.2" y="1747.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="643.2" y="1758.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.14%)</title><rect x="641.8" y="1747.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="644.8" y="1758.0"></text>
</g>
<g>
<title>close (5 samples, 0.70%)</title><rect x="643.5" y="1923.0" width="8.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="646.5" y="1934.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.56%)</title><rect x="645.1" y="1907.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="648.1" y="1918.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.56%)</title><rect x="645.1" y="1891.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="648.1" y="1902.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.56%)</title><rect x="645.1" y="1875.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="648.1" y="1886.0"></text>
</g>
<g>
<title>task_work_run (4 samples, 0.56%)</title><rect x="645.1" y="1859.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="648.1" y="1870.0"></text>
</g>
<g>
<title>____fput (4 samples, 0.56%)</title><rect x="645.1" y="1843.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="648.1" y="1854.0"></text>
</g>
<g>
<title>__fput (2 samples, 0.28%)</title><rect x="645.1" y="1827.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="648.1" y="1838.0"></text>
</g>
<g>
<title>dput (1 samples, 0.14%)</title><rect x="645.1" y="1811.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="648.1" y="1822.0"></text>
</g>
<g>
<title>dput.part.26 (1 samples, 0.14%)</title><rect x="645.1" y="1795.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="648.1" y="1806.0"></text>
</g>
<g>
<title>___d_drop (1 samples, 0.14%)</title><rect x="645.1" y="1779.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="648.1" y="1790.0"></text>
</g>
<g>
<title>sock_close (1 samples, 0.14%)</title><rect x="646.8" y="1811.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="649.8" y="1822.0"></text>
</g>
<g>
<title>__sock_release (1 samples, 0.14%)</title><rect x="646.8" y="1795.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="649.8" y="1806.0"></text>
</g>
<g>
<title>inet6_release (1 samples, 0.14%)</title><rect x="646.8" y="1779.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="649.8" y="1790.0"></text>
</g>
<g>
<title>ipv6_sock_ac_close (1 samples, 0.14%)</title><rect x="646.8" y="1763.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="649.8" y="1774.0"></text>
</g>
<g>
<title>security_file_free (1 samples, 0.14%)</title><rect x="648.4" y="1827.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="651.4" y="1838.0"></text>
</g>
<g>
<title>sock_close (1 samples, 0.14%)</title><rect x="650.1" y="1827.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="653.1" y="1838.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (25 samples, 3.48%)</title><rect x="651.7" y="2131.0" width="41.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.7" y="2142.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (8 samples, 1.11%)</title><rect x="655.0" y="2115.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.0" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.accept0 (8 samples, 1.11%)</title><rect x="655.0" y="2099.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.0" y="2110.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 1.11%)</title><rect x="655.0" y="2083.0" width="13.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="658.0" y="2094.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 1.11%)</title><rect x="655.0" y="2067.0" width="13.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="658.0" y="2078.0"></text>
</g>
<g>
<title>syscall (8 samples, 1.11%)</title><rect x="655.0" y="2051.0" width="13.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="658.0" y="2062.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 1.11%)</title><rect x="655.0" y="2035.0" width="13.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="658.0" y="2046.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 1.11%)</title><rect x="655.0" y="2019.0" width="13.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.0" y="2030.0"></text>
</g>
<g>
<title>sys_accept4 (8 samples, 1.11%)</title><rect x="655.0" y="2003.0" width="13.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="658.0" y="2014.0"></text>
</g>
<g>
<title>SYSC_accept4 (8 samples, 1.11%)</title><rect x="655.0" y="1987.0" width="13.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="658.0" y="1998.0"></text>
</g>
<g>
<title>__alloc_fd (1 samples, 0.14%)</title><rect x="656.6" y="1971.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="659.6" y="1982.0"></text>
</g>
<g>
<title>inet_accept (4 samples, 0.56%)</title><rect x="658.3" y="1971.0" width="6.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="661.3" y="1982.0"></text>
</g>
<g>
<title>inet_csk_accept (4 samples, 0.56%)</title><rect x="658.3" y="1955.0" width="6.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="661.3" y="1966.0"></text>
</g>
<g>
<title>schedule_timeout (3 samples, 0.42%)</title><rect x="659.9" y="1939.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="662.9" y="1950.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.28%)</title><rect x="661.5" y="1923.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="664.5" y="1934.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.14%)</title><rect x="663.2" y="1907.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="666.2" y="1918.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="663.2" y="1891.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="666.2" y="1902.0"></text>
</g>
<g>
<title>sock_alloc (1 samples, 0.14%)</title><rect x="664.8" y="1971.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="667.8" y="1982.0"></text>
</g>
<g>
<title>new_inode_pseudo (1 samples, 0.14%)</title><rect x="664.8" y="1955.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="667.8" y="1966.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="664.8" y="1939.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="667.8" y="1950.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="666.5" y="1971.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="669.5" y="1982.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.14%)</title><rect x="666.5" y="1955.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="669.5" y="1966.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.14%)</title><rect x="666.5" y="1939.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="669.5" y="1950.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.14%)</title><rect x="666.5" y="1923.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="669.5" y="1934.0"></text>
</g>
<g>
<title>one/nio/server/Server.register (13 samples, 1.81%)</title><rect x="668.1" y="2115.0" width="21.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.1" y="2126.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.register (13 samples, 1.81%)</title><rect x="668.1" y="2099.0" width="21.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="671.1" y="2110.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.add (3 samples, 0.42%)</title><rect x="669.7" y="2083.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.7" y="2094.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (3 samples, 0.42%)</title><rect x="669.7" y="2067.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.7" y="2078.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.42%)</title><rect x="669.7" y="2051.0" width="5.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="672.7" y="2062.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.14%)</title><rect x="669.7" y="2035.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="672.7" y="2046.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.28%)</title><rect x="671.4" y="2035.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="674.4" y="2046.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.14%)</title><rect x="673.0" y="2019.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="676.0" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.enable (9 samples, 1.25%)</title><rect x="674.7" y="2083.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.7" y="2094.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (9 samples, 1.25%)</title><rect x="674.7" y="2067.0" width="14.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="677.7" y="2078.0"></text>
</g>
<g>
<title>__GI_epoll_ctl (9 samples, 1.25%)</title><rect x="674.7" y="2051.0" width="14.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="677.7" y="2062.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 1.11%)</title><rect x="676.3" y="2035.0" width="13.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="679.3" y="2046.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 1.11%)</title><rect x="676.3" y="2019.0" width="13.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="679.3" y="2030.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.14%)</title><rect x="676.3" y="2003.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="679.3" y="2014.0"></text>
</g>
<g>
<title>sys_epoll_ctl (7 samples, 0.97%)</title><rect x="678.0" y="2003.0" width="11.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="681.0" y="2014.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.14%)</title><rect x="681.2" y="1987.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="684.2" y="1998.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.42%)</title><rect x="682.9" y="1987.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="685.9" y="1998.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (1 samples, 0.14%)</title><rect x="687.8" y="1987.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="690.8" y="1998.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.14%)</title><rect x="687.8" y="1971.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="690.8" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.createSession (2 samples, 0.28%)</title><rect x="689.4" y="2115.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.4" y="2126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.createSession (2 samples, 0.28%)</title><rect x="689.4" y="2099.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.4" y="2110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/StorageSession.&lt;init&gt; (2 samples, 0.28%)</title><rect x="689.4" y="2083.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.4" y="2094.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (2 samples, 0.28%)</title><rect x="689.4" y="2067.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.4" y="2078.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (86 samples, 11.96%)</title><rect x="692.7" y="2131.0" width="141.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.7" y="2142.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.97%)</title><rect x="692.7" y="2115.0" width="11.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.7" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (7 samples, 0.97%)</title><rect x="692.7" y="2099.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.7" y="2110.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.70%)</title><rect x="696.0" y="2083.0" width="8.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="699.0" y="2094.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.70%)</title><rect x="696.0" y="2067.0" width="8.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="699.0" y="2078.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.56%)</title><rect x="697.6" y="2051.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="700.6" y="2062.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.56%)</title><rect x="697.6" y="2035.0" width="6.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="700.6" y="2046.0"></text>
</g>
<g>
<title>sys_epoll_wait (4 samples, 0.56%)</title><rect x="697.6" y="2019.0" width="6.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="700.6" y="2030.0"></text>
</g>
<g>
<title>ep_poll (4 samples, 0.56%)</title><rect x="697.6" y="2003.0" width="6.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="700.6" y="2014.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.28%)</title><rect x="697.6" y="1987.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="700.6" y="1998.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (1 samples, 0.14%)</title><rect x="700.9" y="1987.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="703.9" y="1998.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.14%)</title><rect x="700.9" y="1971.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="703.9" y="1982.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (1 samples, 0.14%)</title><rect x="700.9" y="1955.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="703.9" y="1966.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.14%)</title><rect x="700.9" y="1939.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="703.9" y="1950.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.14%)</title><rect x="702.6" y="1987.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="705.6" y="1998.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (79 samples, 10.99%)</title><rect x="704.2" y="2115.0" width="129.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.2" y="2126.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (78 samples, 10.85%)</title><rect x="704.2" y="2099.0" width="128.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.2" y="2110.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.14%)</title><rect x="704.2" y="2083.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.2" y="2094.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.14%)</title><rect x="704.2" y="2067.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.2" y="2078.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (1 samples, 0.14%)</title><rect x="704.2" y="2051.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.2" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (1 samples, 0.14%)</title><rect x="704.2" y="2035.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.2" y="2046.0"></text>
</g>
<g>
<title>__GI_epoll_ctl (1 samples, 0.14%)</title><rect x="704.2" y="2019.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="707.2" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="704.2" y="2003.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="707.2" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="704.2" y="1987.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="707.2" y="1998.0"></text>
</g>
<g>
<title>sys_epoll_ctl (1 samples, 0.14%)</title><rect x="704.2" y="1971.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="707.2" y="1982.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (15 samples, 2.09%)</title><rect x="705.9" y="2083.0" width="24.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.9" y="2094.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (8 samples, 1.11%)</title><rect x="709.1" y="2067.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.1" y="2078.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (8 samples, 1.11%)</title><rect x="709.1" y="2051.0" width="13.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.1" y="2062.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (7 samples, 0.97%)</title><rect x="710.8" y="2035.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="713.8" y="2046.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.28%)</title><rect x="710.8" y="2019.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="713.8" y="2030.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="710.8" y="2003.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="713.8" y="2014.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.14%)</title><rect x="712.4" y="2003.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.4" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="712.4" y="1987.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.4" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="712.4" y="1971.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.4" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.14%)</title><rect x="712.4" y="1955.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.4" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.entity (5 samples, 0.70%)</title><rect x="714.1" y="2019.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.1" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Replicas.parse (3 samples, 0.42%)</title><rect x="714.1" y="2003.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="717.1" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.28%)</title><rect x="714.1" y="1987.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.1" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.14%)</title><rect x="714.1" y="1971.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.1" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.14%)</title><rect x="715.7" y="1971.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="718.7" y="1982.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.14%)</title><rect x="715.7" y="1955.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.7" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Replicas.&lt;init&gt; (1 samples, 0.14%)</title><rect x="717.3" y="1987.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.3" y="1998.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.14%)</title><rect x="717.3" y="1971.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.3" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.executeGet (1 samples, 0.14%)</title><rect x="719.0" y="2003.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="722.0" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.executeAsync (1 samples, 0.14%)</title><rect x="719.0" y="1987.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.0" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.executePut (1 samples, 0.14%)</title><rect x="720.6" y="2003.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="723.6" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.executeAsync (1 samples, 0.14%)</title><rect x="720.6" y="1987.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.6" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.14%)</title><rect x="720.6" y="1971.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="723.6" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.14%)</title><rect x="720.6" y="1955.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.6" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.14%)</title><rect x="720.6" y="1939.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="723.6" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.14%)</title><rect x="720.6" y="1923.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.14%)</title><rect x="720.6" y="1907.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.6" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="720.6" y="1891.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.6" y="1902.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.42%)</title><rect x="722.3" y="2067.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.3" y="2078.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.14%)</title><rect x="722.3" y="2051.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.3" y="2062.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.14%)</title><rect x="722.3" y="2035.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.3" y="2046.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.28%)</title><rect x="723.9" y="2051.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="726.9" y="2062.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.28%)</title><rect x="727.2" y="2067.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.2" y="2078.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.28%)</title><rect x="727.2" y="2051.0" width="3.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="730.2" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (62 samples, 8.62%)</title><rect x="730.5" y="2083.0" width="101.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.5" y="2094.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (60 samples, 8.34%)</title><rect x="730.5" y="2067.0" width="98.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.5" y="2078.0">one/nio/net/..</text>
</g>
<g>
<title>[unknown] (30 samples, 4.17%)</title><rect x="732.1" y="2051.0" width="49.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="735.1" y="2062.0">[unkn..</text>
</g>
<g>
<title>/home/eugen/Загрузки/idea-IU-192.6817.14/jbr/lib/server/libjvm.so (1 samples, 0.14%)</title><rect x="732.1" y="2035.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="735.1" y="2046.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.14%)</title><rect x="732.1" y="2019.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="735.1" y="2030.0"></text>
</g>
<g>
<title>vfprintf (1 samples, 0.14%)</title><rect x="732.1" y="2003.0" width="1.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="735.1" y="2014.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 3.34%)</title><rect x="733.8" y="2035.0" width="39.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="736.8" y="2046.0">[un..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 1.39%)</title><rect x="733.8" y="2019.0" width="16.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="736.8" y="2030.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.14%)</title><rect x="733.8" y="2003.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="736.8" y="2014.0"></text>
</g>
<g>
<title>jni_ThrowNew (9 samples, 1.25%)</title><rect x="735.4" y="2003.0" width="14.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="738.4" y="2014.0"></text>
</g>
<g>
<title>Exceptions::_throw_msg(Thread*, char const*, int, Symbol*, char const*, Handle, Handle) (8 samples, 1.11%)</title><rect x="737.0" y="1987.0" width="13.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="740.0" y="1998.0"></text>
</g>
<g>
<title>Exceptions::_throw(Thread*, char const*, int, Handle, char const*) (4 samples, 0.56%)</title><rect x="737.0" y="1971.0" width="6.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="740.0" y="1982.0"></text>
</g>
<g>
<title>Events::log_exception(Thread*, char const*, ...) (1 samples, 0.14%)</title><rect x="738.7" y="1955.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="741.7" y="1966.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.14%)</title><rect x="738.7" y="1939.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="741.7" y="1950.0"></text>
</g>
<g>
<title>oopDesc::print_value_string() (2 samples, 0.28%)</title><rect x="740.3" y="1955.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="743.3" y="1966.0"></text>
</g>
<g>
<title>InstanceKlass::oop_print_value_on(oopDesc*, outputStream*) (2 samples, 0.28%)</title><rect x="740.3" y="1939.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="743.3" y="1950.0"></text>
</g>
<g>
<title>Symbol::print_value_on(outputStream*) const (1 samples, 0.14%)</title><rect x="740.3" y="1923.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="743.3" y="1934.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.14%)</title><rect x="740.3" y="1907.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="743.3" y="1918.0"></text>
</g>
<g>
<title>stringStream::write(char const*, unsigned long) (1 samples, 0.14%)</title><rect x="740.3" y="1891.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="743.3" y="1902.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.14%)</title><rect x="742.0" y="1923.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="745.0" y="1934.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (1 samples, 0.14%)</title><rect x="742.0" y="1907.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="745.0" y="1918.0"></text>
</g>
<g>
<title>stringStream::write(char const*, unsigned long) (1 samples, 0.14%)</title><rect x="742.0" y="1891.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="745.0" y="1902.0"></text>
</g>
<g>
<title>Exceptions::new_exception(Thread*, Symbol*, char const*, Handle, Handle, Handle, Exceptions::ExceptionMsgToUtf8Mode) (3 samples, 0.42%)</title><rect x="743.6" y="1971.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="746.6" y="1982.0"></text>
</g>
<g>
<title>Exceptions::new_exception(Thread*, Symbol*, Symbol*, JavaCallArguments*, Handle, Handle, Handle) (1 samples, 0.14%)</title><rect x="743.6" y="1955.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="746.6" y="1966.0"></text>
</g>
<g>
<title>JavaCalls::construct_new_instance(InstanceKlass*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.14%)</title><rect x="743.6" y="1939.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="746.6" y="1950.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.14%)</title><rect x="743.6" y="1923.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="746.6" y="1934.0"></text>
</g>
<g>
<title>UTF8::unicode_length(char const*, bool&amp;, bool&amp;) (1 samples, 0.14%)</title><rect x="745.2" y="1955.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="748.2" y="1966.0"></text>
</g>
<g>
<title>java_lang_String::create_from_str(char const*, Thread*) (1 samples, 0.14%)</title><rect x="746.9" y="1955.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="749.9" y="1966.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.14%)</title><rect x="746.9" y="1939.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="749.9" y="1950.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.14%)</title><rect x="746.9" y="1923.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="749.9" y="1934.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.14%)</title><rect x="746.9" y="1907.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="749.9" y="1918.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.14%)</title><rect x="746.9" y="1891.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="749.9" y="1902.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.14%)</title><rect x="748.5" y="1971.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="751.5" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="2019.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="753.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="2003.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="753.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1987.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="753.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1971.0" width="1.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="753.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1955.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="753.2" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1939.0" width="1.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="753.2" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1923.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="753.2" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1907.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="753.2" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1891.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="753.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1875.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="753.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1859.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="753.2" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1843.0" width="1.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="753.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1827.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="753.2" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1811.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="753.2" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1795.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="753.2" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1779.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="753.2" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1763.0" width="1.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="753.2" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1747.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="753.2" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1731.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="753.2" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1715.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="753.2" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1699.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="753.2" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1683.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="753.2" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1667.0" width="1.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="753.2" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1651.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="753.2" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1635.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="753.2" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1619.0" width="1.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="753.2" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1603.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="753.2" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1587.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="753.2" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1571.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="753.2" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1555.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="753.2" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1539.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="753.2" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1523.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="753.2" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1507.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="753.2" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1491.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="753.2" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1475.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="753.2" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1459.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="753.2" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1443.0" width="1.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="753.2" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1427.0" width="1.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="753.2" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1411.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="753.2" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1395.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="753.2" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1379.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="753.2" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1363.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="753.2" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1347.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="753.2" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1331.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="753.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1315.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="753.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1299.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="753.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1283.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="753.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1267.0" width="1.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="753.2" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1251.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="753.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1235.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="753.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1219.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="753.2" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1203.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="753.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1187.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="753.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1171.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="753.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1155.0" width="1.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="753.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1139.0" width="1.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="753.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1123.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="753.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1107.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="753.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1091.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="753.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1075.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="753.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1059.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="753.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1043.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="753.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1027.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="753.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="1011.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="753.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="995.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="753.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="979.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="753.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="963.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="753.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="947.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="753.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="931.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="753.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="915.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="753.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="899.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="753.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="883.0" width="1.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="753.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="867.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="753.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="851.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="753.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="835.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="753.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="819.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="753.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="803.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="753.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="787.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="753.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="771.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="753.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="755.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="753.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="739.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="753.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="723.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="753.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="707.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="753.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="691.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="753.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="675.0" width="1.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="753.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="659.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="753.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="643.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="753.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="627.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="753.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="611.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="753.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="595.0" width="1.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="753.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="579.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="753.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="563.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="753.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="547.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="753.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="531.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="753.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="515.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="753.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="499.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="753.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="483.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="753.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="467.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="753.2" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="451.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="753.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="435.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="753.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="419.0" width="1.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="753.2" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="403.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="753.2" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="387.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="753.2" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="371.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="753.2" y="382.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="355.0" width="1.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="753.2" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="339.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="753.2" y="350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="323.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="753.2" y="334.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="307.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="753.2" y="318.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="291.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="753.2" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="275.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="753.2" y="286.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="259.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="753.2" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="243.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="753.2" y="254.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="227.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="753.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="211.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="753.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="195.0" width="1.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="753.2" y="206.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="179.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="753.2" y="190.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="163.0" width="1.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="753.2" y="174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="147.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="753.2" y="158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="131.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="753.2" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="115.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="753.2" y="126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="99.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="753.2" y="110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="750.2" y="83.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="753.2" y="94.0"></text>
</g>
<g>
<title>/home/eugen/Загрузки/idea-IU-192.6817.14/jbr/lib/server/libjvm.so (1 samples, 0.14%)</title><rect x="750.2" y="67.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="753.2" y="78.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.14%)</title><rect x="750.2" y="51.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="753.2" y="62.0"></text>
</g>
<g>
<title>vfprintf (1 samples, 0.14%)</title><rect x="750.2" y="35.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="753.2" y="46.0"></text>
</g>
<g>
<title>throw_by_name (13 samples, 1.81%)</title><rect x="751.8" y="2019.0" width="21.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="754.8" y="2030.0">t..</text>
</g>
<g>
<title>jni_FindClass (13 samples, 1.81%)</title><rect x="751.8" y="2003.0" width="21.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="754.8" y="2014.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.14%)</title><rect x="755.1" y="1987.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="758.1" y="1998.0"></text>
</g>
<g>
<title>JavaThread::security_get_caller_class(int) (4 samples, 0.56%)</title><rect x="756.7" y="1987.0" width="6.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="759.7" y="1998.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.28%)</title><rect x="758.4" y="1971.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="761.4" y="1982.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.14%)</title><rect x="758.4" y="1955.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="761.4" y="1966.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.14%)</title><rect x="760.0" y="1955.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="763.0" y="1966.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.14%)</title><rect x="761.7" y="1971.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="764.7" y="1982.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (3 samples, 0.42%)</title><rect x="763.3" y="1987.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="766.3" y="1998.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (3 samples, 0.42%)</title><rect x="768.2" y="1987.0" width="4.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="771.2" y="1998.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (3 samples, 0.42%)</title><rect x="768.2" y="1971.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="771.2" y="1982.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (3 samples, 0.42%)</title><rect x="768.2" y="1955.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="771.2" y="1966.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (2 samples, 0.28%)</title><rect x="768.2" y="1939.0" width="3.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="771.2" y="1950.0"></text>
</g>
<g>
<title>SystemDictionary::register_loader(Handle) (1 samples, 0.14%)</title><rect x="771.5" y="1939.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="774.5" y="1950.0"></text>
</g>
<g>
<title>oopDesc::is_oop(oopDesc*, bool) (1 samples, 0.14%)</title><rect x="771.5" y="1923.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="774.5" y="1934.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.14%)</title><rect x="773.1" y="2035.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="776.1" y="2046.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="773.1" y="2019.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="776.1" y="2030.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="773.1" y="2003.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="776.1" y="2014.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.14%)</title><rect x="774.8" y="2035.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="777.8" y="2046.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.14%)</title><rect x="774.8" y="2019.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="777.8" y="2030.0"></text>
</g>
<g>
<title>vsnprintf (3 samples, 0.42%)</title><rect x="776.4" y="2035.0" width="4.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="779.4" y="2046.0"></text>
</g>
<g>
<title>__GI__IO_default_xsputn (1 samples, 0.14%)</title><rect x="776.4" y="2019.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="779.4" y="2030.0"></text>
</g>
<g>
<title>__strlen_avx2 (1 samples, 0.14%)</title><rect x="778.1" y="2019.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="781.1" y="2030.0"></text>
</g>
<g>
<title>vfprintf (1 samples, 0.14%)</title><rect x="779.7" y="2019.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="782.7" y="2030.0"></text>
</g>
<g>
<title>__mempcpy_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="781.3" y="2051.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="784.3" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (10 samples, 1.39%)</title><rect x="783.0" y="2051.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="786.0" y="2062.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (10 samples, 1.39%)</title><rect x="783.0" y="2035.0" width="16.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="786.0" y="2046.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (10 samples, 1.39%)</title><rect x="783.0" y="2019.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.0" y="2030.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (10 samples, 1.39%)</title><rect x="783.0" y="2003.0" width="16.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.0" y="2014.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (10 samples, 1.39%)</title><rect x="783.0" y="1987.0" width="16.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="786.0" y="1998.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (10 samples, 1.39%)</title><rect x="783.0" y="1971.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.0" y="1982.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (10 samples, 1.39%)</title><rect x="783.0" y="1955.0" width="16.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="786.0" y="1966.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (10 samples, 1.39%)</title><rect x="783.0" y="1939.0" width="16.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="786.0" y="1950.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.14%)</title><rect x="783.0" y="1923.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="786.0" y="1934.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (9 samples, 1.25%)</title><rect x="784.6" y="1923.0" width="14.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="787.6" y="1934.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (9 samples, 1.25%)</title><rect x="784.6" y="1907.0" width="14.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="787.6" y="1918.0"></text>
</g>
<g>
<title>PreserveExceptionMark::PreserveExceptionMark(Thread*&amp;) (1 samples, 0.14%)</title><rect x="784.6" y="1891.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="787.6" y="1902.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (8 samples, 1.11%)</title><rect x="786.3" y="1891.0" width="13.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="789.3" y="1902.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (3 samples, 0.42%)</title><rect x="792.8" y="1875.0" width="5.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="795.8" y="1886.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (2 samples, 0.28%)</title><rect x="792.8" y="1859.0" width="3.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="795.8" y="1870.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.28%)</title><rect x="792.8" y="1843.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="795.8" y="1854.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.28%)</title><rect x="792.8" y="1827.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="795.8" y="1838.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.14%)</title><rect x="792.8" y="1811.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="795.8" y="1822.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.14%)</title><rect x="794.5" y="1811.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="797.5" y="1822.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.14%)</title><rect x="796.1" y="1859.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="799.1" y="1870.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.14%)</title><rect x="796.1" y="1843.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="799.1" y="1854.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.14%)</title><rect x="796.1" y="1827.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="799.1" y="1838.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.14%)</title><rect x="796.1" y="1811.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="799.1" y="1822.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.14%)</title><rect x="797.8" y="1875.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="800.8" y="1886.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.14%)</title><rect x="797.8" y="1859.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="800.8" y="1870.0"></text>
</g>
<g>
<title>recv (18 samples, 2.50%)</title><rect x="799.4" y="2051.0" width="29.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="802.4" y="2062.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 1.81%)</title><rect x="807.6" y="2035.0" width="21.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="810.6" y="2046.0">e..</text>
</g>
<g>
<title>do_syscall_64 (13 samples, 1.81%)</title><rect x="807.6" y="2019.0" width="21.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="810.6" y="2030.0">d..</text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.14%)</title><rect x="809.2" y="2003.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="812.2" y="2014.0"></text>
</g>
<g>
<title>sys_recvfrom (11 samples, 1.53%)</title><rect x="810.9" y="2003.0" width="18.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="813.9" y="2014.0"></text>
</g>
<g>
<title>SYSC_recvfrom (10 samples, 1.39%)</title><rect x="810.9" y="1987.0" width="16.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="813.9" y="1998.0"></text>
</g>
<g>
<title>sock_recvmsg (8 samples, 1.11%)</title><rect x="810.9" y="1971.0" width="13.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="813.9" y="1982.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.14%)</title><rect x="810.9" y="1955.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="813.9" y="1966.0"></text>
</g>
<g>
<title>inet_recvmsg (7 samples, 0.97%)</title><rect x="812.5" y="1955.0" width="11.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="815.5" y="1966.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 0.97%)</title><rect x="812.5" y="1939.0" width="11.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="815.5" y="1950.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.14%)</title><rect x="817.5" y="1923.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="820.5" y="1934.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.14%)</title><rect x="817.5" y="1907.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="820.5" y="1918.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.14%)</title><rect x="817.5" y="1891.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="820.5" y="1902.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.14%)</title><rect x="817.5" y="1875.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="820.5" y="1886.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.14%)</title><rect x="817.5" y="1859.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="820.5" y="1870.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.28%)</title><rect x="819.1" y="1923.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="822.1" y="1934.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.28%)</title><rect x="819.1" y="1907.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="822.1" y="1918.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (2 samples, 0.28%)</title><rect x="819.1" y="1891.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="822.1" y="1902.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.14%)</title><rect x="822.4" y="1923.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="825.4" y="1934.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.14%)</title><rect x="822.4" y="1907.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="825.4" y="1918.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.14%)</title><rect x="822.4" y="1891.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="825.4" y="1902.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.28%)</title><rect x="824.0" y="1971.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="827.0" y="1982.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.28%)</title><rect x="824.0" y="1955.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="827.0" y="1966.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.28%)</title><rect x="824.0" y="1939.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="827.0" y="1950.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.14%)</title><rect x="825.7" y="1923.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="828.7" y="1934.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.14%)</title><rect x="827.3" y="1987.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="830.3" y="1998.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.28%)</title><rect x="828.9" y="2067.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.9" y="2078.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (2 samples, 0.28%)</title><rect x="828.9" y="2051.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.9" y="2062.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (1 samples, 0.14%)</title><rect x="828.9" y="2035.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="831.9" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.14%)</title><rect x="830.6" y="2035.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.6" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.14%)</title><rect x="832.2" y="2099.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.2" y="2110.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.unregister (1 samples, 0.14%)</title><rect x="832.2" y="2083.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.2" y="2094.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.disable (1 samples, 0.14%)</title><rect x="832.2" y="2067.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.2" y="2078.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.14%)</title><rect x="832.2" y="2051.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.2" y="2062.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.28%)</title><rect x="833.9" y="2131.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="836.9" y="2142.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="835.5" y="2115.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="838.5" y="2126.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="835.5" y="2099.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="838.5" y="2110.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.14%)</title><rect x="835.5" y="2083.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="838.5" y="2094.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.14%)</title><rect x="835.5" y="2067.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="838.5" y="2078.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.14%)</title><rect x="835.5" y="2051.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="838.5" y="2062.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.14%)</title><rect x="835.5" y="2035.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="838.5" y="2046.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.14%)</title><rect x="835.5" y="2019.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="838.5" y="2030.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.14%)</title><rect x="835.5" y="2003.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="838.5" y="2014.0"></text>
</g>
<g>
<title>start_thread (215 samples, 29.90%)</title><rect x="837.1" y="2131.0" width="352.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="840.1" y="2142.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (215 samples, 29.90%)</title><rect x="837.1" y="2115.0" width="352.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="840.1" y="2126.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (215 samples, 29.90%)</title><rect x="837.1" y="2099.0" width="352.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="840.1" y="2110.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.14%)</title><rect x="837.1" y="2083.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="840.1" y="2094.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.14%)</title><rect x="837.1" y="2067.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="840.1" y="2078.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.14%)</title><rect x="837.1" y="2051.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="840.1" y="2062.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.14%)</title><rect x="837.1" y="2035.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="840.1" y="2046.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.14%)</title><rect x="837.1" y="2019.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="840.1" y="2030.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.83%)</title><rect x="838.8" y="2083.0" width="9.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="841.8" y="2094.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.56%)</title><rect x="838.8" y="2067.0" width="6.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="841.8" y="2078.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.28%)</title><rect x="838.8" y="2051.0" width="3.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="841.8" y="2062.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.14%)</title><rect x="838.8" y="2035.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="841.8" y="2046.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.14%)</title><rect x="840.4" y="2035.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="843.4" y="2046.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.28%)</title><rect x="842.1" y="2051.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="845.1" y="2062.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.28%)</title><rect x="842.1" y="2035.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="845.1" y="2046.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.28%)</title><rect x="842.1" y="2019.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="845.1" y="2030.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.28%)</title><rect x="842.1" y="2003.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="845.1" y="2014.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.28%)</title><rect x="842.1" y="1987.0" width="3.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="845.1" y="1998.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.28%)</title><rect x="842.1" y="1971.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="845.1" y="1982.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.14%)</title><rect x="843.7" y="1955.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="846.7" y="1966.0"></text>
</g>
<g>
<title>void G1ScanEvacuatedObjClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.14%)</title><rect x="843.7" y="1939.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="846.7" y="1950.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.28%)</title><rect x="845.4" y="2067.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="848.4" y="2078.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.28%)</title><rect x="845.4" y="2051.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="848.4" y="2062.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.14%)</title><rect x="845.4" y="2035.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="848.4" y="2046.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.14%)</title><rect x="845.4" y="2019.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="848.4" y="2030.0"></text>
</g>
<g>
<title>frame::sender_for_interpreter_frame(RegisterMap*) const (1 samples, 0.14%)</title><rect x="845.4" y="2003.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="848.4" y="2014.0"></text>
</g>
<g>
<title>frame::entry_frame_is_first() const (1 samples, 0.14%)</title><rect x="847.0" y="2035.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="850.0" y="2046.0"></text>
</g>
<g>
<title>JavaThread::run() (208 samples, 28.93%)</title><rect x="848.6" y="2083.0" width="341.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="851.6" y="2094.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (208 samples, 28.93%)</title><rect x="848.6" y="2067.0" width="341.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="851.6" y="2078.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (207 samples, 28.79%)</title><rect x="848.6" y="2051.0" width="339.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="851.6" y="2062.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (206 samples, 28.65%)</title><rect x="848.6" y="2035.0" width="338.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="851.6" y="2046.0">CompileBroker::invoke_compiler_on_method(Compi..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (206 samples, 28.65%)</title><rect x="848.6" y="2019.0" width="338.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="851.6" y="2030.0">C2Compiler::compile_method(ciEnv*, ciMethod*, ..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (206 samples, 28.65%)</title><rect x="848.6" y="2003.0" width="338.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="851.6" y="2014.0">Compile::Compile(ciEnv*, C2Compiler*, ciMethod..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.14%)</title><rect x="848.6" y="1987.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="851.6" y="1998.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.14%)</title><rect x="848.6" y="1971.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="851.6" y="1982.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.14%)</title><rect x="848.6" y="1955.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="851.6" y="1966.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.14%)</title><rect x="848.6" y="1939.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="851.6" y="1950.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.14%)</title><rect x="848.6" y="1923.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="851.6" y="1934.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.14%)</title><rect x="848.6" y="1907.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="851.6" y="1918.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.14%)</title><rect x="848.6" y="1891.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="851.6" y="1902.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.14%)</title><rect x="848.6" y="1875.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="851.6" y="1886.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.14%)</title><rect x="848.6" y="1859.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="851.6" y="1870.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.14%)</title><rect x="848.6" y="1843.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="851.6" y="1854.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.14%)</title><rect x="848.6" y="1827.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="851.6" y="1838.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.14%)</title><rect x="848.6" y="1811.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="851.6" y="1822.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.14%)</title><rect x="848.6" y="1795.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="851.6" y="1806.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.14%)</title><rect x="848.6" y="1779.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="851.6" y="1790.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.14%)</title><rect x="848.6" y="1763.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="851.6" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.14%)</title><rect x="848.6" y="1747.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="851.6" y="1758.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.14%)</title><rect x="848.6" y="1731.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="851.6" y="1742.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.14%)</title><rect x="848.6" y="1715.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="851.6" y="1726.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (135 samples, 18.78%)</title><rect x="850.3" y="1987.0" width="221.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="853.3" y="1998.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (4 samples, 0.56%)</title><rect x="850.3" y="1971.0" width="6.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="853.3" y="1982.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.14%)</title><rect x="850.3" y="1955.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="853.3" y="1966.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (3 samples, 0.42%)</title><rect x="851.9" y="1955.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="854.9" y="1966.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (3 samples, 0.42%)</title><rect x="851.9" y="1939.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="854.9" y="1950.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.14%)</title><rect x="853.6" y="1923.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="856.6" y="1934.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (1 samples, 0.14%)</title><rect x="853.6" y="1907.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="856.6" y="1918.0"></text>
</g>
<g>
<title>ValueRecorder&lt;_jobject*&gt;::ValueRecorder(Arena*) (1 samples, 0.14%)</title><rect x="855.2" y="1923.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="858.2" y="1934.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (4 samples, 0.56%)</title><rect x="856.8" y="1971.0" width="6.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="859.8" y="1982.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (2 samples, 0.28%)</title><rect x="856.8" y="1955.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="859.8" y="1966.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.28%)</title><rect x="856.8" y="1939.0" width="3.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="859.8" y="1950.0"></text>
</g>
<g>
<title>ConstantOopWriteValue::write_on(DebugInfoWriteStream*) (1 samples, 0.14%)</title><rect x="856.8" y="1923.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="859.8" y="1934.0"></text>
</g>
<g>
<title>OopRecorder::find_index(_jobject*) (1 samples, 0.14%)</title><rect x="856.8" y="1907.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="859.8" y="1918.0"></text>
</g>
<g>
<title>ValueRecorder&lt;_jobject*&gt;::maybe_find_index(_jobject*) (1 samples, 0.14%)</title><rect x="856.8" y="1891.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="859.8" y="1902.0"></text>
</g>
<g>
<title>ValueRecorder&lt;_jobject*&gt;::maybe_initialize() (1 samples, 0.14%)</title><rect x="856.8" y="1875.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="859.8" y="1886.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.14%)</title><rect x="858.5" y="1923.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="861.5" y="1934.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (2 samples, 0.28%)</title><rect x="860.1" y="1955.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="863.1" y="1966.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.28%)</title><rect x="860.1" y="1939.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="863.1" y="1950.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.28%)</title><rect x="860.1" y="1923.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="863.1" y="1934.0"></text>
</g>
<g>
<title>Matcher::Matcher() (2 samples, 0.28%)</title><rect x="863.4" y="1971.0" width="3.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="866.4" y="1982.0"></text>
</g>
<g>
<title>PhaseTransform::PhaseTransform(Phase::PhaseNumber) (1 samples, 0.14%)</title><rect x="863.4" y="1955.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="866.4" y="1966.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (1 samples, 0.14%)</title><rect x="863.4" y="1939.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="866.4" y="1950.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.14%)</title><rect x="863.4" y="1923.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="866.4" y="1934.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.14%)</title><rect x="863.4" y="1907.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="866.4" y="1918.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.14%)</title><rect x="865.0" y="1955.0" width="1.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="868.0" y="1966.0"></text>
</g>
<g>
<title>Matcher::match() (12 samples, 1.67%)</title><rect x="866.7" y="1971.0" width="19.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="869.7" y="1982.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (1 samples, 0.14%)</title><rect x="866.7" y="1955.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="869.7" y="1966.0"></text>
</g>
<g>
<title>Matcher::init_first_stack_mask() (1 samples, 0.14%)</title><rect x="866.7" y="1939.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="869.7" y="1950.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (11 samples, 1.53%)</title><rect x="868.3" y="1955.0" width="18.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="871.3" y="1966.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (3 samples, 0.42%)</title><rect x="870.0" y="1939.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="873.0" y="1950.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (7 samples, 0.97%)</title><rect x="874.9" y="1939.0" width="11.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="877.9" y="1950.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.28%)</title><rect x="874.9" y="1923.0" width="3.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="877.9" y="1934.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.14%)</title><rect x="874.9" y="1907.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="877.9" y="1918.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.14%)</title><rect x="874.9" y="1891.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="877.9" y="1902.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.14%)</title><rect x="874.9" y="1875.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="877.9" y="1886.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.14%)</title><rect x="876.5" y="1907.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="879.5" y="1918.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.14%)</title><rect x="876.5" y="1891.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="879.5" y="1902.0"></text>
</g>
<g>
<title>State::_sub_Op_DecodeN(Node const*) (1 samples, 0.14%)</title><rect x="876.5" y="1875.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="879.5" y="1886.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (4 samples, 0.56%)</title><rect x="878.2" y="1923.0" width="6.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="881.2" y="1934.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.14%)</title><rect x="879.8" y="1907.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="882.8" y="1918.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.14%)</title><rect x="879.8" y="1891.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="882.8" y="1902.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.14%)</title><rect x="879.8" y="1875.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="882.8" y="1886.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.14%)</title><rect x="881.5" y="1907.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="884.5" y="1918.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (1 samples, 0.14%)</title><rect x="883.1" y="1907.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="886.1" y="1918.0"></text>
</g>
<g>
<title>ResourceObj::operator new(unsigned long, Arena*) (1 samples, 0.14%)</title><rect x="884.7" y="1923.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="887.7" y="1934.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (1 samples, 0.14%)</title><rect x="886.4" y="1971.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="889.4" y="1982.0"></text>
</g>
<g>
<title>PhaseBlockLayout::grow_traces() (1 samples, 0.14%)</title><rect x="886.4" y="1955.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="889.4" y="1966.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (9 samples, 1.25%)</title><rect x="888.0" y="1971.0" width="14.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="891.0" y="1982.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (9 samples, 1.25%)</title><rect x="888.0" y="1955.0" width="14.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="891.0" y="1966.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.14%)</title><rect x="888.0" y="1939.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="891.0" y="1950.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.14%)</title><rect x="888.0" y="1923.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="891.0" y="1934.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (4 samples, 0.56%)</title><rect x="889.7" y="1939.0" width="6.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="892.7" y="1950.0"></text>
</g>
<g>
<title>Node::is_iteratively_computed() (1 samples, 0.14%)</title><rect x="891.3" y="1923.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="894.3" y="1934.0"></text>
</g>
<g>
<title>rRegIOper::type() const (1 samples, 0.14%)</title><rect x="891.3" y="1907.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="894.3" y="1918.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (1 samples, 0.14%)</title><rect x="892.9" y="1923.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="895.9" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_entry_block_pressure(Block*) (1 samples, 0.14%)</title><rect x="894.6" y="1923.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="897.6" y="1934.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.14%)</title><rect x="894.6" y="1907.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="897.6" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.14%)</title><rect x="896.2" y="1939.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="899.2" y="1950.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.14%)</title><rect x="896.2" y="1923.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="899.2" y="1934.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.14%)</title><rect x="897.9" y="1939.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="900.9" y="1950.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.14%)</title><rect x="897.9" y="1923.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="900.9" y="1934.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.28%)</title><rect x="899.5" y="1939.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="902.5" y="1950.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.14%)</title><rect x="901.2" y="1923.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="904.2" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (103 samples, 14.33%)</title><rect x="902.8" y="1971.0" width="169.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="905.8" y="1982.0">PhaseChaitin::Register..</text>
</g>
<g>
<title>MachNode::two_adr() const (1 samples, 0.14%)</title><rect x="902.8" y="1955.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="905.8" y="1966.0"></text>
</g>
<g>
<title>MachSpillCopyNode::ideal_reg() const (1 samples, 0.14%)</title><rect x="904.4" y="1955.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="907.4" y="1966.0"></text>
</g>
<g>
<title>Node::cisc_operand() const (1 samples, 0.14%)</title><rect x="906.1" y="1955.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="909.1" y="1966.0"></text>
</g>
<g>
<title>Node::rematerialize() const (2 samples, 0.28%)</title><rect x="907.7" y="1955.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="910.7" y="1966.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (4 samples, 0.56%)</title><rect x="911.0" y="1955.0" width="6.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="914.0" y="1966.0"></text>
</g>
<g>
<title>GrowableArray&lt;unsigned int&gt;::raw_at_put_grow(int, unsigned int const&amp;, unsigned int const&amp;) (1 samples, 0.14%)</title><rect x="915.9" y="1939.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="918.9" y="1950.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (6 samples, 0.83%)</title><rect x="917.6" y="1955.0" width="9.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="920.6" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (2 samples, 0.28%)</title><rect x="920.8" y="1939.0" width="3.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="923.8" y="1950.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.28%)</title><rect x="924.1" y="1939.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="927.1" y="1950.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.14%)</title><rect x="925.8" y="1923.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="928.8" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.42%)</title><rect x="927.4" y="1955.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="930.4" y="1966.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (3 samples, 0.42%)</title><rect x="927.4" y="1939.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="930.4" y="1950.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.14%)</title><rect x="930.7" y="1923.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="933.7" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (13 samples, 1.81%)</title><rect x="932.3" y="1955.0" width="21.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="935.3" y="1966.0">P..</text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.14%)</title><rect x="945.5" y="1939.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="948.5" y="1950.0"></text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (1 samples, 0.14%)</title><rect x="947.1" y="1939.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="950.1" y="1950.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.14%)</title><rect x="947.1" y="1923.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="950.1" y="1934.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.14%)</title><rect x="947.1" y="1907.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="950.1" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (3 samples, 0.42%)</title><rect x="948.7" y="1939.0" width="5.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="951.7" y="1950.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.14%)</title><rect x="950.4" y="1923.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="953.4" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.14%)</title><rect x="952.0" y="1923.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="955.0" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (17 samples, 2.36%)</title><rect x="953.7" y="1955.0" width="27.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="956.7" y="1966.0">P..</text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.14%)</title><rect x="955.3" y="1939.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="958.3" y="1950.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (2 samples, 0.28%)</title><rect x="957.0" y="1939.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="960.0" y="1950.0"></text>
</g>
<g>
<title>testN_regNode::rule() const (1 samples, 0.14%)</title><rect x="958.6" y="1923.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="961.6" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (8 samples, 1.11%)</title><rect x="960.2" y="1939.0" width="13.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="963.2" y="1950.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.14%)</title><rect x="968.4" y="1923.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="971.4" y="1934.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.28%)</title><rect x="970.1" y="1923.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="973.1" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.28%)</title><rect x="973.4" y="1939.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="976.4" y="1950.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.14%)</title><rect x="975.0" y="1923.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="978.0" y="1934.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (3 samples, 0.42%)</title><rect x="976.6" y="1939.0" width="5.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="979.6" y="1950.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.14%)</title><rect x="979.9" y="1923.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="982.9" y="1934.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="979.9" y="1907.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="982.9" y="1918.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.14%)</title><rect x="979.9" y="1891.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="982.9" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (2 samples, 0.28%)</title><rect x="981.6" y="1955.0" width="3.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="984.6" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.28%)</title><rect x="981.6" y="1939.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="984.6" y="1950.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (1 samples, 0.14%)</title><rect x="984.9" y="1955.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="987.9" y="1966.0"></text>
</g>
<g>
<title>find_hihghest_bit(unsigned int) (1 samples, 0.14%)</title><rect x="984.9" y="1939.0" width="1.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="987.9" y="1950.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.14%)</title><rect x="984.9" y="1923.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="987.9" y="1934.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="984.9" y="1907.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="987.9" y="1918.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.14%)</title><rect x="984.9" y="1891.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="987.9" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (1 samples, 0.14%)</title><rect x="986.5" y="1955.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="989.5" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::fixup_spills() (1 samples, 0.14%)</title><rect x="988.1" y="1955.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="991.1" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.178] (2 samples, 0.28%)</title><rect x="989.8" y="1955.0" width="3.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="992.8" y="1966.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.28%)</title><rect x="989.8" y="1939.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="992.8" y="1950.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (6 samples, 0.83%)</title><rect x="993.1" y="1955.0" width="9.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="996.1" y="1966.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.42%)</title><rect x="998.0" y="1939.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1001.0" y="1950.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (4 samples, 0.56%)</title><rect x="1002.9" y="1955.0" width="6.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1005.9" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (9 samples, 1.25%)</title><rect x="1009.5" y="1955.0" width="14.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1012.5" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (5 samples, 0.70%)</title><rect x="1016.0" y="1939.0" width="8.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1019.0" y="1950.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.14%)</title><rect x="1024.2" y="1955.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1027.2" y="1966.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (11 samples, 1.53%)</title><rect x="1025.9" y="1955.0" width="18.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1028.9" y="1966.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (11 samples, 1.53%)</title><rect x="1025.9" y="1939.0" width="18.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1028.9" y="1950.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) (9 samples, 1.25%)</title><rect x="1029.2" y="1923.0" width="14.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1032.2" y="1934.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (4 samples, 0.56%)</title><rect x="1029.2" y="1907.0" width="6.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1032.2" y="1918.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (5 samples, 0.70%)</title><rect x="1035.7" y="1907.0" width="8.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1038.7" y="1918.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.14%)</title><rect x="1042.3" y="1891.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1045.3" y="1902.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (4 samples, 0.56%)</title><rect x="1043.9" y="1955.0" width="6.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1046.9" y="1966.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.14%)</title><rect x="1043.9" y="1939.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1046.9" y="1950.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.42%)</title><rect x="1045.6" y="1939.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1048.6" y="1950.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (3 samples, 0.42%)</title><rect x="1050.5" y="1955.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1053.5" y="1966.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.28%)</title><rect x="1052.1" y="1939.0" width="3.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1055.1" y="1950.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (8 samples, 1.11%)</title><rect x="1055.4" y="1955.0" width="13.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1058.4" y="1966.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.14%)</title><rect x="1060.3" y="1939.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1063.3" y="1950.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (4 samples, 0.56%)</title><rect x="1062.0" y="1939.0" width="6.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1065.0" y="1950.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.14%)</title><rect x="1065.3" y="1923.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1068.3" y="1934.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.14%)</title><rect x="1066.9" y="1923.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1069.9" y="1934.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.14%)</title><rect x="1068.6" y="1955.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1071.6" y="1966.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (1 samples, 0.14%)</title><rect x="1070.2" y="1955.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1073.2" y="1966.0"></text>
</g>
<g>
<title>Compile::Optimize() (41 samples, 5.70%)</title><rect x="1071.8" y="1987.0" width="67.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1074.8" y="1998.0">Compile..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.14%)</title><rect x="1071.8" y="1971.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1074.8" y="1982.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.14%)</title><rect x="1071.8" y="1955.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1074.8" y="1966.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (1 samples, 0.14%)</title><rect x="1073.5" y="1971.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1076.5" y="1982.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (1 samples, 0.14%)</title><rect x="1073.5" y="1955.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.5" y="1966.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (1 samples, 0.14%)</title><rect x="1073.5" y="1939.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1076.5" y="1950.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1073.5" y="1923.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1076.5" y="1934.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1073.5" y="1907.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1076.5" y="1918.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1073.5" y="1891.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1076.5" y="1902.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1073.5" y="1875.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1076.5" y="1886.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1073.5" y="1859.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1076.5" y="1870.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1073.5" y="1843.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.5" y="1854.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1073.5" y="1827.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1076.5" y="1838.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1073.5" y="1811.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1076.5" y="1822.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1073.5" y="1795.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1076.5" y="1806.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1073.5" y="1779.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1076.5" y="1790.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1073.5" y="1763.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1076.5" y="1774.0"></text>
</g>
<g>
<title>Parse::do_newarray(BasicType) (1 samples, 0.14%)</title><rect x="1073.5" y="1747.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1076.5" y="1758.0"></text>
</g>
<g>
<title>GraphKit::new_array(Node*, Node*, int, Node**, bool) (1 samples, 0.14%)</title><rect x="1073.5" y="1731.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1076.5" y="1742.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.14%)</title><rect x="1073.5" y="1715.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1076.5" y="1726.0"></text>
</g>
<g>
<title>AddNode::Ideal(PhaseGVN*, bool) (1 samples, 0.14%)</title><rect x="1073.5" y="1699.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1076.5" y="1710.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.14%)</title><rect x="1075.1" y="1971.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1078.1" y="1982.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.14%)</title><rect x="1075.1" y="1955.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1078.1" y="1966.0"></text>
</g>
<g>
<title>ConnectionGraph::add_node_to_connection_graph(Node*, Unique_Node_List*) (1 samples, 0.14%)</title><rect x="1075.1" y="1939.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1078.1" y="1950.0"></text>
</g>
<g>
<title>ConnectionGraph::add_call_node(CallNode*) (1 samples, 0.14%)</title><rect x="1075.1" y="1923.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1078.1" y="1934.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.14%)</title><rect x="1076.8" y="1971.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1079.8" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (23 samples, 3.20%)</title><rect x="1078.4" y="1971.0" width="37.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1081.4" y="1982.0">Pha..</text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.14%)</title><rect x="1078.4" y="1955.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1081.4" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) (1 samples, 0.14%)</title><rect x="1078.4" y="1939.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1081.4" y="1950.0"></text>
</g>
<g>
<title>CatchNode::Opcode() const (1 samples, 0.14%)</title><rect x="1078.4" y="1923.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1081.4" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (2 samples, 0.28%)</title><rect x="1080.0" y="1955.0" width="3.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1083.0" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.56%)</title><rect x="1083.3" y="1955.0" width="6.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1086.3" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_early_ctrl(Node*) (1 samples, 0.14%)</title><rect x="1088.2" y="1939.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1091.2" y="1950.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.14%)</title><rect x="1088.2" y="1923.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1091.2" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (7 samples, 0.97%)</title><rect x="1089.9" y="1955.0" width="11.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1092.9" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (5 samples, 0.70%)</title><rect x="1091.5" y="1939.0" width="8.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1094.5" y="1950.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.14%)</title><rect x="1091.5" y="1923.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1094.5" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (3 samples, 0.42%)</title><rect x="1093.2" y="1923.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1096.2" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.28%)</title><rect x="1094.8" y="1907.0" width="3.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1097.8" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.14%)</title><rect x="1098.1" y="1923.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1101.1" y="1934.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.14%)</title><rect x="1099.7" y="1939.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1102.7" y="1950.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="1099.7" y="1923.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1102.7" y="1934.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.14%)</title><rect x="1099.7" y="1907.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1102.7" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (3 samples, 0.42%)</title><rect x="1101.4" y="1955.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1104.4" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.14%)</title><rect x="1104.7" y="1939.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1107.7" y="1950.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (5 samples, 0.70%)</title><rect x="1106.3" y="1955.0" width="8.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1109.3" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.14%)</title><rect x="1106.3" y="1939.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1109.3" y="1950.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.14%)</title><rect x="1107.9" y="1939.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1110.9" y="1950.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.14%)</title><rect x="1107.9" y="1923.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1110.9" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.14%)</title><rect x="1107.9" y="1907.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1110.9" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (3 samples, 0.42%)</title><rect x="1109.6" y="1939.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1112.6" y="1950.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.14%)</title><rect x="1109.6" y="1923.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1112.6" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.14%)</title><rect x="1109.6" y="1907.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1112.6" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (2 samples, 0.28%)</title><rect x="1111.2" y="1923.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1114.2" y="1934.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.14%)</title><rect x="1111.2" y="1907.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1114.2" y="1918.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.14%)</title><rect x="1111.2" y="1891.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1114.2" y="1902.0"></text>
</g>
<g>
<title>AllocateNode::Ideal_allocation(Node*, PhaseTransform*, long&amp;) (1 samples, 0.14%)</title><rect x="1111.2" y="1875.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1114.2" y="1886.0"></text>
</g>
<g>
<title>AddPNode::Ideal_base_and_offset(Node*, PhaseTransform*, long&amp;) (1 samples, 0.14%)</title><rect x="1111.2" y="1859.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1114.2" y="1870.0"></text>
</g>
<g>
<title>NodeHash::hash_find(Node const*) (1 samples, 0.14%)</title><rect x="1112.9" y="1907.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1115.9" y="1918.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.14%)</title><rect x="1114.5" y="1955.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1117.5" y="1966.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.14%)</title><rect x="1114.5" y="1939.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1117.5" y="1950.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.14%)</title><rect x="1114.5" y="1923.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1117.5" y="1934.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.14%)</title><rect x="1114.5" y="1907.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1117.5" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.14%)</title><rect x="1116.1" y="1971.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1119.1" y="1982.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (1 samples, 0.14%)</title><rect x="1117.8" y="1971.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1120.8" y="1982.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.14%)</title><rect x="1117.8" y="1955.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1120.8" y="1966.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="1117.8" y="1939.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1120.8" y="1950.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.14%)</title><rect x="1117.8" y="1923.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1120.8" y="1934.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (9 samples, 1.25%)</title><rect x="1119.4" y="1971.0" width="14.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1122.4" y="1982.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (8 samples, 1.11%)</title><rect x="1121.1" y="1955.0" width="13.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1124.1" y="1966.0"></text>
</g>
<g>
<title>AddNode::Identity(PhaseGVN*) (1 samples, 0.14%)</title><rect x="1122.7" y="1939.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1125.7" y="1950.0"></text>
</g>
<g>
<title>AddLNode::add_id() const (1 samples, 0.14%)</title><rect x="1122.7" y="1923.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1125.7" y="1934.0"></text>
</g>
<g>
<title>LoadBNode::Opcode() const (1 samples, 0.14%)</title><rect x="1124.4" y="1939.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1127.4" y="1950.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.14%)</title><rect x="1126.0" y="1939.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1129.0" y="1950.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.14%)</title><rect x="1126.0" y="1923.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1129.0" y="1934.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.14%)</title><rect x="1126.0" y="1907.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1129.0" y="1918.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.14%)</title><rect x="1126.0" y="1891.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1129.0" y="1902.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.28%)</title><rect x="1127.6" y="1939.0" width="3.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1130.6" y="1950.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.14%)</title><rect x="1129.3" y="1923.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1132.3" y="1934.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.14%)</title><rect x="1130.9" y="1939.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1133.9" y="1950.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.14%)</title><rect x="1130.9" y="1923.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1133.9" y="1934.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.14%)</title><rect x="1130.9" y="1907.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1133.9" y="1918.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.14%)</title><rect x="1130.9" y="1891.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1133.9" y="1902.0"></text>
</g>
<g>
<title>StoreNode::Identity(PhaseGVN*) (1 samples, 0.14%)</title><rect x="1132.6" y="1939.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1135.6" y="1950.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (3 samples, 0.42%)</title><rect x="1134.2" y="1971.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1137.2" y="1982.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.42%)</title><rect x="1134.2" y="1955.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1137.2" y="1966.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.42%)</title><rect x="1134.2" y="1939.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1137.2" y="1950.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.14%)</title><rect x="1134.2" y="1923.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.2" y="1934.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.14%)</title><rect x="1134.2" y="1907.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1137.2" y="1918.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.14%)</title><rect x="1134.2" y="1891.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1137.2" y="1902.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.14%)</title><rect x="1134.2" y="1875.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1137.2" y="1886.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.14%)</title><rect x="1134.2" y="1859.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1137.2" y="1870.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.14%)</title><rect x="1135.8" y="1923.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1138.8" y="1934.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist0(Node*) (1 samples, 0.14%)</title><rect x="1135.8" y="1907.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1138.8" y="1918.0"></text>
</g>
<g>
<title>URShiftLNode::Ideal(PhaseGVN*, bool) (1 samples, 0.14%)</title><rect x="1137.5" y="1923.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1140.5" y="1934.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.14%)</title><rect x="1137.5" y="1907.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1140.5" y="1918.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.14%)</title><rect x="1137.5" y="1891.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1140.5" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.14%)</title><rect x="1137.5" y="1875.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1140.5" y="1886.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.14%)</title><rect x="1139.1" y="1987.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1142.1" y="1998.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.14%)</title><rect x="1139.1" y="1971.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1142.1" y="1982.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.14%)</title><rect x="1139.1" y="1955.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1142.1" y="1966.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (23 samples, 3.20%)</title><rect x="1140.8" y="1987.0" width="37.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.8" y="1998.0">Par..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (23 samples, 3.20%)</title><rect x="1140.8" y="1971.0" width="37.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1143.8" y="1982.0">Par..</text>
</g>
<g>
<title>Parse::do_all_blocks() (22 samples, 3.06%)</title><rect x="1140.8" y="1955.0" width="36.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1143.8" y="1966.0">Par..</text>
</g>
<g>
<title>Parse::do_one_block() (22 samples, 3.06%)</title><rect x="1140.8" y="1939.0" width="36.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.8" y="1950.0">Par..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (22 samples, 3.06%)</title><rect x="1140.8" y="1923.0" width="36.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1143.8" y="1934.0">Par..</text>
</g>
<g>
<title>Parse::do_call() (21 samples, 2.92%)</title><rect x="1140.8" y="1907.0" width="34.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1143.8" y="1918.0">Pa..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.28%)</title><rect x="1140.8" y="1891.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.8" y="1902.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.28%)</title><rect x="1140.8" y="1875.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1143.8" y="1886.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.28%)</title><rect x="1140.8" y="1859.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1143.8" y="1870.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.28%)</title><rect x="1140.8" y="1843.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1143.8" y="1854.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.28%)</title><rect x="1140.8" y="1827.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.8" y="1838.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.14%)</title><rect x="1142.4" y="1811.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1145.4" y="1822.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.14%)</title><rect x="1142.4" y="1795.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.4" y="1806.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.14%)</title><rect x="1142.4" y="1779.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1145.4" y="1790.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.14%)</title><rect x="1142.4" y="1763.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1145.4" y="1774.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.14%)</title><rect x="1142.4" y="1747.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1145.4" y="1758.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.14%)</title><rect x="1142.4" y="1731.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1145.4" y="1742.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.14%)</title><rect x="1142.4" y="1715.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1145.4" y="1726.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.14%)</title><rect x="1142.4" y="1699.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1145.4" y="1710.0"></text>
</g>
<g>
<title>ConstantPool::impl_name_ref_at(int, bool) (1 samples, 0.14%)</title><rect x="1142.4" y="1683.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1145.4" y="1694.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1144.0" y="1891.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1147.0" y="1902.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.14%)</title><rect x="1144.0" y="1875.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1147.0" y="1886.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_native_clone(bool) (1 samples, 0.14%)</title><rect x="1144.0" y="1859.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.0" y="1870.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) [clone .part.285] (1 samples, 0.14%)</title><rect x="1144.0" y="1843.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1147.0" y="1854.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.14%)</title><rect x="1144.0" y="1827.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1147.0" y="1838.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.14%)</title><rect x="1144.0" y="1811.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1147.0" y="1822.0"></text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 0.14%)</title><rect x="1144.0" y="1795.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1147.0" y="1806.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.14%)</title><rect x="1144.0" y="1779.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1147.0" y="1790.0"></text>
</g>
<g>
<title>TypeAryPtr::xmeet_helper(Type const*) const (1 samples, 0.14%)</title><rect x="1144.0" y="1763.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1147.0" y="1774.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.14%)</title><rect x="1144.0" y="1747.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.0" y="1758.0"></text>
</g>
<g>
<title>TypeAryPtr::xmeet_helper(Type const*) const (1 samples, 0.14%)</title><rect x="1144.0" y="1731.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1147.0" y="1742.0"></text>
</g>
<g>
<title>TypeAry::cleanup_speculative() const (1 samples, 0.14%)</title><rect x="1144.0" y="1715.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.0" y="1726.0"></text>
</g>
<g>
<title>TypeNarrowOop::cleanup_speculative() const (1 samples, 0.14%)</title><rect x="1144.0" y="1699.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.0" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 2.09%)</title><rect x="1145.7" y="1891.0" width="24.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.7" y="1902.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 2.09%)</title><rect x="1145.7" y="1875.0" width="24.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1148.7" y="1886.0">P..</text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.14%)</title><rect x="1145.7" y="1859.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1148.7" y="1870.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.14%)</title><rect x="1145.7" y="1843.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1148.7" y="1854.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 1.81%)</title><rect x="1147.3" y="1859.0" width="21.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.3" y="1870.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (13 samples, 1.81%)</title><rect x="1147.3" y="1843.0" width="21.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1150.3" y="1854.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (13 samples, 1.81%)</title><rect x="1147.3" y="1827.0" width="21.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.3" y="1838.0">P..</text>
</g>
<g>
<title>Parse::do_call() (12 samples, 1.67%)</title><rect x="1147.3" y="1811.0" width="19.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1150.3" y="1822.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 1.39%)</title><rect x="1147.3" y="1795.0" width="16.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1150.3" y="1806.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 1.39%)</title><rect x="1147.3" y="1779.0" width="16.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.3" y="1790.0"></text>
</g>
<g>
<title>Parse::Block::init_graph(Parse*) (1 samples, 0.14%)</title><rect x="1147.3" y="1763.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.3" y="1774.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 1.25%)</title><rect x="1149.0" y="1763.0" width="14.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.0" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 1.25%)</title><rect x="1149.0" y="1747.0" width="14.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.0" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 1.25%)</title><rect x="1149.0" y="1731.0" width="14.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.0" y="1742.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 1.25%)</title><rect x="1149.0" y="1715.0" width="14.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.0" y="1726.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.28%)</title><rect x="1149.0" y="1699.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1152.0" y="1710.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.28%)</title><rect x="1149.0" y="1683.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1152.0" y="1694.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.28%)</title><rect x="1149.0" y="1667.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.0" y="1678.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.28%)</title><rect x="1149.0" y="1651.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.0" y="1662.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.28%)</title><rect x="1149.0" y="1635.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.0" y="1646.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.28%)</title><rect x="1149.0" y="1619.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.0" y="1630.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.28%)</title><rect x="1149.0" y="1603.0" width="3.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.0" y="1614.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.28%)</title><rect x="1149.0" y="1587.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.0" y="1598.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.14%)</title><rect x="1149.0" y="1571.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.0" y="1582.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.14%)</title><rect x="1149.0" y="1555.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.0" y="1566.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.14%)</title><rect x="1149.0" y="1539.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.0" y="1550.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.14%)</title><rect x="1149.0" y="1523.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1152.0" y="1534.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 0.14%)</title><rect x="1149.0" y="1507.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.0" y="1518.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.14%)</title><rect x="1149.0" y="1491.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.0" y="1502.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.14%)</title><rect x="1149.0" y="1475.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.0" y="1486.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.14%)</title><rect x="1149.0" y="1459.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.0" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.14%)</title><rect x="1149.0" y="1443.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.0" y="1454.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_new(ciBytecodeStream*) (1 samples, 0.14%)</title><rect x="1150.6" y="1571.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.6" y="1582.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_constant_pool_tag(int) const (1 samples, 0.14%)</title><rect x="1150.6" y="1555.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.6" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.70%)</title><rect x="1152.3" y="1699.0" width="8.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1155.3" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.70%)</title><rect x="1152.3" y="1683.0" width="8.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.3" y="1694.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.70%)</title><rect x="1152.3" y="1667.0" width="8.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.3" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.70%)</title><rect x="1152.3" y="1651.0" width="8.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.3" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.70%)</title><rect x="1152.3" y="1635.0" width="8.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.3" y="1646.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.70%)</title><rect x="1152.3" y="1619.0" width="8.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.3" y="1630.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.14%)</title><rect x="1152.3" y="1603.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.3" y="1614.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.14%)</title><rect x="1152.3" y="1587.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1155.3" y="1598.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.14%)</title><rect x="1152.3" y="1571.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.3" y="1582.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.14%)</title><rect x="1152.3" y="1555.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1155.3" y="1566.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.14%)</title><rect x="1152.3" y="1539.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.3" y="1550.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.14%)</title><rect x="1152.3" y="1523.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.3" y="1534.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.14%)</title><rect x="1152.3" y="1507.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.3" y="1518.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.14%)</title><rect x="1152.3" y="1491.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.3" y="1502.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.14%)</title><rect x="1152.3" y="1475.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.3" y="1486.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.14%)</title><rect x="1152.3" y="1459.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.3" y="1470.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.14%)</title><rect x="1152.3" y="1443.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.3" y="1454.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.14%)</title><rect x="1152.3" y="1427.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.3" y="1438.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.14%)</title><rect x="1152.3" y="1411.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.3" y="1422.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.14%)</title><rect x="1152.3" y="1395.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.3" y="1406.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.14%)</title><rect x="1152.3" y="1379.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.3" y="1390.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.14%)</title><rect x="1152.3" y="1363.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.3" y="1374.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.14%)</title><rect x="1152.3" y="1347.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1155.3" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.56%)</title><rect x="1153.9" y="1603.0" width="6.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.9" y="1614.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.56%)</title><rect x="1153.9" y="1587.0" width="6.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.9" y="1598.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.56%)</title><rect x="1153.9" y="1571.0" width="6.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.9" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.56%)</title><rect x="1153.9" y="1555.0" width="6.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.9" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.56%)</title><rect x="1153.9" y="1539.0" width="6.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.9" y="1550.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.56%)</title><rect x="1153.9" y="1523.0" width="6.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.9" y="1534.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.56%)</title><rect x="1153.9" y="1507.0" width="6.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.9" y="1518.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.56%)</title><rect x="1153.9" y="1491.0" width="6.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.9" y="1502.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.56%)</title><rect x="1153.9" y="1475.0" width="6.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.9" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.56%)</title><rect x="1153.9" y="1459.0" width="6.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1156.9" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.56%)</title><rect x="1153.9" y="1443.0" width="6.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.9" y="1454.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.56%)</title><rect x="1153.9" y="1427.0" width="6.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1156.9" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.42%)</title><rect x="1153.9" y="1411.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.9" y="1422.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.42%)</title><rect x="1153.9" y="1395.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.9" y="1406.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.42%)</title><rect x="1153.9" y="1379.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.9" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.42%)</title><rect x="1153.9" y="1363.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.9" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.42%)</title><rect x="1153.9" y="1347.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.9" y="1358.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1153.9" y="1331.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.9" y="1342.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1153.9" y="1315.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.9" y="1326.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1153.9" y="1299.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.9" y="1310.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1153.9" y="1283.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.9" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1153.9" y="1267.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.9" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1153.9" y="1251.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1156.9" y="1262.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1153.9" y="1235.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.9" y="1246.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1153.9" y="1219.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.9" y="1230.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1153.9" y="1203.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.9" y="1214.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.14%)</title><rect x="1153.9" y="1187.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.9" y="1198.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.14%)</title><rect x="1155.5" y="1331.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.5" y="1342.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.14%)</title><rect x="1155.5" y="1315.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.5" y="1326.0"></text>
</g>
<g>
<title>BoolNode::Ideal(PhaseGVN*, bool) (1 samples, 0.14%)</title><rect x="1155.5" y="1299.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.5" y="1310.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.14%)</title><rect x="1157.2" y="1331.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1160.2" y="1342.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.14%)</title><rect x="1157.2" y="1315.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.2" y="1326.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.14%)</title><rect x="1157.2" y="1299.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1160.2" y="1310.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.14%)</title><rect x="1158.8" y="1411.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.8" y="1422.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.28%)</title><rect x="1160.5" y="1699.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.5" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.28%)</title><rect x="1160.5" y="1683.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.5" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.28%)</title><rect x="1160.5" y="1667.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.5" y="1678.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.28%)</title><rect x="1160.5" y="1651.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.5" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.28%)</title><rect x="1160.5" y="1635.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.5" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.28%)</title><rect x="1160.5" y="1619.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.5" y="1630.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.28%)</title><rect x="1160.5" y="1603.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.5" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.28%)</title><rect x="1160.5" y="1587.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.5" y="1598.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.28%)</title><rect x="1160.5" y="1571.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.5" y="1582.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.28%)</title><rect x="1160.5" y="1555.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.5" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.28%)</title><rect x="1160.5" y="1539.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.5" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.28%)</title><rect x="1160.5" y="1523.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.5" y="1534.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.28%)</title><rect x="1160.5" y="1507.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.5" y="1518.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.28%)</title><rect x="1160.5" y="1491.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.5" y="1502.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.28%)</title><rect x="1160.5" y="1475.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.5" y="1486.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.28%)</title><rect x="1160.5" y="1459.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.5" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.28%)</title><rect x="1160.5" y="1443.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.5" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.28%)</title><rect x="1160.5" y="1427.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.5" y="1438.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.28%)</title><rect x="1160.5" y="1411.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.5" y="1422.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1160.5" y="1395.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.5" y="1406.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1160.5" y="1379.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.5" y="1390.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1160.5" y="1363.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.5" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1160.5" y="1347.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.5" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1160.5" y="1331.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.5" y="1342.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1160.5" y="1315.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.5" y="1326.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1160.5" y="1299.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.5" y="1310.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1160.5" y="1283.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1163.5" y="1294.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1160.5" y="1267.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.5" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1160.5" y="1251.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.5" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1160.5" y="1235.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.14%)</title><rect x="1160.5" y="1219.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.14%)</title><rect x="1160.5" y="1203.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.5" y="1214.0"></text>
</g>
<g>
<title>GraphKit::make_constant_from_field(ciField*, Node*) (1 samples, 0.14%)</title><rect x="1160.5" y="1187.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.5" y="1198.0"></text>
</g>
<g>
<title>Type::make_constant_from_field(ciField*, ciInstance*, BasicType, bool) (1 samples, 0.14%)</title><rect x="1160.5" y="1171.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.5" y="1182.0"></text>
</g>
<g>
<title>ciField::constant_value() (1 samples, 0.14%)</title><rect x="1160.5" y="1155.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.5" y="1166.0"></text>
</g>
<g>
<title>ciInstance::field_value_impl(BasicType, int) (1 samples, 0.14%)</title><rect x="1160.5" y="1139.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.5" y="1150.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.14%)</title><rect x="1160.5" y="1123.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.5" y="1134.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_object(oopDesc*) (1 samples, 0.14%)</title><rect x="1160.5" y="1107.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.5" y="1118.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1162.1" y="1395.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.1" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1162.1" y="1379.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.1" y="1390.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1162.1" y="1363.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.1" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1162.1" y="1347.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.1" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1162.1" y="1331.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1165.1" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1162.1" y="1315.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.1" y="1326.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1162.1" y="1299.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.1" y="1310.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1162.1" y="1283.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.1" y="1294.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1162.1" y="1267.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.1" y="1278.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1162.1" y="1251.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.1" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1162.1" y="1235.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.1" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1162.1" y="1219.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.1" y="1230.0"></text>
</g>
<g>
<title>Parse::do_instanceof() (1 samples, 0.14%)</title><rect x="1162.1" y="1203.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.1" y="1214.0"></text>
</g>
<g>
<title>GraphKit::gen_instanceof(Node*, Node*, bool) (1 samples, 0.14%)</title><rect x="1162.1" y="1187.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.1" y="1198.0"></text>
</g>
<g>
<title>GraphKit::load_object_klass(Node*) (1 samples, 0.14%)</title><rect x="1162.1" y="1171.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.1" y="1182.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.14%)</title><rect x="1162.1" y="1155.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.1" y="1166.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.14%)</title><rect x="1162.1" y="1139.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.1" y="1150.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.14%)</title><rect x="1162.1" y="1123.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.1" y="1134.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.14%)</title><rect x="1162.1" y="1107.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.1" y="1118.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.28%)</title><rect x="1163.7" y="1795.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.7" y="1806.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1163.7" y="1779.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1166.7" y="1790.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1163.7" y="1763.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1166.7" y="1774.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1163.7" y="1747.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.7" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1163.7" y="1731.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.7" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1163.7" y="1715.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1166.7" y="1726.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1163.7" y="1699.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.7" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1163.7" y="1683.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.7" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1163.7" y="1667.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.7" y="1678.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1163.7" y="1651.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.7" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1163.7" y="1635.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.7" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1163.7" y="1619.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.7" y="1630.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.14%)</title><rect x="1163.7" y="1603.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1166.7" y="1614.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.14%)</title><rect x="1163.7" y="1587.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.7" y="1598.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.14%)</title><rect x="1163.7" y="1571.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1166.7" y="1582.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.14%)</title><rect x="1163.7" y="1555.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.7" y="1566.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1165.4" y="1779.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.4" y="1790.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1165.4" y="1763.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.4" y="1774.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1165.4" y="1747.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1168.4" y="1758.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1165.4" y="1731.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.4" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1165.4" y="1715.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.4" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1165.4" y="1699.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.4" y="1710.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1165.4" y="1683.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.4" y="1694.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1165.4" y="1667.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.4" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1165.4" y="1651.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.4" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1165.4" y="1635.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.4" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1165.4" y="1619.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1168.4" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1165.4" y="1603.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.4" y="1614.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1165.4" y="1587.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.4" y="1598.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1165.4" y="1571.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.4" y="1582.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1165.4" y="1555.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.4" y="1566.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1165.4" y="1539.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.4" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1165.4" y="1523.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.4" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1165.4" y="1507.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.4" y="1518.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1165.4" y="1491.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.4" y="1502.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1165.4" y="1475.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.4" y="1486.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1165.4" y="1459.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.4" y="1470.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1165.4" y="1443.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.4" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1165.4" y="1427.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.4" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1165.4" y="1411.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.4" y="1422.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.14%)</title><rect x="1165.4" y="1395.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.4" y="1406.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.14%)</title><rect x="1165.4" y="1379.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.4" y="1390.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.14%)</title><rect x="1165.4" y="1363.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.4" y="1374.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.14%)</title><rect x="1165.4" y="1347.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.4" y="1358.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.14%)</title><rect x="1165.4" y="1331.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.4" y="1342.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.14%)</title><rect x="1165.4" y="1315.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.4" y="1326.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.14%)</title><rect x="1165.4" y="1299.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.4" y="1310.0"></text>
</g>
<g>
<title>AddPNode::Identity(PhaseGVN*) (1 samples, 0.14%)</title><rect x="1165.4" y="1283.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.4" y="1294.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.14%)</title><rect x="1165.4" y="1267.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.4" y="1278.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.14%)</title><rect x="1165.4" y="1251.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.4" y="1262.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.14%)</title><rect x="1167.0" y="1811.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.0" y="1822.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*) (1 samples, 0.14%)</title><rect x="1167.0" y="1795.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.0" y="1806.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.164] (1 samples, 0.14%)</title><rect x="1168.7" y="1859.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.7" y="1870.0"></text>
</g>
<g>
<title>ciObjectFactory::get_empty_methodData() (1 samples, 0.14%)</title><rect x="1168.7" y="1843.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.7" y="1854.0"></text>
</g>
<g>
<title>ciMethodData::ciMethodData() (1 samples, 0.14%)</title><rect x="1168.7" y="1827.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.7" y="1838.0"></text>
</g>
<g>
<title>__strncpy_ssse3 (1 samples, 0.14%)</title><rect x="1168.7" y="1811.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1171.7" y="1822.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.42%)</title><rect x="1170.3" y="1891.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.3" y="1902.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.42%)</title><rect x="1170.3" y="1875.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.3" y="1886.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.42%)</title><rect x="1170.3" y="1859.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.3" y="1870.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.42%)</title><rect x="1170.3" y="1843.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.3" y="1854.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.42%)</title><rect x="1170.3" y="1827.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.3" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.42%)</title><rect x="1170.3" y="1811.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.3" y="1822.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.42%)</title><rect x="1170.3" y="1795.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.3" y="1806.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.42%)</title><rect x="1170.3" y="1779.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.3" y="1790.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.42%)</title><rect x="1170.3" y="1763.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.3" y="1774.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.42%)</title><rect x="1170.3" y="1747.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.3" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.42%)</title><rect x="1170.3" y="1731.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.3" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.42%)</title><rect x="1170.3" y="1715.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.3" y="1726.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.42%)</title><rect x="1170.3" y="1699.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.3" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.28%)</title><rect x="1170.3" y="1683.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.3" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.28%)</title><rect x="1170.3" y="1667.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.3" y="1678.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.28%)</title><rect x="1170.3" y="1651.0" width="3.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.3" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.28%)</title><rect x="1170.3" y="1635.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.3" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.28%)</title><rect x="1170.3" y="1619.0" width="3.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.3" y="1630.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.28%)</title><rect x="1170.3" y="1603.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.3" y="1614.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.28%)</title><rect x="1170.3" y="1587.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.3" y="1598.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.28%)</title><rect x="1170.3" y="1571.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.3" y="1582.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.28%)</title><rect x="1170.3" y="1555.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.3" y="1566.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.28%)</title><rect x="1170.3" y="1539.0" width="3.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.3" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.28%)</title><rect x="1170.3" y="1523.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.3" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.28%)</title><rect x="1170.3" y="1507.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.3" y="1518.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1170.3" y="1491.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.3" y="1502.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1170.3" y="1475.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.3" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1170.3" y="1459.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.3" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1170.3" y="1443.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.3" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1170.3" y="1427.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.3" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1170.3" y="1411.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.3" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1170.3" y="1395.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.3" y="1406.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1170.3" y="1379.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1173.3" y="1390.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1170.3" y="1363.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.3" y="1374.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1170.3" y="1347.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.3" y="1358.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1170.3" y="1331.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.3" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1170.3" y="1315.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.3" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1170.3" y="1299.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.3" y="1310.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1170.3" y="1283.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.3" y="1294.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1170.3" y="1267.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.3" y="1278.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1170.3" y="1251.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.3" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1170.3" y="1235.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.3" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1170.3" y="1219.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1173.3" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1170.3" y="1203.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.3" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1170.3" y="1187.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.3" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1170.3" y="1171.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.3" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1170.3" y="1155.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.3" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1170.3" y="1139.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.3" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1170.3" y="1123.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.3" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1170.3" y="1107.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.3" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1170.3" y="1091.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.3" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1170.3" y="1075.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.3" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1170.3" y="1059.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1173.3" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1170.3" y="1043.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.3" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1170.3" y="1027.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.3" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1170.3" y="1011.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.3" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1170.3" y="995.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.3" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1170.3" y="979.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.3" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1170.3" y="963.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.3" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1170.3" y="947.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.3" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1170.3" y="931.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1170.3" y="915.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.3" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1170.3" y="899.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.3" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1170.3" y="883.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.3" y="894.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.14%)</title><rect x="1170.3" y="867.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1173.3" y="878.0"></text>
</g>
<g>
<title>ConvI2LNode::Value(PhaseGVN*) const (1 samples, 0.14%)</title><rect x="1170.3" y="851.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.3" y="862.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.14%)</title><rect x="1170.3" y="835.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.3" y="846.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.14%)</title><rect x="1170.3" y="819.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.14%)</title><rect x="1171.9" y="1491.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1174.9" y="1502.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.14%)</title><rect x="1171.9" y="1475.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.9" y="1486.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.14%)</title><rect x="1171.9" y="1459.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.9" y="1470.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.14%)</title><rect x="1171.9" y="1443.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.9" y="1454.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.14%)</title><rect x="1171.9" y="1427.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1174.9" y="1438.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.14%)</title><rect x="1171.9" y="1411.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.9" y="1422.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.14%)</title><rect x="1171.9" y="1395.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.9" y="1406.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.14%)</title><rect x="1171.9" y="1379.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.9" y="1390.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields_impl(GrowableArray&lt;ciField*&gt;*) (1 samples, 0.14%)</title><rect x="1171.9" y="1363.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.9" y="1374.0"></text>
</g>
<g>
<title>ciField::ciField(fieldDescriptor*) (1 samples, 0.14%)</title><rect x="1171.9" y="1347.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.9" y="1358.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.14%)</title><rect x="1171.9" y="1331.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.9" y="1342.0"></text>
</g>
<g>
<title>ResourceObj::operator new(unsigned long, Arena*) (1 samples, 0.14%)</title><rect x="1171.9" y="1315.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.9" y="1326.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1173.6" y="1683.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.6" y="1694.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1173.6" y="1667.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.6" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1173.6" y="1651.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.6" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1173.6" y="1635.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.6" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1173.6" y="1619.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.6" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1173.6" y="1603.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.6" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1173.6" y="1587.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.6" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1173.6" y="1571.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.6" y="1582.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1173.6" y="1555.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.6" y="1566.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1173.6" y="1539.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.6" y="1550.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1173.6" y="1523.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.6" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1173.6" y="1507.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.6" y="1518.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.14%)</title><rect x="1173.6" y="1491.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.6" y="1502.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (1 samples, 0.14%)</title><rect x="1173.6" y="1475.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.6" y="1486.0"></text>
</g>
<g>
<title>GraphKit::combine_exception_states(SafePointNode*, SafePointNode*) (1 samples, 0.14%)</title><rect x="1173.6" y="1459.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.6" y="1470.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.14%)</title><rect x="1173.6" y="1443.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.6" y="1454.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.14%)</title><rect x="1175.2" y="1907.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.2" y="1918.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.14%)</title><rect x="1175.2" y="1891.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.2" y="1902.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.14%)</title><rect x="1175.2" y="1875.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.2" y="1886.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.14%)</title><rect x="1175.2" y="1859.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.2" y="1870.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.14%)</title><rect x="1175.2" y="1843.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.2" y="1854.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.14%)</title><rect x="1175.2" y="1827.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.2" y="1838.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.14%)</title><rect x="1175.2" y="1811.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.2" y="1822.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.14%)</title><rect x="1175.2" y="1795.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.2" y="1806.0"></text>
</g>
<g>
<title>ciField::ciField(fieldDescriptor*) (1 samples, 0.14%)</title><rect x="1175.2" y="1779.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.2" y="1790.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.14%)</title><rect x="1176.9" y="1955.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.9" y="1966.0"></text>
</g>
<g>
<title>GraphKit::use_exception_state(SafePointNode*) (1 samples, 0.14%)</title><rect x="1176.9" y="1939.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.9" y="1950.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.14%)</title><rect x="1176.9" y="1923.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.9" y="1934.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.14%)</title><rect x="1176.9" y="1907.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.9" y="1918.0"></text>
</g>
<g>
<title>PhiNode::unique_input(PhaseTransform*, bool) (1 samples, 0.14%)</title><rect x="1176.9" y="1891.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.9" y="1902.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (3 samples, 0.42%)</title><rect x="1178.5" y="1987.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.5" y="1998.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (2 samples, 0.28%)</title><rect x="1178.5" y="1971.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.5" y="1982.0"></text>
</g>
<g>
<title>Compile::update_dead_node_list(Unique_Node_List&amp;) (1 samples, 0.14%)</title><rect x="1181.8" y="1971.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.8" y="1982.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.14%)</title><rect x="1183.4" y="1987.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.4" y="1998.0"></text>
</g>
<g>
<title>TypeTuple::make_range(ciSignature*) (1 samples, 0.14%)</title><rect x="1183.4" y="1971.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.4" y="1982.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.14%)</title><rect x="1183.4" y="1955.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.4" y="1966.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.14%)</title><rect x="1185.1" y="1987.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.1" y="1998.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.14%)</title><rect x="1185.1" y="1971.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.1" y="1982.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.14%)</title><rect x="1185.1" y="1955.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.1" y="1966.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (1 samples, 0.14%)</title><rect x="1185.1" y="1939.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.1" y="1950.0"></text>
</g>
<g>
<title>CodeBuffer::relocate_code_to(CodeBuffer*) const (1 samples, 0.14%)</title><rect x="1185.1" y="1923.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.1" y="1934.0"></text>
</g>
<g>
<title>CallRelocation::fix_relocation_after_move(CodeBuffer const*, CodeBuffer*) (1 samples, 0.14%)</title><rect x="1185.1" y="1907.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.1" y="1918.0"></text>
</g>
<g>
<title>Relocation::pd_call_destination(unsigned char*) (1 samples, 0.14%)</title><rect x="1185.1" y="1891.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.1" y="1902.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.14%)</title><rect x="1186.7" y="2035.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.7" y="2046.0"></text>
</g>
<g>
<title>__GI_sysinfo (1 samples, 0.14%)</title><rect x="1186.7" y="2019.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1189.7" y="2030.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.14%)</title><rect x="1188.4" y="2051.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.4" y="2062.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.14%)</title><rect x="1188.4" y="2035.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.4" y="2046.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.14%)</title><rect x="1188.4" y="2019.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.4" y="2030.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.14%)</title><rect x="1188.4" y="2003.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.4" y="2014.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.14%)</title><rect x="1188.4" y="1987.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.4" y="1998.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.14%)</title><rect x="1188.4" y="1971.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.4" y="1982.0"></text>
</g>
</g>
</svg>
