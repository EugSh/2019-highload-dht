<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (211,624 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (122,411 samples, 57.84%)</title><rect x="10.0" y="803.0" width="682.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (122,411 samples, 57.84%)</title><rect x="10.0" y="787.0" width="682.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (122,411 samples, 57.84%)</title><rect x="10.0" y="771.0" width="682.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (32,328 samples, 15.28%)</title><rect x="10.0" y="755.0" width="180.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/Co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (32,328 samples, 15.28%)</title><rect x="10.0" y="739.0" width="180.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurrent/Co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (32,328 samples, 15.28%)</title><rect x="10.0" y="723.0" width="180.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/concurrent/Co..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (157 samples, 0.07%)</title><rect x="10.0" y="707.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1363122709.apply (32,164 samples, 15.20%)</title><rect x="10.9" y="707.0" width="179.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.9" y="718.0">jdk/internal/net/http/M..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (32,164 samples, 15.20%)</title><rect x="10.9" y="691.0" width="179.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.9" y="702.0">jdk/internal/net/http/M..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (32,164 samples, 15.20%)</title><rect x="10.9" y="675.0" width="179.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.9" y="686.0">jdk/internal/net/http/M..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (186 samples, 0.09%)</title><rect x="10.9" y="659.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (186 samples, 0.09%)</title><rect x="10.9" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$226/1434925187.get$Lambda (101 samples, 0.05%)</title><rect x="10.9" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$226 (101 samples, 0.05%)</title><rect x="10.9" y="611.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$227/204842730.get$Lambda (85 samples, 0.04%)</title><rect x="11.5" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$227 (85 samples, 0.04%)</title><rect x="11.5" y="611.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="14.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (333 samples, 0.16%)</title><rect x="11.9" y="659.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (333 samples, 0.16%)</title><rect x="11.9" y="643.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (191 samples, 0.09%)</title><rect x="11.9" y="627.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="14.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (142 samples, 0.07%)</title><rect x="13.0" y="627.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (142 samples, 0.07%)</title><rect x="13.0" y="611.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (142 samples, 0.07%)</title><rect x="13.0" y="595.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="16.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (639 samples, 0.30%)</title><rect x="13.8" y="659.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (639 samples, 0.30%)</title><rect x="13.8" y="643.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (340 samples, 0.16%)</title><rect x="13.8" y="627.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="16.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (299 samples, 0.14%)</title><rect x="15.7" y="627.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (299 samples, 0.14%)</title><rect x="15.7" y="611.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (299 samples, 0.14%)</title><rect x="15.7" y="595.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="18.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (29,846 samples, 14.10%)</title><rect x="17.4" y="659.0" width="166.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.4" y="670.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (29,846 samples, 14.10%)</title><rect x="17.4" y="643.0" width="166.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.4" y="654.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (29,846 samples, 14.10%)</title><rect x="17.4" y="627.0" width="166.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.4" y="638.0">jdk/internal/net/http..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (318 samples, 0.15%)</title><rect x="17.4" y="611.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (318 samples, 0.15%)</title><rect x="17.4" y="595.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/2028322477.get$Lambda (83 samples, 0.04%)</title><rect x="17.4" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$140 (83 samples, 0.04%)</title><rect x="17.4" y="563.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="20.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$141/645165584.get$Lambda (127 samples, 0.06%)</title><rect x="17.8" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$141 (127 samples, 0.06%)</title><rect x="17.8" y="563.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="20.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$199/914405917.get$Lambda (108 samples, 0.05%)</title><rect x="18.5" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$199 (108 samples, 0.05%)</title><rect x="18.5" y="563.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="21.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (18,668 samples, 8.82%)</title><rect x="19.1" y="611.0" width="104.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.1" y="622.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (18,668 samples, 8.82%)</title><rect x="19.1" y="595.0" width="104.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.1" y="606.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (18,496 samples, 8.74%)</title><rect x="19.1" y="579.0" width="103.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.1" y="590.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$199/914405917.apply (18,496 samples, 8.74%)</title><rect x="19.1" y="563.0" width="103.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.1" y="574.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (18,496 samples, 8.74%)</title><rect x="19.1" y="547.0" width="103.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.1" y="558.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (18,496 samples, 8.74%)</title><rect x="19.1" y="531.0" width="103.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.1" y="542.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$141/645165584.apply (18,496 samples, 8.74%)</title><rect x="19.1" y="515.0" width="103.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.1" y="526.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (18,496 samples, 8.74%)</title><rect x="19.1" y="499.0" width="103.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.1" y="510.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (116 samples, 0.05%)</title><rect x="19.1" y="483.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (116 samples, 0.05%)</title><rect x="19.1" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$225/1863770038.get$Lambda (116 samples, 0.05%)</title><rect x="19.1" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$225 (116 samples, 0.05%)</title><rect x="19.1" y="435.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="22.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (426 samples, 0.20%)</title><rect x="19.8" y="483.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (426 samples, 0.20%)</title><rect x="19.8" y="467.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (208 samples, 0.10%)</title><rect x="19.8" y="451.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="22.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (75 samples, 0.04%)</title><rect x="20.9" y="451.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$225/1863770038.apply (75 samples, 0.04%)</title><rect x="20.9" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (75 samples, 0.04%)</title><rect x="20.9" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (75 samples, 0.04%)</title><rect x="20.9" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/2028322477.apply (75 samples, 0.04%)</title><rect x="20.9" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (75 samples, 0.04%)</title><rect x="20.9" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (66 samples, 0.03%)</title><rect x="21.0" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (143 samples, 0.07%)</title><rect x="21.4" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (143 samples, 0.07%)</title><rect x="21.4" y="435.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (143 samples, 0.07%)</title><rect x="21.4" y="419.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="24.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (364 samples, 0.17%)</title><rect x="22.1" y="483.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (364 samples, 0.17%)</title><rect x="22.1" y="467.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (199 samples, 0.09%)</title><rect x="22.1" y="451.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="25.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (162 samples, 0.08%)</title><rect x="23.3" y="451.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (162 samples, 0.08%)</title><rect x="23.3" y="435.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (162 samples, 0.08%)</title><rect x="23.3" y="419.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="26.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (17,590 samples, 8.31%)</title><rect x="24.2" y="483.0" width="98.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.2" y="494.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (182 samples, 0.09%)</title><rect x="24.2" y="467.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (182 samples, 0.09%)</title><rect x="24.2" y="451.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$222/1778605473.get$Lambda (85 samples, 0.04%)</title><rect x="24.2" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$222 (85 samples, 0.04%)</title><rect x="24.2" y="419.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="27.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$224/1502270455.get$Lambda (97 samples, 0.05%)</title><rect x="24.7" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$224 (97 samples, 0.05%)</title><rect x="24.7" y="419.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="27.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (14,960 samples, 7.07%)</title><rect x="25.2" y="467.0" width="83.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.2" y="478.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (14,960 samples, 7.07%)</title><rect x="25.2" y="451.0" width="83.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.2" y="462.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (144 samples, 0.07%)</title><rect x="25.2" y="435.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="28.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$222/1778605473.apply (14,500 samples, 6.85%)</title><rect x="26.0" y="435.0" width="80.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.0" y="446.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (14,500 samples, 6.85%)</title><rect x="26.0" y="419.0" width="80.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.0" y="430.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.03%)</title><rect x="26.0" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.03%)</title><rect x="26.0" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$235/958175399.get$Lambda (63 samples, 0.03%)</title><rect x="26.0" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$235 (63 samples, 0.03%)</title><rect x="26.0" y="355.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="29.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (367 samples, 0.17%)</title><rect x="26.3" y="403.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (367 samples, 0.17%)</title><rect x="26.3" y="387.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (206 samples, 0.10%)</title><rect x="26.3" y="371.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="29.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (161 samples, 0.08%)</title><rect x="27.5" y="371.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (161 samples, 0.08%)</title><rect x="27.5" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (161 samples, 0.08%)</title><rect x="27.5" y="339.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="30.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (155 samples, 0.07%)</title><rect x="28.4" y="403.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="31.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (254 samples, 0.12%)</title><rect x="29.3" y="403.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (131 samples, 0.06%)</title><rect x="29.3" y="387.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="32.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (123 samples, 0.06%)</title><rect x="30.0" y="387.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (111 samples, 0.05%)</title><rect x="30.0" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="33.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (111 samples, 0.05%)</title><rect x="30.0" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (111 samples, 0.05%)</title><rect x="30.0" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (111 samples, 0.05%)</title><rect x="30.0" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (111 samples, 0.05%)</title><rect x="30.0" y="307.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="33.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (398 samples, 0.19%)</title><rect x="30.7" y="403.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (398 samples, 0.19%)</title><rect x="30.7" y="387.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (112 samples, 0.05%)</title><rect x="30.7" y="371.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (112 samples, 0.05%)</title><rect x="30.7" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (112 samples, 0.05%)</title><rect x="30.7" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (112 samples, 0.05%)</title><rect x="30.7" y="323.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="33.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (286 samples, 0.14%)</title><rect x="31.3" y="371.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (286 samples, 0.14%)</title><rect x="31.3" y="355.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (206 samples, 0.10%)</title><rect x="31.3" y="339.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="34.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (80 samples, 0.04%)</title><rect x="32.4" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="35.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (80 samples, 0.04%)</title><rect x="32.4" y="323.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="35.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (13,263 samples, 6.27%)</title><rect x="32.9" y="403.0" width="73.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.9" y="414.0">jdk/inte..</text>
</g>
<g>
<title>java.lang.StringBuilder (106 samples, 0.05%)</title><rect x="32.9" y="387.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="35.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (147 samples, 0.07%)</title><rect x="33.5" y="387.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.5" y="398.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.03%)</title><rect x="33.5" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="36.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (79 samples, 0.04%)</title><rect x="33.9" y="371.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="36.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,281 samples, 0.61%)</title><rect x="34.3" y="387.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,281 samples, 0.61%)</title><rect x="34.3" y="371.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1,281 samples, 0.61%)</title><rect x="34.3" y="355.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.3" y="366.0"></text>
</g>
<g>
<title>byte[] (1,281 samples, 0.61%)</title><rect x="34.3" y="339.0" width="7.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="37.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (386 samples, 0.18%)</title><rect x="41.4" y="387.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.4" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (386 samples, 0.18%)</title><rect x="41.4" y="371.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.4" y="382.0"></text>
</g>
<g>
<title>byte[] (386 samples, 0.18%)</title><rect x="41.4" y="355.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="44.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,400 samples, 0.66%)</title><rect x="43.6" y="387.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="46.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,400 samples, 0.66%)</title><rect x="43.6" y="371.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.6" y="382.0"></text>
</g>
<g>
<title>java.lang.String (104 samples, 0.05%)</title><rect x="43.6" y="355.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="46.6" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,296 samples, 0.61%)</title><rect x="44.2" y="355.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.2" y="366.0"></text>
</g>
<g>
<title>byte[] (1,296 samples, 0.61%)</title><rect x="44.2" y="339.0" width="7.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="47.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (237 samples, 0.11%)</title><rect x="51.4" y="387.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (237 samples, 0.11%)</title><rect x="51.4" y="371.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.4" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (237 samples, 0.11%)</title><rect x="51.4" y="355.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="54.4" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (96 samples, 0.05%)</title><rect x="52.7" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.7" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (96 samples, 0.05%)</title><rect x="52.7" y="371.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="55.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (7,984 samples, 3.77%)</title><rect x="53.3" y="387.0" width="44.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.3" y="398.0">jdk/..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (105 samples, 0.05%)</title><rect x="53.3" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (105 samples, 0.05%)</title><rect x="53.3" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (105 samples, 0.05%)</title><rect x="53.3" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.3" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$239/165369205.get$Lambda (105 samples, 0.05%)</title><rect x="53.3" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.3" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$239 (105 samples, 0.05%)</title><rect x="53.3" y="307.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="56.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (4,059 samples, 1.92%)</title><rect x="53.8" y="371.0" width="22.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.8" y="382.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (2,067 samples, 0.98%)</title><rect x="53.8" y="355.0" width="11.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.8" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2,067 samples, 0.98%)</title><rect x="53.8" y="339.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.8" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2,067 samples, 0.98%)</title><rect x="53.8" y="323.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,067 samples, 0.98%)</title><rect x="53.8" y="307.0" width="11.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="56.8" y="318.0"></text>
</g>
<g>
<title>byte[] (2,067 samples, 0.98%)</title><rect x="53.8" y="291.0" width="11.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="56.8" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (278 samples, 0.13%)</title><rect x="65.4" y="355.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.4" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (278 samples, 0.13%)</title><rect x="65.4" y="339.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (278 samples, 0.13%)</title><rect x="65.4" y="323.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (278 samples, 0.13%)</title><rect x="65.4" y="307.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="68.4" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (322 samples, 0.15%)</title><rect x="66.9" y="355.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.9" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (168 samples, 0.08%)</title><rect x="66.9" y="339.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="69.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (154 samples, 0.07%)</title><rect x="67.9" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.9" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (154 samples, 0.07%)</title><rect x="67.9" y="323.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="70.9" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$239/165369205.test (1,392 samples, 0.66%)</title><rect x="68.7" y="355.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.7" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1,392 samples, 0.66%)</title><rect x="68.7" y="339.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$84/1600667055.test (1,392 samples, 0.66%)</title><rect x="68.7" y="323.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1,392 samples, 0.66%)</title><rect x="68.7" y="307.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.7" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$73/1442191055.test (1,392 samples, 0.66%)</title><rect x="68.7" y="291.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.7" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1,392 samples, 0.66%)</title><rect x="68.7" y="275.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$72/1016363973.test (1,392 samples, 0.66%)</title><rect x="68.7" y="259.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1,392 samples, 0.66%)</title><rect x="68.7" y="243.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.7" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,392 samples, 0.66%)</title><rect x="68.7" y="227.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,392 samples, 0.66%)</title><rect x="68.7" y="211.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.7" y="222.0"></text>
</g>
<g>
<title>java.lang.String (686 samples, 0.32%)</title><rect x="68.7" y="195.0" width="3.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="71.7" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (706 samples, 0.33%)</title><rect x="72.5" y="195.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.5" y="206.0"></text>
</g>
<g>
<title>byte[] (706 samples, 0.33%)</title><rect x="72.5" y="179.0" width="4.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="75.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (3,820 samples, 1.81%)</title><rect x="76.5" y="371.0" width="21.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.5" y="382.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3,820 samples, 1.81%)</title><rect x="76.5" y="355.0" width="21.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.5" y="366.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3,820 samples, 1.81%)</title><rect x="76.5" y="339.0" width="21.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.5" y="350.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (93 samples, 0.04%)</title><rect x="76.5" y="323.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="79.5" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (120 samples, 0.06%)</title><rect x="77.0" y="323.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="80.0" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (228 samples, 0.11%)</title><rect x="77.7" y="323.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="80.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (75 samples, 0.04%)</title><rect x="78.9" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="81.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (146 samples, 0.07%)</title><rect x="79.4" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (146 samples, 0.07%)</title><rect x="79.4" y="307.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.4" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/2069775835.get$Lambda (146 samples, 0.07%)</title><rect x="79.4" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.4" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$119 (146 samples, 0.07%)</title><rect x="79.4" y="275.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="82.4" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (158 samples, 0.07%)</title><rect x="80.2" y="323.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.2" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (158 samples, 0.07%)</title><rect x="80.2" y="307.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="83.2" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,785 samples, 1.32%)</title><rect x="81.1" y="323.0" width="15.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.1" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/2069775835.accept (2,785 samples, 1.32%)</title><rect x="81.1" y="307.0" width="15.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.1" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,785 samples, 1.32%)</title><rect x="81.1" y="291.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (277 samples, 0.13%)</title><rect x="81.1" y="275.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.1" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1045516625.accept (277 samples, 0.13%)</title><rect x="81.1" y="259.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.1" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (277 samples, 0.13%)</title><rect x="81.1" y="243.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.1" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (277 samples, 0.13%)</title><rect x="81.1" y="227.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.1" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (277 samples, 0.13%)</title><rect x="81.1" y="211.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.1" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (277 samples, 0.13%)</title><rect x="81.1" y="195.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.1" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (277 samples, 0.13%)</title><rect x="81.1" y="179.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.1" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (277 samples, 0.13%)</title><rect x="81.1" y="163.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.1" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (277 samples, 0.13%)</title><rect x="81.1" y="147.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="84.1" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,373 samples, 0.65%)</title><rect x="82.6" y="275.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.6" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,373 samples, 0.65%)</title><rect x="82.6" y="259.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.6" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (715 samples, 0.34%)</title><rect x="82.6" y="243.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.6" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (715 samples, 0.34%)</title><rect x="82.6" y="227.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.6" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (715 samples, 0.34%)</title><rect x="82.6" y="211.0" width="4.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="85.6" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (658 samples, 0.31%)</title><rect x="86.6" y="243.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="89.6" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (658 samples, 0.31%)</title><rect x="86.6" y="227.0" width="3.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="89.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,135 samples, 0.54%)</title><rect x="90.3" y="275.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.3" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,135 samples, 0.54%)</title><rect x="90.3" y="259.0" width="6.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="93.3" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (215 samples, 0.10%)</title><rect x="96.6" y="323.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (215 samples, 0.10%)</title><rect x="96.6" y="307.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="99.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (378 samples, 0.18%)</title><rect x="97.8" y="387.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (119 samples, 0.06%)</title><rect x="97.8" y="371.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.8" y="382.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.06%)</title><rect x="97.8" y="355.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="100.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (259 samples, 0.12%)</title><rect x="98.4" y="371.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (259 samples, 0.12%)</title><rect x="98.4" y="355.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1125736023.invoke (259 samples, 0.12%)</title><rect x="98.4" y="339.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (259 samples, 0.12%)</title><rect x="98.4" y="323.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (121 samples, 0.06%)</title><rect x="98.4" y="307.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.4" y="318.0"></text>
</g>
<g>
<title>java.lang.String (121 samples, 0.06%)</title><rect x="98.4" y="291.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="101.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (138 samples, 0.07%)</title><rect x="99.1" y="307.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (138 samples, 0.07%)</title><rect x="99.1" y="291.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.1" y="302.0"></text>
</g>
<g>
<title>byte[] (138 samples, 0.07%)</title><rect x="99.1" y="275.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="102.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (399 samples, 0.19%)</title><rect x="99.9" y="387.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (399 samples, 0.19%)</title><rect x="99.9" y="371.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (399 samples, 0.19%)</title><rect x="99.9" y="355.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (399 samples, 0.19%)</title><rect x="99.9" y="339.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1125736023.invoke (399 samples, 0.19%)</title><rect x="99.9" y="323.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (399 samples, 0.19%)</title><rect x="99.9" y="307.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (117 samples, 0.06%)</title><rect x="99.9" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (117 samples, 0.06%)</title><rect x="99.9" y="275.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="102.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (282 samples, 0.13%)</title><rect x="100.5" y="291.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (282 samples, 0.13%)</title><rect x="100.5" y="275.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.5" y="286.0"></text>
</g>
<g>
<title>byte[] (282 samples, 0.13%)</title><rect x="100.5" y="259.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="103.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (849 samples, 0.40%)</title><rect x="102.1" y="387.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.1" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (227 samples, 0.11%)</title><rect x="102.1" y="371.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="105.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (216 samples, 0.10%)</title><rect x="103.4" y="371.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.4" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (216 samples, 0.10%)</title><rect x="103.4" y="355.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="106.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (406 samples, 0.19%)</title><rect x="104.6" y="371.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.6" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (406 samples, 0.19%)</title><rect x="104.6" y="355.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="107.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (316 samples, 0.15%)</title><rect x="106.8" y="435.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (316 samples, 0.15%)</title><rect x="106.8" y="419.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (316 samples, 0.15%)</title><rect x="106.8" y="403.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="109.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (427 samples, 0.20%)</title><rect x="108.6" y="467.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="111.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (158 samples, 0.07%)</title><rect x="111.0" y="467.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="114.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1,863 samples, 0.88%)</title><rect x="111.9" y="467.0" width="10.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (167 samples, 0.08%)</title><rect x="111.9" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (167 samples, 0.08%)</title><rect x="111.9" y="435.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$206/322028543.get$Lambda (74 samples, 0.03%)</title><rect x="111.9" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$206 (74 samples, 0.03%)</title><rect x="111.9" y="403.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="114.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$208/1349698978.get$Lambda (93 samples, 0.04%)</title><rect x="112.3" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$208 (93 samples, 0.04%)</title><rect x="112.3" y="403.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="115.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (189 samples, 0.09%)</title><rect x="112.8" y="451.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="115.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (169 samples, 0.08%)</title><rect x="113.9" y="451.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="116.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (182 samples, 0.09%)</title><rect x="114.8" y="451.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="117.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (480 samples, 0.23%)</title><rect x="115.8" y="451.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (480 samples, 0.23%)</title><rect x="115.8" y="435.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (480 samples, 0.23%)</title><rect x="115.8" y="419.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (480 samples, 0.23%)</title><rect x="115.8" y="403.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (480 samples, 0.23%)</title><rect x="115.8" y="387.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (480 samples, 0.23%)</title><rect x="115.8" y="371.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$195/1248606720.run (480 samples, 0.23%)</title><rect x="115.8" y="355.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (480 samples, 0.23%)</title><rect x="115.8" y="339.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (480 samples, 0.23%)</title><rect x="115.8" y="323.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (158 samples, 0.07%)</title><rect x="115.8" y="307.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (158 samples, 0.07%)</title><rect x="115.8" y="291.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$211/1172666604.get$Lambda (60 samples, 0.03%)</title><rect x="115.8" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$211 (60 samples, 0.03%)</title><rect x="115.8" y="259.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="118.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$213/938821665.get$Lambda (98 samples, 0.05%)</title><rect x="116.1" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$213 (98 samples, 0.05%)</title><rect x="116.1" y="259.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="119.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (144 samples, 0.07%)</title><rect x="116.7" y="307.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="119.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (178 samples, 0.08%)</title><rect x="117.5" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (178 samples, 0.08%)</title><rect x="117.5" y="291.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (63 samples, 0.03%)</title><rect x="117.5" y="275.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="120.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (115 samples, 0.05%)</title><rect x="117.8" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.8" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (115 samples, 0.05%)</title><rect x="117.8" y="259.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="120.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (526 samples, 0.25%)</title><rect x="118.5" y="451.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.5" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (105 samples, 0.05%)</title><rect x="118.5" y="435.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="121.5" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (253 samples, 0.12%)</title><rect x="119.1" y="435.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="122.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (168 samples, 0.08%)</title><rect x="120.5" y="435.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.5" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (168 samples, 0.08%)</title><rect x="120.5" y="419.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.5" y="430.0"></text>
</g>
<g>
<title>byte[] (168 samples, 0.08%)</title><rect x="120.5" y="403.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="123.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (150 samples, 0.07%)</title><rect x="121.4" y="451.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (150 samples, 0.07%)</title><rect x="121.4" y="435.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="124.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (172 samples, 0.08%)</title><rect x="122.3" y="579.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (172 samples, 0.08%)</title><rect x="122.3" y="563.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (172 samples, 0.08%)</title><rect x="122.3" y="547.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="125.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (318 samples, 0.15%)</title><rect x="123.2" y="611.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (318 samples, 0.15%)</title><rect x="123.2" y="595.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (173 samples, 0.08%)</title><rect x="123.2" y="579.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="126.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (145 samples, 0.07%)</title><rect x="124.2" y="579.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (145 samples, 0.07%)</title><rect x="124.2" y="563.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (145 samples, 0.07%)</title><rect x="124.2" y="547.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="127.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (10,542 samples, 4.98%)</title><rect x="125.0" y="611.0" width="58.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.0" y="622.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (155 samples, 0.07%)</title><rect x="125.0" y="595.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (155 samples, 0.07%)</title><rect x="125.0" y="579.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="128.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/570220601.get$Lambda (98 samples, 0.05%)</title><rect x="125.0" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$197 (98 samples, 0.05%)</title><rect x="125.0" y="547.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="128.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$198/1435528038.get$Lambda (57 samples, 0.03%)</title><rect x="125.5" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$198 (57 samples, 0.03%)</title><rect x="125.5" y="547.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="128.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (299 samples, 0.14%)</title><rect x="125.9" y="595.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (299 samples, 0.14%)</title><rect x="125.9" y="579.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$198/1435528038.apply (145 samples, 0.07%)</title><rect x="125.9" y="563.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (145 samples, 0.07%)</title><rect x="125.9" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (145 samples, 0.07%)</title><rect x="125.9" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (145 samples, 0.07%)</title><rect x="125.9" y="515.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="128.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (154 samples, 0.07%)</title><rect x="126.7" y="563.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (154 samples, 0.07%)</title><rect x="126.7" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (154 samples, 0.07%)</title><rect x="126.7" y="531.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="129.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (143 samples, 0.07%)</title><rect x="127.5" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (143 samples, 0.07%)</title><rect x="127.5" y="579.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (143 samples, 0.07%)</title><rect x="127.5" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (143 samples, 0.07%)</title><rect x="127.5" y="547.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (143 samples, 0.07%)</title><rect x="127.5" y="531.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="130.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (9,945 samples, 4.70%)</title><rect x="128.3" y="595.0" width="55.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.3" y="606.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (118 samples, 0.06%)</title><rect x="128.3" y="579.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="131.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (118 samples, 0.06%)</title><rect x="128.3" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$152/990300935.get$Lambda (118 samples, 0.06%)</title><rect x="128.3" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$152 (118 samples, 0.06%)</title><rect x="128.3" y="531.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="131.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (9,182 samples, 4.34%)</title><rect x="129.0" y="579.0" width="51.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.0" y="590.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9,182 samples, 4.34%)</title><rect x="129.0" y="563.0" width="51.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.0" y="574.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9,034 samples, 4.27%)</title><rect x="129.0" y="547.0" width="50.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.0" y="558.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$152/990300935.apply (9,034 samples, 4.27%)</title><rect x="129.0" y="531.0" width="50.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.0" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (9,034 samples, 4.27%)</title><rect x="129.0" y="515.0" width="50.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.0" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (9,034 samples, 4.27%)</title><rect x="129.0" y="499.0" width="50.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.0" y="510.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (73 samples, 0.03%)</title><rect x="129.0" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.03%)</title><rect x="129.0" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$196/1298608119.get$Lambda (73 samples, 0.03%)</title><rect x="129.0" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$196 (73 samples, 0.03%)</title><rect x="129.0" y="435.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="132.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3,783 samples, 1.79%)</title><rect x="129.4" y="483.0" width="21.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.4" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3,783 samples, 1.79%)</title><rect x="129.4" y="467.0" width="21.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.4" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (3,783 samples, 1.79%)</title><rect x="129.4" y="451.0" width="21.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.4" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$196/1298608119.apply (3,572 samples, 1.69%)</title><rect x="129.4" y="435.0" width="19.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (3,572 samples, 1.69%)</title><rect x="129.4" y="419.0" width="19.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (3,572 samples, 1.69%)</title><rect x="129.4" y="403.0" width="19.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (3,572 samples, 1.69%)</title><rect x="129.4" y="387.0" width="19.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2,322 samples, 1.10%)</title><rect x="129.4" y="371.0" width="12.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="132.4" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (644 samples, 0.30%)</title><rect x="129.4" y="355.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="132.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.06%)</title><rect x="129.4" y="339.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="132.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (267 samples, 0.13%)</title><rect x="130.0" y="339.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.0" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (267 samples, 0.13%)</title><rect x="130.0" y="323.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.0" y="334.0"></text>
</g>
<g>
<title>byte[] (267 samples, 0.13%)</title><rect x="130.0" y="307.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="133.0" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (258 samples, 0.12%)</title><rect x="131.5" y="339.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.5" y="350.0"></text>
</g>
<g>
<title>byte[] (258 samples, 0.12%)</title><rect x="131.5" y="323.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="134.5" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (96 samples, 0.05%)</title><rect x="133.0" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.0" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (96 samples, 0.05%)</title><rect x="133.0" y="339.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="136.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1,125 samples, 0.53%)</title><rect x="133.5" y="355.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (122 samples, 0.06%)</title><rect x="133.5" y="339.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="136.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (788 samples, 0.37%)</title><rect x="134.2" y="339.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (788 samples, 0.37%)</title><rect x="134.2" y="323.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/673068808.linkToTargetMethod (566 samples, 0.27%)</title><rect x="134.2" y="307.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (566 samples, 0.27%)</title><rect x="134.2" y="291.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="137.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/1019298652.get$Lambda (566 samples, 0.27%)</title><rect x="134.2" y="275.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$68 (566 samples, 0.27%)</title><rect x="134.2" y="259.0" width="3.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="137.2" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (222 samples, 0.10%)</title><rect x="137.3" y="307.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/1019298652.run (222 samples, 0.10%)</title><rect x="137.3" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (222 samples, 0.10%)</title><rect x="137.3" y="275.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="140.3" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (222 samples, 0.10%)</title><rect x="137.3" y="259.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.3" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (222 samples, 0.10%)</title><rect x="137.3" y="243.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.3" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (222 samples, 0.10%)</title><rect x="137.3" y="227.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="140.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (215 samples, 0.10%)</title><rect x="138.6" y="339.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (215 samples, 0.10%)</title><rect x="138.6" y="323.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.6" y="334.0"></text>
</g>
<g>
<title>int[] (215 samples, 0.10%)</title><rect x="138.6" y="307.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="141.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (457 samples, 0.22%)</title><rect x="139.8" y="355.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.8" y="366.0"></text>
</g>
<g>
<title>byte[] (223 samples, 0.11%)</title><rect x="139.8" y="339.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="142.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (234 samples, 0.11%)</title><rect x="141.0" y="339.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (234 samples, 0.11%)</title><rect x="141.0" y="323.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="144.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (234 samples, 0.11%)</title><rect x="141.0" y="307.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="144.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,250 samples, 0.59%)</title><rect x="142.3" y="371.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.3" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (306 samples, 0.14%)</title><rect x="142.3" y="355.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="145.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (348 samples, 0.16%)</title><rect x="144.0" y="355.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (348 samples, 0.16%)</title><rect x="144.0" y="339.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="147.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (596 samples, 0.28%)</title><rect x="146.0" y="355.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.0" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (596 samples, 0.28%)</title><rect x="146.0" y="339.0" width="3.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="149.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (211 samples, 0.10%)</title><rect x="149.3" y="435.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (211 samples, 0.10%)</title><rect x="149.3" y="419.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="152.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (211 samples, 0.10%)</title><rect x="149.3" y="403.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="152.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (5,178 samples, 2.45%)</title><rect x="150.5" y="483.0" width="28.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.5" y="494.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (424 samples, 0.20%)</title><rect x="150.5" y="467.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="153.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (4,608 samples, 2.18%)</title><rect x="152.8" y="467.0" width="25.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.8" y="478.0">j..</text>
</g>
<g>
<title>java.lang.Object (74 samples, 0.03%)</title><rect x="152.8" y="451.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="155.8" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (143 samples, 0.07%)</title><rect x="153.3" y="451.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="156.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (108 samples, 0.05%)</title><rect x="154.1" y="451.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="157.1" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (230 samples, 0.11%)</title><rect x="154.7" y="451.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (230 samples, 0.11%)</title><rect x="154.7" y="435.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.7" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (230 samples, 0.11%)</title><rect x="154.7" y="419.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="157.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (134 samples, 0.06%)</title><rect x="155.9" y="451.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (134 samples, 0.06%)</title><rect x="155.9" y="435.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="158.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (336 samples, 0.16%)</title><rect x="156.7" y="451.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="159.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (230 samples, 0.11%)</title><rect x="158.6" y="451.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="161.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (261 samples, 0.12%)</title><rect x="159.8" y="451.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="162.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (271 samples, 0.13%)</title><rect x="161.3" y="451.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="164.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1,453 samples, 0.69%)</title><rect x="162.8" y="451.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (120 samples, 0.06%)</title><rect x="162.8" y="435.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="165.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (77 samples, 0.04%)</title><rect x="163.5" y="435.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="166.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (115 samples, 0.05%)</title><rect x="163.9" y="435.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="166.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (76 samples, 0.04%)</title><rect x="164.5" y="435.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="167.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.04%)</title><rect x="165.0" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.04%)</title><rect x="165.0" y="419.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="168.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$195/1248606720.get$Lambda (82 samples, 0.04%)</title><rect x="165.0" y="403.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="168.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$195 (82 samples, 0.04%)</title><rect x="165.0" y="387.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="168.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (112 samples, 0.05%)</title><rect x="165.4" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (112 samples, 0.05%)</title><rect x="165.4" y="419.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="168.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (105 samples, 0.05%)</title><rect x="166.1" y="435.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="169.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (152 samples, 0.07%)</title><rect x="166.6" y="435.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="169.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (614 samples, 0.29%)</title><rect x="167.5" y="435.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (127 samples, 0.06%)</title><rect x="167.5" y="419.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="170.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (164 samples, 0.08%)</title><rect x="168.2" y="419.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="171.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (85 samples, 0.04%)</title><rect x="169.1" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.1" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (85 samples, 0.04%)</title><rect x="169.1" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="172.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (238 samples, 0.11%)</title><rect x="169.6" y="419.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (69 samples, 0.03%)</title><rect x="169.6" y="403.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="172.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (87 samples, 0.04%)</title><rect x="170.0" y="403.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="173.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (82 samples, 0.04%)</title><rect x="170.5" y="403.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="173.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (855 samples, 0.40%)</title><rect x="170.9" y="451.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (69 samples, 0.03%)</title><rect x="170.9" y="435.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="173.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (59 samples, 0.03%)</title><rect x="171.3" y="435.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="174.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (64 samples, 0.03%)</title><rect x="171.6" y="435.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="174.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (108 samples, 0.05%)</title><rect x="172.0" y="435.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (108 samples, 0.05%)</title><rect x="172.0" y="419.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="175.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (555 samples, 0.26%)</title><rect x="172.6" y="435.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (101 samples, 0.05%)</title><rect x="172.6" y="419.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="175.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (140 samples, 0.07%)</title><rect x="173.1" y="419.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="176.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (70 samples, 0.03%)</title><rect x="173.9" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.9" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (70 samples, 0.03%)</title><rect x="173.9" y="403.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="176.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (244 samples, 0.12%)</title><rect x="174.3" y="419.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="177.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (74 samples, 0.03%)</title><rect x="174.3" y="403.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="177.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (82 samples, 0.04%)</title><rect x="174.7" y="403.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="177.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (88 samples, 0.04%)</title><rect x="175.2" y="403.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="178.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (104 samples, 0.05%)</title><rect x="175.7" y="451.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (102 samples, 0.05%)</title><rect x="175.7" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (102 samples, 0.05%)</title><rect x="175.7" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (102 samples, 0.05%)</title><rect x="175.7" y="403.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.7" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (102 samples, 0.05%)</title><rect x="175.7" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (102 samples, 0.05%)</title><rect x="175.7" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.7" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (102 samples, 0.05%)</title><rect x="175.7" y="355.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="178.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (409 samples, 0.19%)</title><rect x="176.3" y="451.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="179.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/673068808.linkToTargetMethod (100 samples, 0.05%)</title><rect x="176.3" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (100 samples, 0.05%)</title><rect x="176.3" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="179.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$160/350843020.get$Lambda (100 samples, 0.05%)</title><rect x="176.3" y="403.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$160 (100 samples, 0.05%)</title><rect x="176.3" y="387.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="179.3" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (309 samples, 0.15%)</title><rect x="176.8" y="435.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$160/350843020.run (309 samples, 0.15%)</title><rect x="176.8" y="419.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="179.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (309 samples, 0.15%)</title><rect x="176.8" y="403.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.8" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (76 samples, 0.04%)</title><rect x="176.8" y="387.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="179.8" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (233 samples, 0.11%)</title><rect x="177.2" y="387.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.2" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (120 samples, 0.06%)</title><rect x="177.2" y="371.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="180.2" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (113 samples, 0.05%)</title><rect x="177.9" y="371.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.9" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (113 samples, 0.05%)</title><rect x="177.9" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.9" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (113 samples, 0.05%)</title><rect x="177.9" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.9" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (113 samples, 0.05%)</title><rect x="177.9" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.9" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (113 samples, 0.05%)</title><rect x="177.9" y="307.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="180.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (146 samples, 0.07%)</title><rect x="178.5" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="181.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (146 samples, 0.07%)</title><rect x="178.5" y="451.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="181.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (148 samples, 0.07%)</title><rect x="179.4" y="547.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (148 samples, 0.07%)</title><rect x="179.4" y="531.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (148 samples, 0.07%)</title><rect x="179.4" y="515.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="182.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (159 samples, 0.08%)</title><rect x="180.2" y="579.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (159 samples, 0.08%)</title><rect x="180.2" y="563.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (159 samples, 0.08%)</title><rect x="180.2" y="547.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (159 samples, 0.08%)</title><rect x="180.2" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (159 samples, 0.08%)</title><rect x="180.2" y="515.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="183.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (486 samples, 0.23%)</title><rect x="181.1" y="579.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (324 samples, 0.15%)</title><rect x="181.1" y="563.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="184.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (324 samples, 0.15%)</title><rect x="181.1" y="547.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/340352288.linkToTargetMethod (324 samples, 0.15%)</title><rect x="181.1" y="531.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="184.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/51035557.invoke (324 samples, 0.15%)</title><rect x="181.1" y="515.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1915735742.invoke (324 samples, 0.15%)</title><rect x="181.1" y="499.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="184.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (324 samples, 0.15%)</title><rect x="181.1" y="483.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (118 samples, 0.06%)</title><rect x="181.1" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="184.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (118 samples, 0.06%)</title><rect x="181.1" y="451.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="184.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (206 samples, 0.10%)</title><rect x="181.7" y="467.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (206 samples, 0.10%)</title><rect x="181.7" y="451.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.7" y="462.0"></text>
</g>
<g>
<title>byte[] (206 samples, 0.10%)</title><rect x="181.7" y="435.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="184.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (162 samples, 0.08%)</title><rect x="182.9" y="563.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (162 samples, 0.08%)</title><rect x="182.9" y="547.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="185.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (171 samples, 0.08%)</title><rect x="183.8" y="659.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.8" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (171 samples, 0.08%)</title><rect x="183.8" y="643.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.8" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (171 samples, 0.08%)</title><rect x="183.8" y="627.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.8" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (171 samples, 0.08%)</title><rect x="183.8" y="611.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="186.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (536 samples, 0.25%)</title><rect x="184.7" y="659.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.7" y="670.0"></text>
</g>
<g>
<title>java/util/Optional.of (536 samples, 0.25%)</title><rect x="184.7" y="643.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.7" y="654.0"></text>
</g>
<g>
<title>java.util.Optional (536 samples, 0.25%)</title><rect x="184.7" y="627.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="187.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (453 samples, 0.21%)</title><rect x="187.7" y="659.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.7" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (148 samples, 0.07%)</title><rect x="187.7" y="643.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="190.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (305 samples, 0.14%)</title><rect x="188.5" y="643.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (85 samples, 0.04%)</title><rect x="188.5" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.5" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.of (85 samples, 0.04%)</title><rect x="188.5" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.5" y="622.0"></text>
</g>
<g>
<title>java.util.Optional (85 samples, 0.04%)</title><rect x="188.5" y="595.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="191.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (220 samples, 0.10%)</title><rect x="189.0" y="627.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.0" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.now (105 samples, 0.05%)</title><rect x="189.0" y="611.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.0" y="622.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (105 samples, 0.05%)</title><rect x="189.0" y="595.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.0" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (105 samples, 0.05%)</title><rect x="189.0" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.0" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.create (105 samples, 0.05%)</title><rect x="189.0" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.0" y="574.0"></text>
</g>
<g>
<title>java.time.Instant (105 samples, 0.05%)</title><rect x="189.0" y="547.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="192.0" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (115 samples, 0.05%)</title><rect x="189.6" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.6" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (115 samples, 0.05%)</title><rect x="189.6" y="595.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.6" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (115 samples, 0.05%)</title><rect x="189.6" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.6" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (115 samples, 0.05%)</title><rect x="189.6" y="563.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.6" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (115 samples, 0.05%)</title><rect x="189.6" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.6" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (115 samples, 0.05%)</title><rect x="189.6" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.6" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (115 samples, 0.05%)</title><rect x="189.6" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.6" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (115 samples, 0.05%)</title><rect x="189.6" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.6" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (115 samples, 0.05%)</title><rect x="189.6" y="483.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="192.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,597 samples, 1.70%)</title><rect x="190.3" y="755.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,597 samples, 1.70%)</title><rect x="190.3" y="739.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3,574 samples, 1.69%)</title><rect x="190.3" y="723.0" width="19.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3,574 samples, 1.69%)</title><rect x="190.3" y="707.0" width="19.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3,574 samples, 1.69%)</title><rect x="190.3" y="691.0" width="19.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="193.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$236/1455851462.run (5,398 samples, 2.55%)</title><rect x="210.3" y="755.0" width="30.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.3" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (5,398 samples, 2.55%)</title><rect x="210.3" y="739.0" width="30.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.3" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (5,398 samples, 2.55%)</title><rect x="210.3" y="723.0" width="30.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.3" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (5,398 samples, 2.55%)</title><rect x="210.3" y="707.0" width="30.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.3" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5,398 samples, 2.55%)</title><rect x="210.3" y="691.0" width="30.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.3" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5,398 samples, 2.55%)</title><rect x="210.3" y="675.0" width="30.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.3" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5,398 samples, 2.55%)</title><rect x="210.3" y="659.0" width="30.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.3" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5,398 samples, 2.55%)</title><rect x="210.3" y="643.0" width="30.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.3" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,398 samples, 2.55%)</title><rect x="210.3" y="627.0" width="30.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.3" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,398 samples, 2.55%)</title><rect x="210.3" y="611.0" width="30.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.3" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (5,398 samples, 2.55%)</title><rect x="210.3" y="595.0" width="30.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.3" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (4,945 samples, 2.34%)</title><rect x="210.3" y="579.0" width="27.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.3" y="590.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (284 samples, 0.13%)</title><rect x="210.3" y="563.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (284 samples, 0.13%)</title><rect x="210.3" y="547.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$245/748609538.get$Lambda (103 samples, 0.05%)</title><rect x="210.3" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$245 (103 samples, 0.05%)</title><rect x="210.3" y="515.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="213.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$254/1221045874.get$Lambda (82 samples, 0.04%)</title><rect x="210.9" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="213.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$254 (82 samples, 0.04%)</title><rect x="210.9" y="515.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="213.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$255/1736531510.get$Lambda (99 samples, 0.05%)</title><rect x="211.4" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$255 (99 samples, 0.05%)</title><rect x="211.4" y="515.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="214.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (4,661 samples, 2.20%)</title><rect x="211.9" y="563.0" width="26.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.9" y="574.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (227 samples, 0.11%)</title><rect x="211.9" y="547.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="214.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4,434 samples, 2.10%)</title><rect x="213.2" y="547.0" width="24.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.2" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4,434 samples, 2.10%)</title><rect x="213.2" y="531.0" width="24.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.2" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,434 samples, 2.10%)</title><rect x="213.2" y="515.0" width="24.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.2" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,031 samples, 0.49%)</title><rect x="213.2" y="499.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.2" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (296 samples, 0.14%)</title><rect x="213.2" y="483.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="216.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/2113751403.apply (553 samples, 0.26%)</title><rect x="214.8" y="483.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (553 samples, 0.26%)</title><rect x="214.8" y="467.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="217.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (553 samples, 0.26%)</title><rect x="214.8" y="451.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.8" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (111 samples, 0.05%)</title><rect x="214.8" y="435.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.8" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (111 samples, 0.05%)</title><rect x="214.8" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.8" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (111 samples, 0.05%)</title><rect x="214.8" y="403.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="217.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (442 samples, 0.21%)</title><rect x="215.4" y="435.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (74 samples, 0.03%)</title><rect x="215.4" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (74 samples, 0.03%)</title><rect x="215.4" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$258/1152185127.get$Lambda (74 samples, 0.03%)</title><rect x="215.4" y="387.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$258 (74 samples, 0.03%)</title><rect x="215.4" y="371.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="218.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (368 samples, 0.17%)</title><rect x="215.9" y="419.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (368 samples, 0.17%)</title><rect x="215.9" y="403.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (213 samples, 0.10%)</title><rect x="215.9" y="387.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="218.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (146 samples, 0.07%)</title><rect x="217.1" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (146 samples, 0.07%)</title><rect x="217.1" y="371.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (146 samples, 0.07%)</title><rect x="217.1" y="355.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="220.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$131/1669423235.apply (177 samples, 0.08%)</title><rect x="217.9" y="483.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (177 samples, 0.08%)</title><rect x="217.9" y="467.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (168 samples, 0.08%)</title><rect x="218.0" y="451.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (166 samples, 0.08%)</title><rect x="218.0" y="435.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (163 samples, 0.08%)</title><rect x="218.0" y="419.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (138 samples, 0.07%)</title><rect x="218.1" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$268/613178574.run (138 samples, 0.07%)</title><rect x="218.1" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (138 samples, 0.07%)</title><rect x="218.1" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="221.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (86 samples, 0.04%)</title><rect x="218.4" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (86 samples, 0.04%)</title><rect x="218.4" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="221.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (84 samples, 0.04%)</title><rect x="218.4" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (84 samples, 0.04%)</title><rect x="218.4" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (84 samples, 0.04%)</title><rect x="218.4" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="221.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (84 samples, 0.04%)</title><rect x="218.4" y="275.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (84 samples, 0.04%)</title><rect x="218.4" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (84 samples, 0.04%)</title><rect x="218.4" y="243.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (83 samples, 0.04%)</title><rect x="218.4" y="227.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="221.4" y="238.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (83 samples, 0.04%)</title><rect x="218.4" y="211.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="221.4" y="222.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (83 samples, 0.04%)</title><rect x="218.4" y="195.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.4" y="206.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (83 samples, 0.04%)</title><rect x="218.4" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.4" y="190.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (83 samples, 0.04%)</title><rect x="218.4" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.4" y="174.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (83 samples, 0.04%)</title><rect x="218.4" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3,403 samples, 1.61%)</title><rect x="218.9" y="499.0" width="19.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,403 samples, 1.61%)</title><rect x="218.9" y="483.0" width="19.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="221.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$225/1863770038.apply (3,402 samples, 1.61%)</title><rect x="218.9" y="467.0" width="19.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="221.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (3,402 samples, 1.61%)</title><rect x="218.9" y="451.0" width="19.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3,402 samples, 1.61%)</title><rect x="218.9" y="435.0" width="19.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/2028322477.apply (3,402 samples, 1.61%)</title><rect x="218.9" y="419.0" width="19.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3,402 samples, 1.61%)</title><rect x="218.9" y="403.0" width="19.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.04%)</title><rect x="218.9" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.04%)</title><rect x="218.9" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/2113751403.get$Lambda (75 samples, 0.04%)</title><rect x="218.9" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$250 (75 samples, 0.04%)</title><rect x="218.9" y="339.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="221.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (327 samples, 0.15%)</title><rect x="219.3" y="387.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (327 samples, 0.15%)</title><rect x="219.3" y="371.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (179 samples, 0.08%)</title><rect x="219.3" y="355.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="222.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (148 samples, 0.07%)</title><rect x="220.3" y="355.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="223.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (148 samples, 0.07%)</title><rect x="220.3" y="339.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="223.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (148 samples, 0.07%)</title><rect x="220.3" y="323.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="223.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (408 samples, 0.19%)</title><rect x="221.2" y="387.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (69 samples, 0.03%)</title><rect x="221.2" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="224.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (69 samples, 0.03%)</title><rect x="221.2" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$251/1146615477.get$Lambda (69 samples, 0.03%)</title><rect x="221.2" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$251 (69 samples, 0.03%)</title><rect x="221.2" y="323.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="224.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (339 samples, 0.16%)</title><rect x="221.5" y="371.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="224.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (339 samples, 0.16%)</title><rect x="221.5" y="355.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (194 samples, 0.09%)</title><rect x="221.5" y="339.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="224.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (145 samples, 0.07%)</title><rect x="222.6" y="339.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (145 samples, 0.07%)</title><rect x="222.6" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (145 samples, 0.07%)</title><rect x="222.6" y="307.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="225.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2,592 samples, 1.22%)</title><rect x="223.4" y="387.0" width="14.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (88 samples, 0.04%)</title><rect x="223.4" y="371.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.04%)</title><rect x="223.4" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$249/1213282228.get$Lambda (49 samples, 0.02%)</title><rect x="223.7" y="339.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$249 (49 samples, 0.02%)</title><rect x="223.7" y="323.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="226.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (876 samples, 0.41%)</title><rect x="223.9" y="371.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="226.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (876 samples, 0.41%)</title><rect x="223.9" y="355.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (876 samples, 0.41%)</title><rect x="223.9" y="339.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="226.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$247/1879651138.accept (287 samples, 0.14%)</title><rect x="223.9" y="323.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (287 samples, 0.14%)</title><rect x="223.9" y="307.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (287 samples, 0.14%)</title><rect x="223.9" y="291.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.04%)</title><rect x="223.9" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.04%)</title><rect x="223.9" y="259.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$248/1001483779.get$Lambda (86 samples, 0.04%)</title><rect x="223.9" y="243.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$248 (86 samples, 0.04%)</title><rect x="223.9" y="227.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="226.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (201 samples, 0.09%)</title><rect x="224.4" y="275.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (201 samples, 0.09%)</title><rect x="224.4" y="259.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (109 samples, 0.05%)</title><rect x="224.4" y="243.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="227.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (92 samples, 0.04%)</title><rect x="225.0" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="228.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (92 samples, 0.04%)</title><rect x="225.0" y="227.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (92 samples, 0.04%)</title><rect x="225.0" y="211.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="228.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$249/1213282228.accept (380 samples, 0.18%)</title><rect x="225.5" y="323.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (380 samples, 0.18%)</title><rect x="225.5" y="307.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (380 samples, 0.18%)</title><rect x="225.5" y="291.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="228.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (380 samples, 0.18%)</title><rect x="225.5" y="275.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="228.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (380 samples, 0.18%)</title><rect x="225.5" y="259.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="228.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (380 samples, 0.18%)</title><rect x="225.5" y="243.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (380 samples, 0.18%)</title><rect x="225.5" y="227.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (380 samples, 0.18%)</title><rect x="225.5" y="211.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (380 samples, 0.18%)</title><rect x="225.5" y="195.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (380 samples, 0.18%)</title><rect x="225.5" y="179.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (148 samples, 0.07%)</title><rect x="225.5" y="163.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (148 samples, 0.07%)</title><rect x="225.5" y="147.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (77 samples, 0.04%)</title><rect x="225.5" y="131.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="228.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (71 samples, 0.03%)</title><rect x="226.0" y="131.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (71 samples, 0.03%)</title><rect x="226.0" y="115.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (71 samples, 0.03%)</title><rect x="226.0" y="99.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (71 samples, 0.03%)</title><rect x="226.0" y="83.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="229.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (71 samples, 0.03%)</title><rect x="226.0" y="67.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (71 samples, 0.03%)</title><rect x="226.0" y="51.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="229.0" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (232 samples, 0.11%)</title><rect x="226.4" y="163.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (232 samples, 0.11%)</title><rect x="226.4" y="147.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.4" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (75 samples, 0.04%)</title><rect x="226.4" y="131.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.4" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (75 samples, 0.04%)</title><rect x="226.4" y="115.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="229.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (157 samples, 0.07%)</title><rect x="226.8" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="229.8" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (82 samples, 0.04%)</title><rect x="226.8" y="115.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="229.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (75 samples, 0.04%)</title><rect x="227.2" y="115.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (75 samples, 0.04%)</title><rect x="227.2" y="99.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (75 samples, 0.04%)</title><rect x="227.2" y="83.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (75 samples, 0.04%)</title><rect x="227.2" y="67.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (75 samples, 0.04%)</title><rect x="227.2" y="51.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (75 samples, 0.04%)</title><rect x="227.2" y="35.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="230.2" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (209 samples, 0.10%)</title><rect x="227.6" y="323.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (209 samples, 0.10%)</title><rect x="227.6" y="307.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (209 samples, 0.10%)</title><rect x="227.6" y="291.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="230.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (105 samples, 0.05%)</title><rect x="228.8" y="371.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (45 samples, 0.02%)</title><rect x="228.8" y="355.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="231.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (60 samples, 0.03%)</title><rect x="229.1" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (60 samples, 0.03%)</title><rect x="229.1" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.03%)</title><rect x="229.1" y="323.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="232.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (83 samples, 0.04%)</title><rect x="229.4" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1,440 samples, 0.68%)</title><rect x="229.9" y="371.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (143 samples, 0.07%)</title><rect x="229.9" y="355.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="232.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (100 samples, 0.05%)</title><rect x="230.7" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (100 samples, 0.05%)</title><rect x="230.7" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (100 samples, 0.05%)</title><rect x="230.7" y="323.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="233.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1,197 samples, 0.57%)</title><rect x="231.2" y="355.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="234.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (53 samples, 0.03%)</title><rect x="231.2" y="339.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="234.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (658 samples, 0.31%)</title><rect x="231.5" y="339.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="234.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (111 samples, 0.05%)</title><rect x="231.5" y="323.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.5" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (111 samples, 0.05%)</title><rect x="231.5" y="307.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="234.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (115 samples, 0.05%)</title><rect x="232.1" y="323.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="235.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (432 samples, 0.20%)</title><rect x="232.8" y="323.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (56 samples, 0.03%)</title><rect x="232.8" y="307.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="235.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (49 samples, 0.02%)</title><rect x="233.1" y="307.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="236.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (118 samples, 0.06%)</title><rect x="233.4" y="307.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="236.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (70 samples, 0.03%)</title><rect x="234.0" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (70 samples, 0.03%)</title><rect x="234.0" y="291.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="237.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (139 samples, 0.07%)</title><rect x="234.4" y="307.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.4" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (47 samples, 0.02%)</title><rect x="234.4" y="291.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="237.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (49 samples, 0.02%)</title><rect x="234.9" y="291.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="237.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (486 samples, 0.23%)</title><rect x="235.2" y="339.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.2" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (87 samples, 0.04%)</title><rect x="235.2" y="323.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="238.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (239 samples, 0.11%)</title><rect x="235.7" y="323.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (147 samples, 0.07%)</title><rect x="235.7" y="307.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="238.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (92 samples, 0.04%)</title><rect x="236.5" y="307.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="239.5" y="318.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.04%)</title><rect x="236.5" y="291.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="239.5" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (160 samples, 0.08%)</title><rect x="237.0" y="323.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.0" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (160 samples, 0.08%)</title><rect x="237.0" y="307.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (160 samples, 0.08%)</title><rect x="237.0" y="291.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.0" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (160 samples, 0.08%)</title><rect x="237.0" y="275.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (160 samples, 0.08%)</title><rect x="237.0" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.0" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (160 samples, 0.08%)</title><rect x="237.0" y="243.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="240.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (453 samples, 0.21%)</title><rect x="237.9" y="579.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (453 samples, 0.21%)</title><rect x="237.9" y="563.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (453 samples, 0.21%)</title><rect x="237.9" y="547.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (453 samples, 0.21%)</title><rect x="237.9" y="531.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (453 samples, 0.21%)</title><rect x="237.9" y="515.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.9" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (453 samples, 0.21%)</title><rect x="237.9" y="499.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.9" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (199 samples, 0.09%)</title><rect x="237.9" y="483.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.9" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (199 samples, 0.09%)</title><rect x="237.9" y="467.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="240.9" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (254 samples, 0.12%)</title><rect x="239.0" y="483.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.0" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (254 samples, 0.12%)</title><rect x="239.0" y="467.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="242.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (20,615 samples, 9.74%)</title><rect x="240.4" y="755.0" width="115.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.4" y="766.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (20,615 samples, 9.74%)</title><rect x="240.4" y="739.0" width="115.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.4" y="750.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (17,152 samples, 8.10%)</title><rect x="240.4" y="723.0" width="95.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.4" y="734.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$195/1248606720.run (17,152 samples, 8.10%)</title><rect x="240.4" y="707.0" width="95.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.4" y="718.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (17,152 samples, 8.10%)</title><rect x="240.4" y="691.0" width="95.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.4" y="702.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (395 samples, 0.19%)</title><rect x="240.4" y="675.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="243.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (395 samples, 0.19%)</title><rect x="240.4" y="659.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (395 samples, 0.19%)</title><rect x="240.4" y="643.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (395 samples, 0.19%)</title><rect x="240.4" y="627.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/8805846.linkToTargetMethod (186 samples, 0.09%)</title><rect x="240.4" y="611.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1785397234.invoke (186 samples, 0.09%)</title><rect x="240.4" y="595.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (186 samples, 0.09%)</title><rect x="240.4" y="579.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (186 samples, 0.09%)</title><rect x="240.4" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (186 samples, 0.09%)</title><rect x="240.4" y="547.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.4" y="558.0"></text>
</g>
<g>
<title>byte[] (186 samples, 0.09%)</title><rect x="240.4" y="531.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="243.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (209 samples, 0.10%)</title><rect x="241.5" y="611.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (209 samples, 0.10%)</title><rect x="241.5" y="595.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="244.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (209 samples, 0.10%)</title><rect x="241.5" y="579.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/2058802352.get$Lambda (209 samples, 0.10%)</title><rect x="241.5" y="563.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="244.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240 (209 samples, 0.10%)</title><rect x="241.5" y="547.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="244.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (16,757 samples, 7.92%)</title><rect x="242.6" y="675.0" width="93.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.6" y="686.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (16,757 samples, 7.92%)</title><rect x="242.6" y="659.0" width="93.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.6" y="670.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (16,757 samples, 7.92%)</title><rect x="242.6" y="643.0" width="93.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.6" y="654.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (16,757 samples, 7.92%)</title><rect x="242.6" y="627.0" width="93.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.6" y="638.0">jdk/interna..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7,500 samples, 3.54%)</title><rect x="242.6" y="611.0" width="41.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="245.6" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7,500 samples, 3.54%)</title><rect x="242.6" y="595.0" width="41.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.6" y="606.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (7,500 samples, 3.54%)</title><rect x="242.6" y="579.0" width="41.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.6" y="590.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7,500 samples, 3.54%)</title><rect x="242.6" y="563.0" width="41.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.6" y="574.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7,500 samples, 3.54%)</title><rect x="242.6" y="547.0" width="41.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.6" y="558.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (7,500 samples, 3.54%)</title><rect x="242.6" y="531.0" width="41.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.6" y="542.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (7,500 samples, 3.54%)</title><rect x="242.6" y="515.0" width="41.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="245.6" y="526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (7,271 samples, 3.44%)</title><rect x="242.6" y="499.0" width="40.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.6" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7,271 samples, 3.44%)</title><rect x="242.6" y="483.0" width="40.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.6" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7,132 samples, 3.37%)</title><rect x="242.6" y="467.0" width="39.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.6" y="478.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (159 samples, 0.08%)</title><rect x="242.6" y="451.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="245.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$251/1146615477.apply (144 samples, 0.07%)</title><rect x="243.5" y="451.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (144 samples, 0.07%)</title><rect x="243.5" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (144 samples, 0.07%)</title><rect x="243.5" y="419.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="246.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (144 samples, 0.07%)</title><rect x="243.5" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (144 samples, 0.07%)</title><rect x="243.5" y="387.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="246.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$131/1669423235.apply (6,519 samples, 3.08%)</title><rect x="244.3" y="451.0" width="36.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.3" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (6,519 samples, 3.08%)</title><rect x="244.3" y="435.0" width="36.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.3" y="446.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (98 samples, 0.05%)</title><rect x="244.3" y="419.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (98 samples, 0.05%)</title><rect x="244.3" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="247.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$289/961330703.get$Lambda (98 samples, 0.05%)</title><rect x="244.3" y="387.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$289 (98 samples, 0.05%)</title><rect x="244.3" y="371.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="247.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (324 samples, 0.15%)</title><rect x="244.9" y="419.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (324 samples, 0.15%)</title><rect x="244.9" y="403.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (187 samples, 0.09%)</title><rect x="244.9" y="387.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="247.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (137 samples, 0.06%)</title><rect x="245.9" y="387.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (137 samples, 0.06%)</title><rect x="245.9" y="371.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (137 samples, 0.06%)</title><rect x="245.9" y="355.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="248.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (6,097 samples, 2.88%)</title><rect x="246.7" y="419.0" width="34.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.7" y="430.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.03%)</title><rect x="246.7" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.03%)</title><rect x="246.7" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$288/401681721.get$Lambda (63 samples, 0.03%)</title><rect x="246.7" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$288 (63 samples, 0.03%)</title><rect x="246.7" y="355.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="249.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (367 samples, 0.17%)</title><rect x="247.0" y="403.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="250.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (367 samples, 0.17%)</title><rect x="247.0" y="387.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (209 samples, 0.10%)</title><rect x="247.0" y="371.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="250.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (158 samples, 0.07%)</title><rect x="248.2" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (158 samples, 0.07%)</title><rect x="248.2" y="355.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="251.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (158 samples, 0.07%)</title><rect x="248.2" y="339.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="251.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (5,667 samples, 2.68%)</title><rect x="249.1" y="403.0" width="31.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.1" y="414.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$121/45373299.apply (399 samples, 0.19%)</title><rect x="249.1" y="387.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (399 samples, 0.19%)</title><rect x="249.1" y="371.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (399 samples, 0.19%)</title><rect x="249.1" y="355.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (165 samples, 0.08%)</title><rect x="249.1" y="339.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="252.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (234 samples, 0.11%)</title><rect x="250.0" y="339.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="253.0" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (103 samples, 0.05%)</title><rect x="250.0" y="323.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="253.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (131 samples, 0.06%)</title><rect x="250.6" y="323.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="253.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (5,268 samples, 2.49%)</title><rect x="251.3" y="387.0" width="29.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.3" y="398.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (137 samples, 0.06%)</title><rect x="251.3" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="254.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (137 samples, 0.06%)</title><rect x="251.3" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="254.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$283/1859261589.get$Lambda (76 samples, 0.04%)</title><rect x="251.3" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$283 (76 samples, 0.04%)</title><rect x="251.3" y="323.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="254.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/224106178.get$Lambda (61 samples, 0.03%)</title><rect x="251.7" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$285 (61 samples, 0.03%)</title><rect x="251.7" y="323.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="254.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/724918021.linkToTargetMethod (195 samples, 0.09%)</title><rect x="252.1" y="371.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1203392351.invokeStatic (195 samples, 0.09%)</title><rect x="252.1" y="355.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$268/613178574.get$Lambda (195 samples, 0.09%)</title><rect x="252.1" y="339.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$268 (195 samples, 0.09%)</title><rect x="252.1" y="323.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="255.1" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1,016 samples, 0.48%)</title><rect x="253.1" y="371.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="256.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (380 samples, 0.18%)</title><rect x="253.1" y="355.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.1" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (153 samples, 0.07%)</title><rect x="253.1" y="339.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="256.1" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (153 samples, 0.07%)</title><rect x="253.1" y="323.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="256.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (227 samples, 0.11%)</title><rect x="254.0" y="339.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="257.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (227 samples, 0.11%)</title><rect x="254.0" y="323.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="257.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (348 samples, 0.16%)</title><rect x="255.3" y="355.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="258.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (348 samples, 0.16%)</title><rect x="255.3" y="339.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (348 samples, 0.16%)</title><rect x="255.3" y="323.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="258.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (113 samples, 0.05%)</title><rect x="255.3" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (113 samples, 0.05%)</title><rect x="255.3" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (113 samples, 0.05%)</title><rect x="255.3" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.3" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (113 samples, 0.05%)</title><rect x="255.3" y="259.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="258.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$265/1519762500.get (135 samples, 0.06%)</title><rect x="255.9" y="307.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.9" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (135 samples, 0.06%)</title><rect x="255.9" y="291.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="258.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (100 samples, 0.05%)</title><rect x="256.6" y="307.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (100 samples, 0.05%)</title><rect x="256.6" y="291.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.6" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (100 samples, 0.05%)</title><rect x="256.6" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.6" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (100 samples, 0.05%)</title><rect x="256.6" y="259.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="259.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (288 samples, 0.14%)</title><rect x="257.2" y="355.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="260.2" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (288 samples, 0.14%)</title><rect x="257.2" y="339.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="260.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (685 samples, 0.32%)</title><rect x="258.8" y="371.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (328 samples, 0.15%)</title><rect x="258.8" y="355.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (173 samples, 0.08%)</title><rect x="258.8" y="339.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="261.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (155 samples, 0.07%)</title><rect x="259.8" y="339.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (155 samples, 0.07%)</title><rect x="259.8" y="323.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (155 samples, 0.07%)</title><rect x="259.8" y="307.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="262.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (357 samples, 0.17%)</title><rect x="260.6" y="355.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (357 samples, 0.17%)</title><rect x="260.6" y="339.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="263.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (216 samples, 0.10%)</title><rect x="260.6" y="323.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="263.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (141 samples, 0.07%)</title><rect x="261.8" y="323.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="264.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (141 samples, 0.07%)</title><rect x="261.8" y="307.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (141 samples, 0.07%)</title><rect x="261.8" y="291.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="264.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (130 samples, 0.06%)</title><rect x="262.6" y="371.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="265.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (142 samples, 0.07%)</title><rect x="263.3" y="371.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="266.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (160 samples, 0.08%)</title><rect x="264.1" y="371.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="267.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (76 samples, 0.04%)</title><rect x="265.0" y="371.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="268.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (76 samples, 0.04%)</title><rect x="265.0" y="355.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="268.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,727 samples, 1.29%)</title><rect x="265.5" y="371.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$268/613178574.run (2,727 samples, 1.29%)</title><rect x="265.5" y="355.0" width="15.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="268.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (2,727 samples, 1.29%)</title><rect x="265.5" y="339.0" width="15.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (315 samples, 0.15%)</title><rect x="265.5" y="323.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (315 samples, 0.15%)</title><rect x="265.5" y="307.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="268.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$271/2026665690.get$Lambda (56 samples, 0.03%)</title><rect x="265.5" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$271 (56 samples, 0.03%)</title><rect x="265.5" y="275.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="268.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$274/270165128.get$Lambda (118 samples, 0.06%)</title><rect x="265.8" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="268.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$274 (118 samples, 0.06%)</title><rect x="265.8" y="275.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="268.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$277/1281678116.get$Lambda (141 samples, 0.07%)</title><rect x="266.4" y="291.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$277 (141 samples, 0.07%)</title><rect x="266.4" y="275.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="269.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (322 samples, 0.15%)</title><rect x="267.2" y="323.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="270.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (322 samples, 0.15%)</title><rect x="267.2" y="307.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (180 samples, 0.09%)</title><rect x="267.2" y="291.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="270.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (142 samples, 0.07%)</title><rect x="268.2" y="291.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (142 samples, 0.07%)</title><rect x="268.2" y="275.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (142 samples, 0.07%)</title><rect x="268.2" y="259.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="271.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (171 samples, 0.08%)</title><rect x="269.0" y="323.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="272.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (137 samples, 0.06%)</title><rect x="270.0" y="323.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (137 samples, 0.06%)</title><rect x="270.0" y="307.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="273.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (446 samples, 0.21%)</title><rect x="270.7" y="323.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="273.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (446 samples, 0.21%)</title><rect x="270.7" y="307.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (85 samples, 0.04%)</title><rect x="270.7" y="291.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="273.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (85 samples, 0.04%)</title><rect x="270.7" y="275.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$279/1442867542.get$Lambda (85 samples, 0.04%)</title><rect x="270.7" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$279 (85 samples, 0.04%)</title><rect x="270.7" y="243.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="273.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (361 samples, 0.17%)</title><rect x="271.2" y="291.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (361 samples, 0.17%)</title><rect x="271.2" y="275.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (361 samples, 0.17%)</title><rect x="271.2" y="259.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (197 samples, 0.09%)</title><rect x="271.2" y="243.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="274.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (164 samples, 0.08%)</title><rect x="272.3" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (164 samples, 0.08%)</title><rect x="272.3" y="227.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (164 samples, 0.08%)</title><rect x="272.3" y="211.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="275.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (473 samples, 0.22%)</title><rect x="273.2" y="323.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="276.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (472 samples, 0.22%)</title><rect x="273.2" y="307.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1820383114.invoke (472 samples, 0.22%)</title><rect x="273.2" y="291.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (472 samples, 0.22%)</title><rect x="273.2" y="275.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (121 samples, 0.06%)</title><rect x="273.2" y="259.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="276.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String (121 samples, 0.06%)</title><rect x="273.2" y="243.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="276.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (351 samples, 0.17%)</title><rect x="273.9" y="259.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (351 samples, 0.17%)</title><rect x="273.9" y="243.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="276.9" y="254.0"></text>
</g>
<g>
<title>byte[] (351 samples, 0.17%)</title><rect x="273.9" y="227.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="276.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (863 samples, 0.41%)</title><rect x="275.8" y="323.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (276 samples, 0.13%)</title><rect x="275.8" y="307.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="278.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (587 samples, 0.28%)</title><rect x="277.4" y="307.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (587 samples, 0.28%)</title><rect x="277.4" y="291.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1820383114.invoke (587 samples, 0.28%)</title><rect x="277.4" y="275.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (587 samples, 0.28%)</title><rect x="277.4" y="259.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="280.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (119 samples, 0.06%)</title><rect x="277.4" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="280.4" y="254.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.06%)</title><rect x="277.4" y="227.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="280.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (468 samples, 0.22%)</title><rect x="278.1" y="243.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (468 samples, 0.22%)</title><rect x="278.1" y="227.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.1" y="238.0"></text>
</g>
<g>
<title>byte[] (468 samples, 0.22%)</title><rect x="278.1" y="211.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="281.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$226/1434925187.apply (310 samples, 0.15%)</title><rect x="280.7" y="451.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (310 samples, 0.15%)</title><rect x="280.7" y="435.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (167 samples, 0.08%)</title><rect x="280.7" y="419.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.7" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (167 samples, 0.08%)</title><rect x="280.7" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.7" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (167 samples, 0.08%)</title><rect x="280.7" y="387.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.7" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (167 samples, 0.08%)</title><rect x="280.7" y="371.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="283.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (143 samples, 0.07%)</title><rect x="281.6" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (143 samples, 0.07%)</title><rect x="281.6" y="403.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="284.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (139 samples, 0.07%)</title><rect x="282.4" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (139 samples, 0.07%)</title><rect x="282.4" y="451.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$227/204842730.apply (139 samples, 0.07%)</title><rect x="282.4" y="435.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (139 samples, 0.07%)</title><rect x="282.4" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (139 samples, 0.07%)</title><rect x="282.4" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (139 samples, 0.07%)</title><rect x="282.4" y="387.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="285.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$258/1152185127.apply (229 samples, 0.11%)</title><rect x="283.2" y="499.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (229 samples, 0.11%)</title><rect x="283.2" y="483.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (229 samples, 0.11%)</title><rect x="283.2" y="467.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="286.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (9,257 samples, 4.37%)</title><rect x="284.4" y="611.0" width="51.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.4" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (586 samples, 0.28%)</title><rect x="284.4" y="595.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="287.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (586 samples, 0.28%)</title><rect x="284.4" y="579.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.4" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (586 samples, 0.28%)</title><rect x="284.4" y="563.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.4" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (586 samples, 0.28%)</title><rect x="284.4" y="547.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (586 samples, 0.28%)</title><rect x="284.4" y="531.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="287.4" y="542.0"></text>
</g>
<g>
<title>byte[] (586 samples, 0.28%)</title><rect x="284.4" y="515.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="287.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (214 samples, 0.10%)</title><rect x="287.7" y="595.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (214 samples, 0.10%)</title><rect x="287.7" y="579.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (214 samples, 0.10%)</title><rect x="287.7" y="563.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.7" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (214 samples, 0.10%)</title><rect x="287.7" y="547.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (214 samples, 0.10%)</title><rect x="287.7" y="531.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.7" y="542.0"></text>
</g>
<g>
<title>byte[] (214 samples, 0.10%)</title><rect x="287.7" y="515.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="290.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (828 samples, 0.39%)</title><rect x="288.9" y="595.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.9" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (111 samples, 0.05%)</title><rect x="288.9" y="579.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="291.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (239 samples, 0.11%)</title><rect x="289.5" y="579.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="292.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (239 samples, 0.11%)</title><rect x="289.5" y="563.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="292.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (125 samples, 0.06%)</title><rect x="289.5" y="547.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="292.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (114 samples, 0.05%)</title><rect x="290.2" y="547.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.2" y="558.0"></text>
</g>
<g>
<title>byte[] (114 samples, 0.05%)</title><rect x="290.2" y="531.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="293.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (140 samples, 0.07%)</title><rect x="290.9" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="293.9" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (140 samples, 0.07%)</title><rect x="290.9" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.9" y="574.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.07%)</title><rect x="290.9" y="547.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="293.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (338 samples, 0.16%)</title><rect x="291.6" y="579.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (338 samples, 0.16%)</title><rect x="291.6" y="563.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="294.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (151 samples, 0.07%)</title><rect x="291.6" y="547.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="294.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (187 samples, 0.09%)</title><rect x="292.5" y="547.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="295.5" y="558.0"></text>
</g>
<g>
<title>byte[] (187 samples, 0.09%)</title><rect x="292.5" y="531.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="295.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (2,343 samples, 1.11%)</title><rect x="293.5" y="595.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.5" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,343 samples, 1.11%)</title><rect x="293.5" y="579.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.5" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,343 samples, 1.11%)</title><rect x="293.5" y="563.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="296.5" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (91 samples, 0.04%)</title><rect x="293.5" y="547.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="296.5" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (124 samples, 0.06%)</title><rect x="294.0" y="547.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="297.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (216 samples, 0.10%)</title><rect x="294.7" y="547.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="297.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (82 samples, 0.04%)</title><rect x="295.9" y="547.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="298.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (154 samples, 0.07%)</title><rect x="296.4" y="547.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (154 samples, 0.07%)</title><rect x="296.4" y="531.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/2069775835.get$Lambda (154 samples, 0.07%)</title><rect x="296.4" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="299.4" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$119 (154 samples, 0.07%)</title><rect x="296.4" y="499.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="299.4" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (142 samples, 0.07%)</title><rect x="297.2" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.2" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (142 samples, 0.07%)</title><rect x="297.2" y="531.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="300.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (1,271 samples, 0.60%)</title><rect x="298.0" y="547.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/2069775835.accept (1,271 samples, 0.60%)</title><rect x="298.0" y="531.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="301.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,271 samples, 0.60%)</title><rect x="298.0" y="515.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (272 samples, 0.13%)</title><rect x="298.0" y="499.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="301.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1045516625.accept (272 samples, 0.13%)</title><rect x="298.0" y="483.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="301.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (272 samples, 0.13%)</title><rect x="298.0" y="467.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (272 samples, 0.13%)</title><rect x="298.0" y="451.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (272 samples, 0.13%)</title><rect x="298.0" y="435.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (272 samples, 0.13%)</title><rect x="298.0" y="419.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="301.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (272 samples, 0.13%)</title><rect x="298.0" y="403.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (272 samples, 0.13%)</title><rect x="298.0" y="387.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.0" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (272 samples, 0.13%)</title><rect x="298.0" y="371.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="301.0" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (532 samples, 0.25%)</title><rect x="299.5" y="499.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.5" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (532 samples, 0.25%)</title><rect x="299.5" y="483.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (286 samples, 0.14%)</title><rect x="299.5" y="467.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="302.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (286 samples, 0.14%)</title><rect x="299.5" y="451.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.5" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (286 samples, 0.14%)</title><rect x="299.5" y="435.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="302.5" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (246 samples, 0.12%)</title><rect x="301.1" y="467.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="304.1" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (246 samples, 0.12%)</title><rect x="301.1" y="451.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="304.1" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (467 samples, 0.22%)</title><rect x="302.5" y="499.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (467 samples, 0.22%)</title><rect x="302.5" y="483.0" width="2.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="305.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (263 samples, 0.12%)</title><rect x="305.1" y="547.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (263 samples, 0.12%)</title><rect x="305.1" y="531.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="308.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (5,286 samples, 2.50%)</title><rect x="306.6" y="595.0" width="29.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="309.6" y="606.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (256 samples, 0.12%)</title><rect x="306.6" y="579.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="309.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (348 samples, 0.16%)</title><rect x="308.0" y="579.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (348 samples, 0.16%)</title><rect x="308.0" y="563.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="311.0" y="574.0"></text>
</g>
<g>
<title>byte[] (348 samples, 0.16%)</title><rect x="308.0" y="547.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="311.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (745 samples, 0.35%)</title><rect x="310.0" y="579.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (745 samples, 0.35%)</title><rect x="310.0" y="563.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (289 samples, 0.14%)</title><rect x="310.0" y="547.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="313.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (456 samples, 0.22%)</title><rect x="311.6" y="547.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.6" y="558.0"></text>
</g>
<g>
<title>byte[] (456 samples, 0.22%)</title><rect x="311.6" y="531.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="314.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (3,937 samples, 1.86%)</title><rect x="314.1" y="579.0" width="22.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.1" y="590.0">j..</text>
</g>
<g>
<title>java/lang/String.substring (1,177 samples, 0.56%)</title><rect x="314.1" y="563.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,177 samples, 0.56%)</title><rect x="314.1" y="547.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="317.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (489 samples, 0.23%)</title><rect x="314.1" y="531.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="317.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (688 samples, 0.33%)</title><rect x="316.8" y="531.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.8" y="542.0"></text>
</g>
<g>
<title>byte[] (688 samples, 0.33%)</title><rect x="316.8" y="515.0" width="3.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="319.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (559 samples, 0.26%)</title><rect x="320.7" y="563.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (559 samples, 0.26%)</title><rect x="320.7" y="547.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.7" y="558.0"></text>
</g>
<g>
<title>byte[] (310 samples, 0.15%)</title><rect x="320.7" y="531.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="323.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (249 samples, 0.12%)</title><rect x="322.4" y="531.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="325.4" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (520 samples, 0.25%)</title><rect x="323.8" y="563.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (520 samples, 0.25%)</title><rect x="323.8" y="547.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (520 samples, 0.25%)</title><rect x="323.8" y="531.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (241 samples, 0.11%)</title><rect x="323.8" y="515.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="326.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (279 samples, 0.13%)</title><rect x="325.1" y="515.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.1" y="526.0"></text>
</g>
<g>
<title>byte[] (279 samples, 0.13%)</title><rect x="325.1" y="499.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="328.1" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (625 samples, 0.30%)</title><rect x="326.7" y="563.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (625 samples, 0.30%)</title><rect x="326.7" y="547.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (625 samples, 0.30%)</title><rect x="326.7" y="531.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="329.7" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (625 samples, 0.30%)</title><rect x="326.7" y="515.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (625 samples, 0.30%)</title><rect x="326.7" y="499.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.7" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (625 samples, 0.30%)</title><rect x="326.7" y="483.0" width="3.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="329.7" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1,056 samples, 0.50%)</title><rect x="330.2" y="563.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (388 samples, 0.18%)</title><rect x="330.2" y="547.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="333.2" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (388 samples, 0.18%)</title><rect x="330.2" y="531.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="333.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (416 samples, 0.20%)</title><rect x="332.3" y="547.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (416 samples, 0.20%)</title><rect x="332.3" y="531.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="335.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$261/1287871390.apply (252 samples, 0.12%)</title><rect x="334.7" y="547.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (252 samples, 0.12%)</title><rect x="334.7" y="531.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="337.7" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (252 samples, 0.12%)</title><rect x="334.7" y="515.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="337.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3,463 samples, 1.64%)</title><rect x="336.1" y="723.0" width="19.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,463 samples, 1.64%)</title><rect x="336.1" y="707.0" width="19.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="339.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3,463 samples, 1.64%)</title><rect x="336.1" y="691.0" width="19.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="339.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$195/1248606720.run (3,463 samples, 1.64%)</title><rect x="336.1" y="675.0" width="19.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="339.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3,463 samples, 1.64%)</title><rect x="336.1" y="659.0" width="19.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="339.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2,269 samples, 1.07%)</title><rect x="336.1" y="643.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (162 samples, 0.08%)</title><rect x="336.1" y="627.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (162 samples, 0.08%)</title><rect x="336.1" y="611.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$211/1172666604.get$Lambda (67 samples, 0.03%)</title><rect x="336.1" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="339.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$211 (67 samples, 0.03%)</title><rect x="336.1" y="579.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="339.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$213/938821665.get$Lambda (95 samples, 0.04%)</title><rect x="336.4" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$213 (95 samples, 0.04%)</title><rect x="336.4" y="579.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="339.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (156 samples, 0.07%)</title><rect x="337.0" y="627.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="340.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (226 samples, 0.11%)</title><rect x="337.8" y="627.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (226 samples, 0.11%)</title><rect x="337.8" y="611.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (98 samples, 0.05%)</title><rect x="337.8" y="595.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="340.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (128 samples, 0.06%)</title><rect x="338.4" y="595.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (128 samples, 0.06%)</title><rect x="338.4" y="579.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="341.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1,725 samples, 0.82%)</title><rect x="339.1" y="627.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1,725 samples, 0.82%)</title><rect x="339.1" y="611.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$271/2026665690.run (1,508 samples, 0.71%)</title><rect x="339.1" y="595.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1,508 samples, 0.71%)</title><rect x="339.1" y="579.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1,508 samples, 0.71%)</title><rect x="339.1" y="563.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="342.1" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (428 samples, 0.20%)</title><rect x="339.1" y="547.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.1" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (284 samples, 0.13%)</title><rect x="339.1" y="531.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.1" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (102 samples, 0.05%)</title><rect x="339.1" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.1" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (102 samples, 0.05%)</title><rect x="339.1" y="499.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="342.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (182 samples, 0.09%)</title><rect x="339.7" y="515.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.7" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (182 samples, 0.09%)</title><rect x="339.7" y="499.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="342.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (144 samples, 0.07%)</title><rect x="340.7" y="531.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (144 samples, 0.07%)</title><rect x="340.7" y="515.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="343.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (144 samples, 0.07%)</title><rect x="340.7" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$60/915416632.get (91 samples, 0.04%)</title><rect x="340.7" y="483.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="343.7" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (91 samples, 0.04%)</title><rect x="340.7" y="467.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="343.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (53 samples, 0.03%)</title><rect x="341.2" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (53 samples, 0.03%)</title><rect x="341.2" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.2" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (53 samples, 0.03%)</title><rect x="341.2" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.2" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (53 samples, 0.03%)</title><rect x="341.2" y="435.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="344.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,080 samples, 0.51%)</title><rect x="341.5" y="547.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="344.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (81 samples, 0.04%)</title><rect x="341.5" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.5" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (81 samples, 0.04%)</title><rect x="341.5" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (81 samples, 0.04%)</title><rect x="341.5" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="344.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (81 samples, 0.04%)</title><rect x="341.5" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.5" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (81 samples, 0.04%)</title><rect x="341.5" y="467.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="344.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (999 samples, 0.47%)</title><rect x="341.9" y="531.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (434 samples, 0.21%)</title><rect x="341.9" y="515.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="344.9" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (65 samples, 0.03%)</title><rect x="341.9" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.9" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (65 samples, 0.03%)</title><rect x="341.9" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.9" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (65 samples, 0.03%)</title><rect x="341.9" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.9" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (65 samples, 0.03%)</title><rect x="341.9" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.9" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (65 samples, 0.03%)</title><rect x="341.9" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.9" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (65 samples, 0.03%)</title><rect x="341.9" y="419.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="344.9" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (95 samples, 0.04%)</title><rect x="342.3" y="499.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.3" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (95 samples, 0.04%)</title><rect x="342.3" y="483.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (95 samples, 0.04%)</title><rect x="342.3" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (95 samples, 0.04%)</title><rect x="342.3" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.3" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (95 samples, 0.04%)</title><rect x="342.3" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.3" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (95 samples, 0.04%)</title><rect x="342.3" y="419.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="345.3" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (93 samples, 0.04%)</title><rect x="342.8" y="499.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="345.8" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (93 samples, 0.04%)</title><rect x="342.8" y="483.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.8" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (93 samples, 0.04%)</title><rect x="342.8" y="467.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="345.8" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (81 samples, 0.04%)</title><rect x="343.4" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (81 samples, 0.04%)</title><rect x="343.4" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (81 samples, 0.04%)</title><rect x="343.4" y="467.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="346.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (92 samples, 0.04%)</title><rect x="343.8" y="499.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="346.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (222 samples, 0.10%)</title><rect x="344.3" y="515.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (83 samples, 0.04%)</title><rect x="344.3" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (83 samples, 0.04%)</title><rect x="344.3" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="347.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (83 samples, 0.04%)</title><rect x="344.3" y="467.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (83 samples, 0.04%)</title><rect x="344.3" y="451.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="347.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (64 samples, 0.03%)</title><rect x="344.8" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.8" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (64 samples, 0.03%)</title><rect x="344.8" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="347.8" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (64 samples, 0.03%)</title><rect x="344.8" y="467.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="347.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (75 samples, 0.04%)</title><rect x="345.2" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="348.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (75 samples, 0.04%)</title><rect x="345.2" y="483.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="348.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (343 samples, 0.16%)</title><rect x="345.6" y="515.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (72 samples, 0.03%)</title><rect x="345.6" y="499.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="348.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (271 samples, 0.13%)</title><rect x="346.0" y="499.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="349.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (80 samples, 0.04%)</title><rect x="346.0" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (80 samples, 0.04%)</title><rect x="346.0" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (80 samples, 0.04%)</title><rect x="346.0" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (80 samples, 0.04%)</title><rect x="346.0" y="435.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="349.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (191 samples, 0.09%)</title><rect x="346.4" y="483.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (191 samples, 0.09%)</title><rect x="346.4" y="467.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (142 samples, 0.07%)</title><rect x="346.4" y="451.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="349.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (49 samples, 0.02%)</title><rect x="347.2" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (49 samples, 0.02%)</title><rect x="347.2" y="435.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="350.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (217 samples, 0.10%)</title><rect x="347.5" y="595.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="350.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (217 samples, 0.10%)</title><rect x="347.5" y="579.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="350.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (217 samples, 0.10%)</title><rect x="347.5" y="563.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (178 samples, 0.08%)</title><rect x="347.5" y="547.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (178 samples, 0.08%)</title><rect x="347.5" y="531.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="350.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (178 samples, 0.08%)</title><rect x="347.5" y="515.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (178 samples, 0.08%)</title><rect x="347.5" y="499.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$283/1859261589.accept (178 samples, 0.08%)</title><rect x="347.5" y="483.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (178 samples, 0.08%)</title><rect x="347.5" y="467.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="350.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (178 samples, 0.08%)</title><rect x="347.5" y="451.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="350.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (178 samples, 0.08%)</title><rect x="347.5" y="435.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (178 samples, 0.08%)</title><rect x="347.5" y="419.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$289/961330703.apply (178 samples, 0.08%)</title><rect x="347.5" y="403.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="350.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (178 samples, 0.08%)</title><rect x="347.5" y="387.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (178 samples, 0.08%)</title><rect x="347.5" y="371.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="350.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1,167 samples, 0.55%)</title><rect x="348.7" y="643.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,167 samples, 0.55%)</title><rect x="348.7" y="627.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,167 samples, 0.55%)</title><rect x="348.7" y="611.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,167 samples, 0.55%)</title><rect x="348.7" y="595.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="351.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,167 samples, 0.55%)</title><rect x="348.7" y="579.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="351.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,167 samples, 0.55%)</title><rect x="348.7" y="563.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (84 samples, 0.04%)</title><rect x="348.7" y="547.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="351.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (84 samples, 0.04%)</title><rect x="348.7" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="351.7" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (84 samples, 0.04%)</title><rect x="348.7" y="515.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="351.7" y="526.0"></text>
</g>
<g>
<title>java/util/List.of (52 samples, 0.02%)</title><rect x="349.2" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.2" y="558.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (52 samples, 0.02%)</title><rect x="349.2" y="531.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="352.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$271/2026665690.run (732 samples, 0.35%)</title><rect x="349.5" y="547.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="352.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (732 samples, 0.35%)</title><rect x="349.5" y="531.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (732 samples, 0.35%)</title><rect x="349.5" y="515.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.5" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (216 samples, 0.10%)</title><rect x="349.5" y="499.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.5" y="510.0"></text>
</g>
<g>
<title>java/util/Collection.stream (131 samples, 0.06%)</title><rect x="349.5" y="483.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.5" y="494.0"></text>
</g>
<g>
<title>java/util/List.spliterator (51 samples, 0.02%)</title><rect x="349.5" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="352.5" y="478.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (51 samples, 0.02%)</title><rect x="349.5" y="451.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="352.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (80 samples, 0.04%)</title><rect x="349.8" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="352.8" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (80 samples, 0.04%)</title><rect x="349.8" y="451.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="352.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (85 samples, 0.04%)</title><rect x="350.2" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (85 samples, 0.04%)</title><rect x="350.2" y="467.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (85 samples, 0.04%)</title><rect x="350.2" y="451.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.2" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$60/915416632.get (56 samples, 0.03%)</title><rect x="350.2" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="353.2" y="446.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (56 samples, 0.03%)</title><rect x="350.2" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="353.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (516 samples, 0.24%)</title><rect x="350.7" y="499.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="353.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (479 samples, 0.23%)</title><rect x="350.9" y="483.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (193 samples, 0.09%)</title><rect x="350.9" y="467.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="353.9" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (46 samples, 0.02%)</title><rect x="351.3" y="451.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (46 samples, 0.02%)</title><rect x="351.3" y="435.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.3" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (46 samples, 0.02%)</title><rect x="351.3" y="419.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="354.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (103 samples, 0.05%)</title><rect x="352.0" y="467.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (183 samples, 0.09%)</title><rect x="352.5" y="467.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="355.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (139 samples, 0.07%)</title><rect x="352.8" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="355.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (97 samples, 0.05%)</title><rect x="353.0" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (97 samples, 0.05%)</title><rect x="353.0" y="419.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (75 samples, 0.04%)</title><rect x="353.0" y="403.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="356.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (170 samples, 0.08%)</title><rect x="353.5" y="547.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (170 samples, 0.08%)</title><rect x="353.5" y="531.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (170 samples, 0.08%)</title><rect x="353.5" y="515.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="356.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (87 samples, 0.04%)</title><rect x="353.5" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="356.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (87 samples, 0.04%)</title><rect x="353.5" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (87 samples, 0.04%)</title><rect x="353.5" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (87 samples, 0.04%)</title><rect x="353.5" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="356.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$283/1859261589.accept (87 samples, 0.04%)</title><rect x="353.5" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="356.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (87 samples, 0.04%)</title><rect x="353.5" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (87 samples, 0.04%)</title><rect x="353.5" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="356.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (87 samples, 0.04%)</title><rect x="353.5" y="387.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="356.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (87 samples, 0.04%)</title><rect x="353.5" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$289/961330703.apply (87 samples, 0.04%)</title><rect x="353.5" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (87 samples, 0.04%)</title><rect x="353.5" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (87 samples, 0.04%)</title><rect x="353.5" y="323.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="356.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (83 samples, 0.04%)</title><rect x="354.0" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.0" y="510.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.03%)</title><rect x="354.0" y="483.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="357.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (119 samples, 0.06%)</title><rect x="354.5" y="547.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (119 samples, 0.06%)</title><rect x="354.5" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (119 samples, 0.06%)</title><rect x="354.5" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (119 samples, 0.06%)</title><rect x="354.5" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="357.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (119 samples, 0.06%)</title><rect x="354.5" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.5" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (49 samples, 0.02%)</title><rect x="354.5" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.5" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.02%)</title><rect x="354.5" y="451.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="357.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (70 samples, 0.03%)</title><rect x="354.8" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.8" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (70 samples, 0.03%)</title><rect x="354.8" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (62 samples, 0.03%)</title><rect x="354.8" y="435.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="357.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$257/177406357.run (60,473 samples, 28.58%)</title><rect x="355.4" y="755.0" width="337.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.4" y="766.0">ru/mail/polis/service/shkalev/AsyncReplicator$..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$executeAsync$6 (60,473 samples, 28.58%)</title><rect x="355.4" y="739.0" width="337.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.4" y="750.0">ru/mail/polis/service/shkalev/AsyncReplicator...</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10,735 samples, 5.07%)</title><rect x="355.4" y="723.0" width="59.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.4" y="734.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7,292 samples, 3.45%)</title><rect x="355.4" y="707.0" width="40.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.4" y="718.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5,128 samples, 2.42%)</title><rect x="355.4" y="691.0" width="28.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="358.4" y="702.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5,128 samples, 2.42%)</title><rect x="355.4" y="675.0" width="28.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="358.4" y="686.0">on..</text>
</g>
<g>
<title>byte[] (3,141 samples, 1.48%)</title><rect x="355.4" y="659.0" width="17.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="358.4" y="670.0"></text>
</g>
<g>
<title>byte[] (1,987 samples, 0.94%)</title><rect x="372.9" y="659.0" width="11.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="375.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,164 samples, 1.02%)</title><rect x="384.0" y="691.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="387.0" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2,164 samples, 1.02%)</title><rect x="384.0" y="675.0" width="12.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="387.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3,443 samples, 1.63%)</title><rect x="396.0" y="707.0" width="19.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,443 samples, 1.63%)</title><rect x="396.0" y="691.0" width="19.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,443 samples, 1.63%)</title><rect x="396.0" y="675.0" width="19.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="399.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String (1,200 samples, 0.57%)</title><rect x="396.0" y="659.0" width="6.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="399.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,243 samples, 1.06%)</title><rect x="402.7" y="659.0" width="12.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.7" y="670.0"></text>
</g>
<g>
<title>byte[] (2,243 samples, 1.06%)</title><rect x="402.7" y="643.0" width="12.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="405.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$256/72675183.action (11,712 samples, 5.53%)</title><rect x="415.2" y="723.0" width="65.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.2" y="734.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$executePut$2 (11,712 samples, 5.53%)</title><rect x="415.2" y="707.0" width="65.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="418.2" y="718.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.put (11,712 samples, 5.53%)</title><rect x="415.2" y="691.0" width="65.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.2" y="702.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,662 samples, 1.73%)</title><rect x="415.2" y="675.0" width="20.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,662 samples, 1.73%)</title><rect x="415.2" y="659.0" width="20.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.2" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,662 samples, 1.73%)</title><rect x="415.2" y="643.0" width="20.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="418.2" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Response (1,198 samples, 0.57%)</title><rect x="435.6" y="675.0" width="6.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="438.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4,445 samples, 2.10%)</title><rect x="442.3" y="675.0" width="24.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="445.3" y="686.0">o..</text>
</g>
<g>
<title>byte[] (1,818 samples, 0.86%)</title><rect x="442.3" y="659.0" width="10.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="445.3" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (1,538 samples, 0.73%)</title><rect x="452.5" y="659.0" width="8.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="455.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String (1,089 samples, 0.51%)</title><rect x="461.0" y="659.0" width="6.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="464.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.upsert (2,407 samples, 1.14%)</title><rect x="467.1" y="675.0" width="13.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.upsert (2,407 samples, 1.14%)</title><rect x="467.1" y="659.0" width="13.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.upsert (2,407 samples, 1.14%)</title><rect x="467.1" y="643.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (426 samples, 0.20%)</title><rect x="467.1" y="627.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (426 samples, 0.20%)</title><rect x="467.1" y="611.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (151 samples, 0.07%)</title><rect x="467.1" y="595.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="470.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (275 samples, 0.13%)</title><rect x="468.0" y="595.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="471.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.of (1,981 samples, 0.94%)</title><rect x="469.5" y="627.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="472.5" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shkalev.Row (1,981 samples, 0.94%)</title><rect x="469.5" y="611.0" width="11.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="472.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$306/2058322187.action (38,026 samples, 17.97%)</title><rect x="480.5" y="723.0" width="212.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.5" y="734.0">ru/mail/polis/service/shkale..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$execGet$1 (38,026 samples, 17.97%)</title><rect x="480.5" y="707.0" width="212.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.5" y="718.0">ru/mail/polis/service/shkale..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.get (38,026 samples, 17.97%)</title><rect x="480.5" y="691.0" width="212.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.5" y="702.0">ru/mail/polis/service/shkale..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.getRow (37,417 samples, 17.68%)</title><rect x="480.5" y="675.0" width="208.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="483.5" y="686.0">ru/mail/polis/dao/shkalev/M..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.rowBy (37,417 samples, 17.68%)</title><rect x="480.5" y="659.0" width="208.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.5" y="670.0">ru/mail/polis/dao/shkalev/M..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,836 samples, 1.81%)</title><rect x="480.5" y="643.0" width="21.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.5" y="654.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,385 samples, 1.60%)</title><rect x="480.5" y="627.0" width="18.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.5" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,458 samples, 0.69%)</title><rect x="480.5" y="611.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.5" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,458 samples, 0.69%)</title><rect x="480.5" y="595.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.5" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,458 samples, 0.69%)</title><rect x="480.5" y="579.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,458 samples, 0.69%)</title><rect x="480.5" y="563.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,458 samples, 0.69%)</title><rect x="480.5" y="547.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$304/1085496263.compare (1,458 samples, 0.69%)</title><rect x="480.5" y="531.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (1,458 samples, 0.69%)</title><rect x="480.5" y="515.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (1,458 samples, 0.69%)</title><rect x="480.5" y="499.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="483.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,436 samples, 0.68%)</title><rect x="480.5" y="483.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.5" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,436 samples, 0.68%)</title><rect x="480.5" y="467.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.5" y="478.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,436 samples, 0.68%)</title><rect x="480.5" y="451.0" width="8.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="483.5" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,927 samples, 0.91%)</title><rect x="488.7" y="611.0" width="10.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.7" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,927 samples, 0.91%)</title><rect x="488.7" y="595.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.7" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,927 samples, 0.91%)</title><rect x="488.7" y="579.0" width="10.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.7" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,927 samples, 0.91%)</title><rect x="488.7" y="563.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,927 samples, 0.91%)</title><rect x="488.7" y="547.0" width="10.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,927 samples, 0.91%)</title><rect x="488.7" y="531.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,057 samples, 0.50%)</title><rect x="488.7" y="515.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (1,052 samples, 0.50%)</title><rect x="488.7" y="499.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (1,052 samples, 0.50%)</title><rect x="488.7" y="483.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getRowAt (1,052 samples, 0.50%)</title><rect x="488.7" y="467.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.7" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (248 samples, 0.12%)</title><rect x="488.7" y="451.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.7" y="462.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (248 samples, 0.12%)</title><rect x="488.7" y="435.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="491.7" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (201 samples, 0.09%)</title><rect x="490.1" y="451.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="493.1" y="462.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (201 samples, 0.09%)</title><rect x="490.1" y="435.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="493.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (465 samples, 0.22%)</title><rect x="491.2" y="451.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="494.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (215 samples, 0.10%)</title><rect x="491.2" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.2" y="446.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (215 samples, 0.10%)</title><rect x="491.2" y="419.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="494.2" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (250 samples, 0.12%)</title><rect x="492.4" y="435.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="495.4" y="446.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (250 samples, 0.12%)</title><rect x="492.4" y="419.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="495.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.of (138 samples, 0.07%)</title><rect x="493.8" y="451.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.8" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shkalev.Row (138 samples, 0.07%)</title><rect x="493.8" y="435.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="496.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$304/1085496263.compare (870 samples, 0.41%)</title><rect x="494.6" y="515.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="497.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (870 samples, 0.41%)</title><rect x="494.6" y="499.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (870 samples, 0.41%)</title><rect x="494.6" y="483.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.6" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (849 samples, 0.40%)</title><rect x="494.6" y="467.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (849 samples, 0.40%)</title><rect x="494.6" y="451.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.6" y="462.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (849 samples, 0.40%)</title><rect x="494.6" y="435.0" width="4.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="497.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$305/1541545370.apply (451 samples, 0.21%)</title><rect x="499.4" y="627.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="502.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (451 samples, 0.21%)</title><rect x="499.4" y="611.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="502.4" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (449 samples, 0.21%)</title><rect x="499.4" y="595.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="502.4" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (449 samples, 0.21%)</title><rect x="499.4" y="579.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="502.4" y="590.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (449 samples, 0.21%)</title><rect x="499.4" y="563.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="502.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.rowIterator (33,473 samples, 15.82%)</title><rect x="501.9" y="643.0" width="186.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.9" y="654.0">ru/mail/polis/dao/shkale..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (7,598 samples, 3.59%)</title><rect x="501.9" y="627.0" width="42.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.9" y="638.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5,861 samples, 2.77%)</title><rect x="501.9" y="611.0" width="32.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.9" y="622.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5,828 samples, 2.75%)</title><rect x="502.1" y="595.0" width="32.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.1" y="606.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (279 samples, 0.13%)</title><rect x="502.3" y="579.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.3" y="590.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (279 samples, 0.13%)</title><rect x="502.3" y="563.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="505.3" y="574.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (53 samples, 0.03%)</title><rect x="503.8" y="579.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="506.8" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (50 samples, 0.02%)</title><rect x="504.1" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.1" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.02%)</title><rect x="504.1" y="563.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="507.1" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5,415 samples, 2.56%)</title><rect x="504.4" y="579.0" width="30.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.4" y="590.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5,415 samples, 2.56%)</title><rect x="504.4" y="563.0" width="30.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.4" y="574.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (122 samples, 0.06%)</title><rect x="504.4" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (122 samples, 0.06%)</title><rect x="504.4" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.4" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (122 samples, 0.06%)</title><rect x="504.4" y="515.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="507.4" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5,293 samples, 2.50%)</title><rect x="505.1" y="547.0" width="29.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.1" y="558.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5,293 samples, 2.50%)</title><rect x="505.1" y="531.0" width="29.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.1" y="542.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,293 samples, 2.50%)</title><rect x="505.1" y="515.0" width="29.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.1" y="526.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,293 samples, 2.50%)</title><rect x="505.1" y="499.0" width="29.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.1" y="510.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3,484 samples, 1.65%)</title><rect x="505.1" y="483.0" width="19.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (68 samples, 0.03%)</title><rect x="505.1" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$305/1541545370.apply (68 samples, 0.03%)</title><rect x="505.1" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (68 samples, 0.03%)</title><rect x="505.1" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.1" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (68 samples, 0.03%)</title><rect x="505.1" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.1" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (68 samples, 0.03%)</title><rect x="505.1" y="403.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="508.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (3,416 samples, 1.61%)</title><rect x="505.5" y="467.0" width="19.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (3,416 samples, 1.61%)</title><rect x="505.5" y="451.0" width="19.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getRowAt (3,416 samples, 1.61%)</title><rect x="505.5" y="435.0" width="19.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.5" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (763 samples, 0.36%)</title><rect x="505.5" y="419.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.5" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (763 samples, 0.36%)</title><rect x="505.5" y="403.0" width="4.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="508.5" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (741 samples, 0.35%)</title><rect x="509.7" y="419.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.7" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (741 samples, 0.35%)</title><rect x="509.7" y="403.0" width="4.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="512.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (1,467 samples, 0.69%)</title><rect x="513.9" y="419.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.9" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (761 samples, 0.36%)</title><rect x="513.9" y="403.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.9" y="414.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (761 samples, 0.36%)</title><rect x="513.9" y="387.0" width="4.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="516.9" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (706 samples, 0.33%)</title><rect x="518.1" y="403.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.1" y="414.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (706 samples, 0.33%)</title><rect x="518.1" y="387.0" width="3.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="521.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.of (445 samples, 0.21%)</title><rect x="522.0" y="419.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.0" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shkalev.Row (445 samples, 0.21%)</title><rect x="522.0" y="403.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="525.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$304/1085496263.compare (1,809 samples, 0.85%)</title><rect x="524.5" y="483.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (1,809 samples, 0.85%)</title><rect x="524.5" y="467.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (1,809 samples, 0.85%)</title><rect x="524.5" y="451.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.5" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,809 samples, 0.85%)</title><rect x="524.5" y="435.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.5" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,809 samples, 0.85%)</title><rect x="524.5" y="419.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.5" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,809 samples, 0.85%)</title><rect x="524.5" y="403.0" width="10.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="527.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,737 samples, 0.82%)</title><rect x="534.6" y="611.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,735 samples, 0.82%)</title><rect x="534.6" y="595.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,735 samples, 0.82%)</title><rect x="534.6" y="579.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.6" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (765 samples, 0.36%)</title><rect x="534.6" y="563.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="537.6" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (765 samples, 0.36%)</title><rect x="534.6" y="547.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="537.6" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (765 samples, 0.36%)</title><rect x="534.6" y="531.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (765 samples, 0.36%)</title><rect x="534.6" y="515.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (765 samples, 0.36%)</title><rect x="534.6" y="499.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$304/1085496263.compare (765 samples, 0.36%)</title><rect x="534.6" y="483.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (765 samples, 0.36%)</title><rect x="534.6" y="467.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (765 samples, 0.36%)</title><rect x="534.6" y="451.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.6" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (752 samples, 0.36%)</title><rect x="534.6" y="435.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.6" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (752 samples, 0.36%)</title><rect x="534.6" y="419.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.6" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (752 samples, 0.36%)</title><rect x="534.6" y="403.0" width="4.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="537.6" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (970 samples, 0.46%)</title><rect x="538.9" y="563.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.9" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (970 samples, 0.46%)</title><rect x="538.9" y="547.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="541.9" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (970 samples, 0.46%)</title><rect x="538.9" y="531.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.9" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (970 samples, 0.46%)</title><rect x="538.9" y="515.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (970 samples, 0.46%)</title><rect x="538.9" y="499.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.9" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (970 samples, 0.46%)</title><rect x="538.9" y="483.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.9" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (492 samples, 0.23%)</title><rect x="538.9" y="467.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="541.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (492 samples, 0.23%)</title><rect x="538.9" y="451.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (492 samples, 0.23%)</title><rect x="538.9" y="435.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getRowAt (492 samples, 0.23%)</title><rect x="538.9" y="419.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.9" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (122 samples, 0.06%)</title><rect x="538.9" y="403.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.9" y="414.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (122 samples, 0.06%)</title><rect x="538.9" y="387.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="541.9" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (99 samples, 0.05%)</title><rect x="539.6" y="403.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.6" y="414.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (99 samples, 0.05%)</title><rect x="539.6" y="387.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="542.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (206 samples, 0.10%)</title><rect x="540.1" y="403.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.1" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (97 samples, 0.05%)</title><rect x="540.1" y="387.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.1" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (97 samples, 0.05%)</title><rect x="540.1" y="371.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="543.1" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (109 samples, 0.05%)</title><rect x="540.6" y="387.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.6" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (109 samples, 0.05%)</title><rect x="540.6" y="371.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="543.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.of (65 samples, 0.03%)</title><rect x="541.3" y="403.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.3" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shkalev.Row (65 samples, 0.03%)</title><rect x="541.3" y="387.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="544.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$304/1085496263.compare (478 samples, 0.23%)</title><rect x="541.6" y="467.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (478 samples, 0.23%)</title><rect x="541.6" y="451.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="544.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (478 samples, 0.23%)</title><rect x="541.6" y="435.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="544.6" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (448 samples, 0.21%)</title><rect x="541.6" y="419.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.6" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (448 samples, 0.21%)</title><rect x="541.6" y="403.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.6" y="414.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (448 samples, 0.21%)</title><rect x="541.6" y="387.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="544.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (25,875 samples, 12.23%)</title><rect x="544.3" y="627.0" width="144.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.3" y="638.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>java.util.ArrayList (308 samples, 0.15%)</title><rect x="544.3" y="611.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="547.3" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (110 samples, 0.05%)</title><rect x="546.0" y="611.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (110 samples, 0.05%)</title><rect x="546.0" y="595.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.0" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (110 samples, 0.05%)</title><rect x="546.0" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="549.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (110 samples, 0.05%)</title><rect x="546.0" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.0" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (110 samples, 0.05%)</title><rect x="546.0" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.0" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (103 samples, 0.05%)</title><rect x="546.0" y="531.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="549.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (55 samples, 0.03%)</title><rect x="546.6" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.6" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (55 samples, 0.03%)</title><rect x="546.6" y="595.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="549.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.iterator (24,769 samples, 11.70%)</title><rect x="546.9" y="611.0" width="138.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="549.9" y="622.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru.mail.polis.dao.shkalev.FileTable$1 (361 samples, 0.17%)</title><rect x="546.9" y="595.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="549.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.&lt;init&gt; (24,408 samples, 11.53%)</title><rect x="548.9" y="595.0" width="136.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.9" y="606.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getOffsetsIndex (24,408 samples, 11.53%)</title><rect x="548.9" y="579.0" width="136.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.9" y="590.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (24,408 samples, 11.53%)</title><rect x="548.9" y="563.0" width="136.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="551.9" y="574.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12,101 samples, 5.72%)</title><rect x="548.9" y="547.0" width="67.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.9" y="558.0">java/ni..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (12,101 samples, 5.72%)</title><rect x="548.9" y="531.0" width="67.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="551.9" y="542.0">java.ni..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (12,307 samples, 5.82%)</title><rect x="616.4" y="547.0" width="68.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.4" y="558.0">java/ni..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (12,307 samples, 5.82%)</title><rect x="616.4" y="531.0" width="68.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="619.4" y="542.0">java.ni..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.iterator (633 samples, 0.30%)</title><rect x="685.0" y="611.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (246 samples, 0.12%)</title><rect x="685.0" y="595.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (199 samples, 0.09%)</title><rect x="685.0" y="579.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (170 samples, 0.08%)</title><rect x="685.2" y="563.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="688.2" y="574.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (50 samples, 0.02%)</title><rect x="685.2" y="547.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="688.2" y="558.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (59 samples, 0.03%)</title><rect x="685.6" y="547.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="688.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (47 samples, 0.02%)</title><rect x="686.2" y="579.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.2" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (45 samples, 0.02%)</title><rect x="686.2" y="563.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="689.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (385 samples, 0.18%)</title><rect x="686.4" y="595.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (127 samples, 0.06%)</title><rect x="686.6" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (127 samples, 0.06%)</title><rect x="686.6" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (127 samples, 0.06%)</title><rect x="686.6" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (127 samples, 0.06%)</title><rect x="686.6" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (127 samples, 0.06%)</title><rect x="686.6" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.6" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (121 samples, 0.06%)</title><rect x="686.6" y="499.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="689.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (48 samples, 0.02%)</title><rect x="687.3" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (48 samples, 0.02%)</title><rect x="687.3" y="563.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="690.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.iterator (172 samples, 0.08%)</title><rect x="687.6" y="579.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (67 samples, 0.03%)</title><rect x="687.8" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (67 samples, 0.03%)</title><rect x="687.8" y="547.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="690.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (77 samples, 0.04%)</title><rect x="688.1" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (77 samples, 0.04%)</title><rect x="688.1" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (77 samples, 0.04%)</title><rect x="688.1" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (77 samples, 0.04%)</title><rect x="688.1" y="515.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="691.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (108 samples, 0.05%)</title><rect x="688.6" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.6" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (108 samples, 0.05%)</title><rect x="688.6" y="627.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.6" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (108 samples, 0.05%)</title><rect x="688.6" y="611.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.6" y="622.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (108 samples, 0.05%)</title><rect x="688.6" y="595.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="691.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ServiceUtils.responseFromRow (609 samples, 0.29%)</title><rect x="689.2" y="675.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="692.2" y="686.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.03%)</title><rect x="689.2" y="659.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="692.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/8805846.linkToTargetMethod (104 samples, 0.05%)</title><rect x="689.5" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1292840146.invoke (104 samples, 0.05%)</title><rect x="689.5" y="643.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (104 samples, 0.05%)</title><rect x="689.5" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (68 samples, 0.03%)</title><rect x="689.7" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (68 samples, 0.03%)</title><rect x="689.7" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.7" y="606.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.03%)</title><rect x="689.7" y="579.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="692.7" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (48 samples, 0.02%)</title><rect x="690.1" y="659.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="693.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (151 samples, 0.07%)</title><rect x="690.3" y="659.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="693.3" y="670.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.03%)</title><rect x="690.3" y="643.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="693.3" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (55 samples, 0.03%)</title><rect x="690.6" y="643.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="693.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getValue (246 samples, 0.12%)</title><rect x="691.2" y="659.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.2" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (246 samples, 0.12%)</title><rect x="691.2" y="643.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.2" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (246 samples, 0.12%)</title><rect x="691.2" y="627.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.2" y="638.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (246 samples, 0.12%)</title><rect x="691.2" y="611.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="694.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (15,048 samples, 7.11%)</title><rect x="692.6" y="803.0" width="83.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.6" y="814.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (15,048 samples, 7.11%)</title><rect x="692.6" y="787.0" width="83.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.6" y="798.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (15,048 samples, 7.11%)</title><rect x="692.6" y="771.0" width="83.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.6" y="782.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (15,048 samples, 7.11%)</title><rect x="692.6" y="755.0" width="83.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.6" y="766.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (15,048 samples, 7.11%)</title><rect x="692.6" y="739.0" width="83.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.6" y="750.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (12,276 samples, 5.80%)</title><rect x="692.6" y="723.0" width="68.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.6" y="734.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (12,276 samples, 5.80%)</title><rect x="692.6" y="707.0" width="68.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.6" y="718.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$137/1985808388.get (12,276 samples, 5.80%)</title><rect x="692.6" y="691.0" width="68.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.6" y="702.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$113/1712326348.action (372 samples, 0.18%)</title><rect x="692.6" y="675.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$executePut$3 (372 samples, 0.18%)</title><rect x="692.6" y="659.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.put (372 samples, 0.18%)</title><rect x="692.6" y="643.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (181 samples, 0.09%)</title><rect x="692.6" y="627.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.6" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (181 samples, 0.09%)</title><rect x="692.6" y="611.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.6" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (181 samples, 0.09%)</title><rect x="692.6" y="595.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="695.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (106 samples, 0.05%)</title><rect x="693.7" y="627.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.upsert (54 samples, 0.03%)</title><rect x="694.3" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.upsert (54 samples, 0.03%)</title><rect x="694.3" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="697.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.upsert (54 samples, 0.03%)</title><rect x="694.3" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.of (45 samples, 0.02%)</title><rect x="694.4" y="579.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.4" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shkalev.Row (45 samples, 0.02%)</title><rect x="694.4" y="563.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="697.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$302/798050743.action (11,904 samples, 5.63%)</title><rect x="694.6" y="675.0" width="66.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.6" y="686.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$executeGet$0 (11,904 samples, 5.63%)</title><rect x="694.6" y="659.0" width="66.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="697.6" y="670.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.get (11,904 samples, 5.63%)</title><rect x="694.6" y="643.0" width="66.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.6" y="654.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.getRow (11,713 samples, 5.53%)</title><rect x="694.6" y="627.0" width="65.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.6" y="638.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.rowBy (11,713 samples, 5.53%)</title><rect x="694.6" y="611.0" width="65.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.6" y="622.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,187 samples, 0.56%)</title><rect x="694.6" y="595.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,047 samples, 0.49%)</title><rect x="694.6" y="579.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.6" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (486 samples, 0.23%)</title><rect x="694.6" y="563.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="697.6" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (486 samples, 0.23%)</title><rect x="694.6" y="547.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="697.6" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (486 samples, 0.23%)</title><rect x="694.6" y="531.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (486 samples, 0.23%)</title><rect x="694.6" y="515.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (486 samples, 0.23%)</title><rect x="694.6" y="499.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$304/1085496263.compare (486 samples, 0.23%)</title><rect x="694.6" y="483.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (486 samples, 0.23%)</title><rect x="694.6" y="467.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (486 samples, 0.23%)</title><rect x="694.6" y="451.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.6" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (473 samples, 0.22%)</title><rect x="694.6" y="435.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.6" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (473 samples, 0.22%)</title><rect x="694.6" y="419.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.6" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (473 samples, 0.22%)</title><rect x="694.6" y="403.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="697.6" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (561 samples, 0.27%)</title><rect x="697.3" y="563.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.3" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (561 samples, 0.27%)</title><rect x="697.3" y="547.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.3" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (561 samples, 0.27%)</title><rect x="697.3" y="531.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.3" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (561 samples, 0.27%)</title><rect x="697.3" y="515.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.3" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (561 samples, 0.27%)</title><rect x="697.3" y="499.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (561 samples, 0.27%)</title><rect x="697.3" y="483.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (328 samples, 0.15%)</title><rect x="697.3" y="467.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (328 samples, 0.15%)</title><rect x="697.3" y="451.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (328 samples, 0.15%)</title><rect x="697.3" y="435.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getRowAt (328 samples, 0.15%)</title><rect x="697.3" y="419.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.3" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (78 samples, 0.04%)</title><rect x="697.3" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.3" y="414.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (78 samples, 0.04%)</title><rect x="697.3" y="387.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="700.3" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (69 samples, 0.03%)</title><rect x="697.8" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.8" y="414.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (69 samples, 0.03%)</title><rect x="697.8" y="387.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="700.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (145 samples, 0.07%)</title><rect x="698.2" y="403.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.2" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (68 samples, 0.03%)</title><rect x="698.2" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.2" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (68 samples, 0.03%)</title><rect x="698.2" y="371.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="701.2" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (77 samples, 0.04%)</title><rect x="698.5" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.5" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (77 samples, 0.04%)</title><rect x="698.5" y="371.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="701.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$304/1085496263.compare (233 samples, 0.11%)</title><rect x="699.2" y="467.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (233 samples, 0.11%)</title><rect x="699.2" y="451.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (233 samples, 0.11%)</title><rect x="699.2" y="435.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.2" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (227 samples, 0.11%)</title><rect x="699.2" y="419.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.2" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (227 samples, 0.11%)</title><rect x="699.2" y="403.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.2" y="414.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (227 samples, 0.11%)</title><rect x="699.2" y="387.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="702.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$305/1541545370.apply (140 samples, 0.07%)</title><rect x="700.5" y="579.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="703.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (140 samples, 0.07%)</title><rect x="700.5" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.5" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (137 samples, 0.06%)</title><rect x="700.5" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.5" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (137 samples, 0.06%)</title><rect x="700.5" y="531.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.5" y="542.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (137 samples, 0.06%)</title><rect x="700.5" y="515.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="703.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.rowIterator (10,489 samples, 4.96%)</title><rect x="701.3" y="595.0" width="58.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.3" y="606.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (2,360 samples, 1.12%)</title><rect x="701.3" y="579.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.3" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,838 samples, 0.87%)</title><rect x="701.3" y="563.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.3" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,828 samples, 0.86%)</title><rect x="701.3" y="547.0" width="10.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.3" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (114 samples, 0.05%)</title><rect x="701.4" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.4" y="542.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (114 samples, 0.05%)</title><rect x="701.4" y="515.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="704.4" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,668 samples, 0.79%)</title><rect x="702.2" y="531.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.2" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,668 samples, 0.79%)</title><rect x="702.2" y="515.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="705.2" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,632 samples, 0.77%)</title><rect x="702.4" y="499.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.4" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,632 samples, 0.77%)</title><rect x="702.4" y="483.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,632 samples, 0.77%)</title><rect x="702.4" y="467.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.4" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,632 samples, 0.77%)</title><rect x="702.4" y="451.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,063 samples, 0.50%)</title><rect x="702.4" y="435.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (1,043 samples, 0.49%)</title><rect x="702.5" y="419.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (1,043 samples, 0.49%)</title><rect x="702.5" y="403.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getRowAt (1,043 samples, 0.49%)</title><rect x="702.5" y="387.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.5" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (228 samples, 0.11%)</title><rect x="702.5" y="371.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.5" y="382.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (228 samples, 0.11%)</title><rect x="702.5" y="355.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="705.5" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (228 samples, 0.11%)</title><rect x="703.8" y="371.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.8" y="382.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (228 samples, 0.11%)</title><rect x="703.8" y="355.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="706.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (479 samples, 0.23%)</title><rect x="705.1" y="371.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.1" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (247 samples, 0.12%)</title><rect x="705.1" y="355.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.1" y="366.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (247 samples, 0.12%)</title><rect x="705.1" y="339.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="708.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (232 samples, 0.11%)</title><rect x="706.4" y="355.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.4" y="366.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (232 samples, 0.11%)</title><rect x="706.4" y="339.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="709.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.of (108 samples, 0.05%)</title><rect x="707.7" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.7" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shkalev.Row (108 samples, 0.05%)</title><rect x="707.7" y="355.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="710.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$304/1085496263.compare (569 samples, 0.27%)</title><rect x="708.3" y="435.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (569 samples, 0.27%)</title><rect x="708.3" y="419.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (569 samples, 0.27%)</title><rect x="708.3" y="403.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.3" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (569 samples, 0.27%)</title><rect x="708.3" y="387.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.3" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (569 samples, 0.27%)</title><rect x="708.3" y="371.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.3" y="382.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (569 samples, 0.27%)</title><rect x="708.3" y="355.0" width="3.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="711.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (522 samples, 0.25%)</title><rect x="711.5" y="563.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (521 samples, 0.25%)</title><rect x="711.5" y="547.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (521 samples, 0.25%)</title><rect x="711.5" y="531.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.5" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (216 samples, 0.10%)</title><rect x="711.5" y="515.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (216 samples, 0.10%)</title><rect x="711.5" y="499.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (216 samples, 0.10%)</title><rect x="711.5" y="483.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (216 samples, 0.10%)</title><rect x="711.5" y="467.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (216 samples, 0.10%)</title><rect x="711.5" y="451.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$304/1085496263.compare (216 samples, 0.10%)</title><rect x="711.5" y="435.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (216 samples, 0.10%)</title><rect x="711.5" y="419.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (216 samples, 0.10%)</title><rect x="711.5" y="403.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.5" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (215 samples, 0.10%)</title><rect x="711.5" y="387.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.5" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (215 samples, 0.10%)</title><rect x="711.5" y="371.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.5" y="382.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (215 samples, 0.10%)</title><rect x="711.5" y="355.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="714.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (305 samples, 0.14%)</title><rect x="712.7" y="515.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (305 samples, 0.14%)</title><rect x="712.7" y="499.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (305 samples, 0.14%)</title><rect x="712.7" y="483.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (305 samples, 0.14%)</title><rect x="712.7" y="467.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="715.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (305 samples, 0.14%)</title><rect x="712.7" y="451.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="715.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (305 samples, 0.14%)</title><rect x="712.7" y="435.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (167 samples, 0.08%)</title><rect x="712.7" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (167 samples, 0.08%)</title><rect x="712.7" y="403.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="715.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (167 samples, 0.08%)</title><rect x="712.7" y="387.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getRowAt (167 samples, 0.08%)</title><rect x="712.7" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (65 samples, 0.03%)</title><rect x="713.1" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils$$Lambda$304/1085496263.compare (138 samples, 0.07%)</title><rect x="713.6" y="419.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="716.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.compareTo (138 samples, 0.07%)</title><rect x="713.6" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="716.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (138 samples, 0.07%)</title><rect x="713.6" y="387.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="716.6" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (134 samples, 0.06%)</title><rect x="713.6" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.6" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (134 samples, 0.06%)</title><rect x="713.6" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.6" y="366.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (134 samples, 0.06%)</title><rect x="713.6" y="339.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="716.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (8,129 samples, 3.84%)</title><rect x="714.4" y="579.0" width="45.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.4" y="590.0">ru/m..</text>
</g>
<g>
<title>java.util.ArrayList (70 samples, 0.03%)</title><rect x="714.4" y="563.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="717.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.iterator (7,816 samples, 3.69%)</title><rect x="715.1" y="563.0" width="43.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.1" y="574.0">ru/m..</text>
</g>
<g>
<title>ru.mail.polis.dao.shkalev.FileTable$1 (112 samples, 0.05%)</title><rect x="715.1" y="547.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="718.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.&lt;init&gt; (7,704 samples, 3.64%)</title><rect x="715.7" y="547.0" width="43.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.7" y="558.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getOffsetsIndex (7,704 samples, 3.64%)</title><rect x="715.7" y="531.0" width="43.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.7" y="542.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (7,704 samples, 3.64%)</title><rect x="715.7" y="515.0" width="43.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.7" y="526.0">ru/m..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3,878 samples, 1.83%)</title><rect x="715.7" y="499.0" width="21.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.7" y="510.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (3,878 samples, 1.83%)</title><rect x="715.7" y="483.0" width="21.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="718.7" y="494.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (3,826 samples, 1.81%)</title><rect x="737.4" y="499.0" width="21.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.4" y="510.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (3,826 samples, 1.81%)</title><rect x="737.4" y="483.0" width="21.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="740.4" y="494.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.iterator (187 samples, 0.09%)</title><rect x="758.7" y="563.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="761.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (68 samples, 0.03%)</title><rect x="758.7" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="761.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (57 samples, 0.03%)</title><rect x="758.7" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="761.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (51 samples, 0.02%)</title><rect x="758.7" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (119 samples, 0.06%)</title><rect x="759.1" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.iterator (59 samples, 0.03%)</title><rect x="759.4" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ServiceUtils.responseFromRow (191 samples, 0.09%)</title><rect x="759.9" y="627.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (50 samples, 0.02%)</title><rect x="760.3" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getValue (70 samples, 0.03%)</title><rect x="760.6" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.6" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (70 samples, 0.03%)</title><rect x="760.6" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.6" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (70 samples, 0.03%)</title><rect x="760.6" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="763.6" y="590.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (70 samples, 0.03%)</title><rect x="760.6" y="563.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="763.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (2,772 samples, 1.31%)</title><rect x="761.0" y="723.0" width="15.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,014 samples, 0.48%)</title><rect x="761.0" y="707.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$136/527355698.apply (1,014 samples, 0.48%)</title><rect x="761.0" y="691.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ServiceUtils.parse (1,014 samples, 0.48%)</title><rect x="761.0" y="675.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/8805846.linkToTargetMethod (198 samples, 0.09%)</title><rect x="761.0" y="659.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="764.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1292840146.invoke (198 samples, 0.09%)</title><rect x="761.0" y="643.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (198 samples, 0.09%)</title><rect x="761.0" y="627.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (75 samples, 0.04%)</title><rect x="761.0" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.0" y="622.0"></text>
</g>
<g>
<title>java.lang.String (75 samples, 0.04%)</title><rect x="761.0" y="595.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="764.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (123 samples, 0.06%)</title><rect x="761.4" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (123 samples, 0.06%)</title><rect x="761.4" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.4" y="606.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.06%)</title><rect x="761.4" y="579.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="764.4" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (105 samples, 0.05%)</title><rect x="762.1" y="659.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="765.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (322 samples, 0.15%)</title><rect x="762.7" y="659.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.7" y="670.0"></text>
</g>
<g>
<title>byte[] (137 samples, 0.06%)</title><rect x="762.7" y="643.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="765.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (102 samples, 0.05%)</title><rect x="763.5" y="643.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="766.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.04%)</title><rect x="764.0" y="643.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="767.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ServiceUtils.getTimeStamp (389 samples, 0.18%)</title><rect x="764.5" y="659.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="767.5" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (389 samples, 0.18%)</title><rect x="764.5" y="643.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.5" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (297 samples, 0.14%)</title><rect x="764.5" y="627.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.5" y="638.0"></text>
</g>
<g>
<title>java/util/List.spliterator (101 samples, 0.05%)</title><rect x="764.5" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="767.5" y="622.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (101 samples, 0.05%)</title><rect x="764.5" y="595.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="767.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (196 samples, 0.09%)</title><rect x="765.1" y="611.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.1" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (196 samples, 0.09%)</title><rect x="765.1" y="595.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="768.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (92 samples, 0.04%)</title><rect x="766.2" y="627.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (92 samples, 0.04%)</title><rect x="766.2" y="611.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="769.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (92 samples, 0.04%)</title><rect x="766.2" y="595.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$60/915416632.get (75 samples, 0.04%)</title><rect x="766.2" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.2" y="590.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (75 samples, 0.04%)</title><rect x="766.2" y="563.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="769.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,758 samples, 0.83%)</title><rect x="766.7" y="707.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,758 samples, 0.83%)</title><rect x="766.7" y="691.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$142/241556689.accept (125 samples, 0.06%)</title><rect x="766.7" y="675.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$collect$11 (125 samples, 0.06%)</title><rect x="766.7" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (125 samples, 0.06%)</title><rect x="766.7" y="643.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (125 samples, 0.06%)</title><rect x="766.7" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (125 samples, 0.06%)</title><rect x="766.7" y="611.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (125 samples, 0.06%)</title><rect x="766.7" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (125 samples, 0.06%)</title><rect x="766.7" y="579.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="769.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$146/1096399172.accept (1,633 samples, 0.77%)</title><rect x="767.4" y="675.0" width="9.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$sendActualResponse$9 (1,633 samples, 0.77%)</title><rect x="767.4" y="659.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.4" y="670.0"></text>
</g>
<g>
<title>java/util/Collection.stream (299 samples, 0.14%)</title><rect x="767.4" y="643.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.spliterator (72 samples, 0.03%)</title><rect x="767.4" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="770.4" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySpliterator (72 samples, 0.03%)</title><rect x="767.4" y="611.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="770.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.spliterator (54 samples, 0.03%)</title><rect x="767.8" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="770.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$CLDSpliterator (54 samples, 0.03%)</title><rect x="767.8" y="611.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="770.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (173 samples, 0.08%)</title><rect x="768.1" y="627.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.1" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (173 samples, 0.08%)</title><rect x="768.1" y="611.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="771.1" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparingLong (59 samples, 0.03%)</title><rect x="769.2" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (113 samples, 0.05%)</title><rect x="769.7" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="772.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (113 samples, 0.05%)</title><rect x="769.7" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="772.7" y="638.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (50 samples, 0.02%)</title><rect x="769.7" y="611.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="772.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (462 samples, 0.22%)</title><rect x="770.3" y="643.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (408 samples, 0.19%)</title><rect x="770.3" y="627.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (408 samples, 0.19%)</title><rect x="770.3" y="611.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (363 samples, 0.17%)</title><rect x="770.3" y="595.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (363 samples, 0.17%)</title><rect x="770.3" y="579.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="773.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$CLDSpliterator.forEachRemaining (291 samples, 0.14%)</title><rect x="770.3" y="563.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="773.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (291 samples, 0.14%)</title><rect x="770.3" y="547.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$44/2131952342.accept (291 samples, 0.14%)</title><rect x="770.3" y="531.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="773.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (291 samples, 0.14%)</title><rect x="770.3" y="515.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (291 samples, 0.14%)</title><rect x="770.3" y="499.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (160 samples, 0.08%)</title><rect x="770.3" y="483.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="773.3" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (160 samples, 0.08%)</title><rect x="770.3" y="467.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="773.3" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (131 samples, 0.06%)</title><rect x="771.2" y="483.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.2" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (131 samples, 0.06%)</title><rect x="771.2" y="467.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="774.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (72 samples, 0.03%)</title><rect x="771.9" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/1989335500.get (72 samples, 0.03%)</title><rect x="771.9" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.9" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap (72 samples, 0.03%)</title><rect x="771.9" y="531.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="774.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (45 samples, 0.02%)</title><rect x="772.3" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (45 samples, 0.02%)</title><rect x="772.3" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.3" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (45 samples, 0.02%)</title><rect x="772.3" y="563.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="775.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (54 samples, 0.03%)</title><rect x="772.6" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.6" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (54 samples, 0.03%)</title><rect x="772.6" y="611.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="775.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (426 samples, 0.20%)</title><rect x="772.9" y="643.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (398 samples, 0.19%)</title><rect x="773.0" y="627.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (358 samples, 0.17%)</title><rect x="773.0" y="611.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (358 samples, 0.17%)</title><rect x="773.0" y="595.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (285 samples, 0.13%)</title><rect x="773.0" y="579.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (285 samples, 0.13%)</title><rect x="773.0" y="563.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (285 samples, 0.13%)</title><rect x="773.0" y="547.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (285 samples, 0.13%)</title><rect x="773.0" y="531.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.0" y="542.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$300/814666045.apply (285 samples, 0.13%)</title><rect x="773.0" y="515.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.0" y="526.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (285 samples, 0.13%)</title><rect x="773.0" y="499.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.0" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$299/2112209956.compare (285 samples, 0.13%)</title><rect x="773.0" y="483.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.0" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (285 samples, 0.13%)</title><rect x="773.0" y="467.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.0" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$298/1142469953.compare (285 samples, 0.13%)</title><rect x="773.0" y="451.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.0" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (285 samples, 0.13%)</title><rect x="773.0" y="435.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$297/1599975337.applyAsLong (285 samples, 0.13%)</title><rect x="773.0" y="419.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$sendActualResponse$8 (285 samples, 0.13%)</title><rect x="773.0" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ServiceUtils.getTimeStamp (285 samples, 0.13%)</title><rect x="773.0" y="387.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (285 samples, 0.13%)</title><rect x="773.0" y="371.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (285 samples, 0.13%)</title><rect x="773.0" y="355.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="776.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (285 samples, 0.13%)</title><rect x="773.0" y="339.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (134 samples, 0.06%)</title><rect x="773.0" y="323.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="776.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (151 samples, 0.07%)</title><rect x="773.8" y="323.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.8" y="334.0"></text>
</g>
<g>
<title>byte[] (151 samples, 0.07%)</title><rect x="773.8" y="307.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="776.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (46 samples, 0.02%)</title><rect x="774.6" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (46 samples, 0.02%)</title><rect x="774.6" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.6" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (46 samples, 0.02%)</title><rect x="774.6" y="547.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="777.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.sendResponse (221 samples, 0.10%)</title><rect x="775.2" y="643.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="778.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (221 samples, 0.10%)</title><rect x="775.2" y="627.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="778.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (221 samples, 0.10%)</title><rect x="775.2" y="611.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (154 samples, 0.07%)</title><rect x="775.2" y="595.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="778.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (154 samples, 0.07%)</title><rect x="775.2" y="579.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.2" y="590.0"></text>
</g>
<g>
<title>byte[] (154 samples, 0.07%)</title><rect x="775.2" y="563.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="778.2" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (67 samples, 0.03%)</title><rect x="776.1" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.1" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (67 samples, 0.03%)</title><rect x="776.1" y="579.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="779.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (15,014 samples, 7.09%)</title><rect x="776.5" y="803.0" width="83.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="779.5" y="814.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (441 samples, 0.21%)</title><rect x="776.5" y="787.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (441 samples, 0.21%)</title><rect x="776.5" y="771.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$229/1709626683.get$Lambda (184 samples, 0.09%)</title><rect x="776.5" y="755.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.5" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$229 (184 samples, 0.09%)</title><rect x="776.5" y="739.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="779.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$231/1149388540.get$Lambda (137 samples, 0.06%)</title><rect x="777.5" y="755.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.5" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$231 (137 samples, 0.06%)</title><rect x="777.5" y="739.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="780.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$233/641004471.get$Lambda (120 samples, 0.06%)</title><rect x="778.3" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.3" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$233 (120 samples, 0.06%)</title><rect x="778.3" y="739.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="781.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/673068808.linkToTargetMethod (311 samples, 0.15%)</title><rect x="778.9" y="787.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (311 samples, 0.15%)</title><rect x="778.9" y="771.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$230/602743348.get$Lambda (311 samples, 0.15%)</title><rect x="778.9" y="755.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.9" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$230 (311 samples, 0.15%)</title><rect x="778.9" y="739.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="781.9" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3,118 samples, 1.47%)</title><rect x="780.7" y="787.0" width="17.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$231/1149388540.accept (2,607 samples, 1.23%)</title><rect x="780.7" y="771.0" width="14.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="783.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (2,607 samples, 1.23%)</title><rect x="780.7" y="755.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (2,607 samples, 1.23%)</title><rect x="780.7" y="739.0" width="14.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (2,607 samples, 1.23%)</title><rect x="780.7" y="723.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (2,607 samples, 1.23%)</title><rect x="780.7" y="707.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (2,607 samples, 1.23%)</title><rect x="780.7" y="691.0" width="14.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,607 samples, 1.23%)</title><rect x="780.7" y="675.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,607 samples, 1.23%)</title><rect x="780.7" y="659.0" width="14.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,607 samples, 1.23%)</title><rect x="780.7" y="643.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2,607 samples, 1.23%)</title><rect x="780.7" y="627.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$174/507561052.run (2,607 samples, 1.23%)</title><rect x="780.7" y="611.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2,607 samples, 1.23%)</title><rect x="780.7" y="595.0" width="14.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (550 samples, 0.26%)</title><rect x="780.7" y="579.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="783.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (550 samples, 0.26%)</title><rect x="780.7" y="563.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (550 samples, 0.26%)</title><rect x="780.7" y="547.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (265 samples, 0.13%)</title><rect x="780.7" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (265 samples, 0.13%)</title><rect x="780.7" y="515.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (265 samples, 0.13%)</title><rect x="780.7" y="499.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (265 samples, 0.13%)</title><rect x="780.7" y="483.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="783.7" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (265 samples, 0.13%)</title><rect x="780.7" y="467.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="783.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (285 samples, 0.13%)</title><rect x="782.1" y="531.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (285 samples, 0.13%)</title><rect x="782.1" y="515.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (285 samples, 0.13%)</title><rect x="782.1" y="499.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="785.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (285 samples, 0.13%)</title><rect x="782.1" y="483.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (285 samples, 0.13%)</title><rect x="782.1" y="467.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="785.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (284 samples, 0.13%)</title><rect x="782.1" y="451.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="785.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (65 samples, 0.03%)</title><rect x="783.7" y="579.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="786.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (65 samples, 0.03%)</title><rect x="783.7" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (65 samples, 0.03%)</title><rect x="783.7" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (65 samples, 0.03%)</title><rect x="783.7" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="786.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (65 samples, 0.03%)</title><rect x="783.7" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/8805846.linkToTargetMethod (50 samples, 0.02%)</title><rect x="783.7" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="786.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1785397234.invoke (50 samples, 0.02%)</title><rect x="783.7" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.02%)</title><rect x="783.7" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (50 samples, 0.02%)</title><rect x="783.7" y="451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (50 samples, 0.02%)</title><rect x="783.7" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="786.7" y="446.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.02%)</title><rect x="783.7" y="419.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="786.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (192 samples, 0.09%)</title><rect x="784.1" y="579.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (192 samples, 0.09%)</title><rect x="784.1" y="563.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="787.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (192 samples, 0.09%)</title><rect x="784.1" y="547.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/2058802352.get$Lambda (192 samples, 0.09%)</title><rect x="784.1" y="531.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240 (192 samples, 0.09%)</title><rect x="784.1" y="515.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="787.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1,800 samples, 0.85%)</title><rect x="785.2" y="579.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (870 samples, 0.41%)</title><rect x="785.2" y="563.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (553 samples, 0.26%)</title><rect x="785.2" y="547.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.2" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (553 samples, 0.26%)</title><rect x="785.2" y="531.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="788.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (317 samples, 0.15%)</title><rect x="788.2" y="547.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.2" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (317 samples, 0.15%)</title><rect x="788.2" y="531.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.2" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (317 samples, 0.15%)</title><rect x="788.2" y="515.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="791.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (930 samples, 0.44%)</title><rect x="790.0" y="563.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$167/1469714528.get (930 samples, 0.44%)</title><rect x="790.0" y="547.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (930 samples, 0.44%)</title><rect x="790.0" y="531.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (930 samples, 0.44%)</title><rect x="790.0" y="515.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (928 samples, 0.44%)</title><rect x="790.0" y="499.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="793.0" y="510.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.02%)</title><rect x="790.0" y="483.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="793.0" y="494.0"></text>
</g>
<g>
<title>byte[] (880 samples, 0.42%)</title><rect x="790.3" y="483.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="793.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$234/1884812331.accept (511 samples, 0.24%)</title><rect x="795.2" y="771.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="798.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (511 samples, 0.24%)</title><rect x="795.2" y="755.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$230/602743348.run (511 samples, 0.24%)</title><rect x="795.2" y="739.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (511 samples, 0.24%)</title><rect x="795.2" y="723.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (511 samples, 0.24%)</title><rect x="795.2" y="707.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (510 samples, 0.24%)</title><rect x="795.2" y="691.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (510 samples, 0.24%)</title><rect x="795.2" y="675.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="798.2" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (510 samples, 0.24%)</title><rect x="795.2" y="659.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="798.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1,977 samples, 0.93%)</title><rect x="798.0" y="787.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.0" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (1,977 samples, 0.93%)</title><rect x="798.0" y="771.0" width="11.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="801.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (599 samples, 0.28%)</title><rect x="809.1" y="787.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.1" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (302 samples, 0.14%)</title><rect x="809.1" y="771.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (302 samples, 0.14%)</title><rect x="809.1" y="755.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (302 samples, 0.14%)</title><rect x="809.1" y="739.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (302 samples, 0.14%)</title><rect x="809.1" y="723.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (302 samples, 0.14%)</title><rect x="809.1" y="707.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (302 samples, 0.14%)</title><rect x="809.1" y="691.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.1" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (302 samples, 0.14%)</title><rect x="809.1" y="675.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="812.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (297 samples, 0.14%)</title><rect x="810.8" y="771.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.8" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (297 samples, 0.14%)</title><rect x="810.8" y="755.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="813.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,914 samples, 0.90%)</title><rect x="812.4" y="787.0" width="10.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="815.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$180/448799969.run (967 samples, 0.46%)</title><rect x="812.4" y="771.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (967 samples, 0.46%)</title><rect x="812.4" y="755.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (967 samples, 0.46%)</title><rect x="812.4" y="739.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (967 samples, 0.46%)</title><rect x="812.4" y="723.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (967 samples, 0.46%)</title><rect x="812.4" y="707.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (967 samples, 0.46%)</title><rect x="812.4" y="691.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="815.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$174/507561052.run (967 samples, 0.46%)</title><rect x="812.4" y="675.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (967 samples, 0.46%)</title><rect x="812.4" y="659.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="815.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (939 samples, 0.44%)</title><rect x="812.4" y="643.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (939 samples, 0.44%)</title><rect x="812.4" y="627.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (632 samples, 0.30%)</title><rect x="812.4" y="611.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (632 samples, 0.30%)</title><rect x="812.4" y="595.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="815.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (632 samples, 0.30%)</title><rect x="812.4" y="579.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="815.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/8805846.linkToTargetMethod (474 samples, 0.22%)</title><rect x="812.4" y="563.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1785397234.invoke (474 samples, 0.22%)</title><rect x="812.4" y="547.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (474 samples, 0.22%)</title><rect x="812.4" y="531.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (474 samples, 0.22%)</title><rect x="812.4" y="515.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="815.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (474 samples, 0.22%)</title><rect x="812.4" y="499.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.4" y="510.0"></text>
</g>
<g>
<title>byte[] (474 samples, 0.22%)</title><rect x="812.4" y="483.0" width="2.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="815.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (158 samples, 0.07%)</title><rect x="815.1" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (158 samples, 0.07%)</title><rect x="815.1" y="547.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (158 samples, 0.07%)</title><rect x="815.1" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/2058802352.get$Lambda (158 samples, 0.07%)</title><rect x="815.1" y="515.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240 (158 samples, 0.07%)</title><rect x="815.1" y="499.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="818.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (307 samples, 0.15%)</title><rect x="815.9" y="611.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (307 samples, 0.15%)</title><rect x="815.9" y="595.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (307 samples, 0.15%)</title><rect x="815.9" y="579.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (307 samples, 0.15%)</title><rect x="815.9" y="563.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (307 samples, 0.15%)</title><rect x="815.9" y="547.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="818.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (307 samples, 0.15%)</title><rect x="815.9" y="531.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (305 samples, 0.14%)</title><rect x="815.9" y="515.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="818.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$186/793763114.run (947 samples, 0.45%)</title><rect x="817.8" y="771.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (947 samples, 0.45%)</title><rect x="817.8" y="755.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (370 samples, 0.17%)</title><rect x="817.8" y="739.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (370 samples, 0.17%)</title><rect x="817.8" y="723.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$236/1455851462.get$Lambda (370 samples, 0.17%)</title><rect x="817.8" y="707.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="820.8" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$236 (370 samples, 0.17%)</title><rect x="817.8" y="691.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="820.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (577 samples, 0.27%)</title><rect x="819.9" y="739.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (577 samples, 0.27%)</title><rect x="819.9" y="723.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (577 samples, 0.27%)</title><rect x="819.9" y="707.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.9" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (575 samples, 0.27%)</title><rect x="819.9" y="691.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="822.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,558 samples, 1.21%)</title><rect x="823.1" y="787.0" width="14.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.1" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (605 samples, 0.29%)</title><rect x="823.1" y="771.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.1" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (605 samples, 0.29%)</title><rect x="823.1" y="755.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.1" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (605 samples, 0.29%)</title><rect x="823.1" y="739.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.1" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (605 samples, 0.29%)</title><rect x="823.1" y="723.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.1" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (605 samples, 0.29%)</title><rect x="823.1" y="707.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="826.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,953 samples, 0.92%)</title><rect x="826.5" y="771.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (430 samples, 0.20%)</title><rect x="826.5" y="755.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (430 samples, 0.20%)</title><rect x="826.5" y="739.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$292/2051374944.get$Lambda (430 samples, 0.20%)</title><rect x="826.5" y="723.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.5" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$292 (430 samples, 0.20%)</title><rect x="826.5" y="707.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="829.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1,523 samples, 0.72%)</title><rect x="828.9" y="755.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.9" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (667 samples, 0.32%)</title><rect x="828.9" y="739.0" width="3.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="831.9" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (856 samples, 0.40%)</title><rect x="832.6" y="739.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.6" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (856 samples, 0.40%)</title><rect x="832.6" y="723.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.6" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (856 samples, 0.40%)</title><rect x="832.6" y="707.0" width="4.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="835.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (2,180 samples, 1.03%)</title><rect x="837.4" y="787.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (197 samples, 0.09%)</title><rect x="837.4" y="771.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (197 samples, 0.09%)</title><rect x="837.4" y="755.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$228/931790941.get$Lambda (197 samples, 0.09%)</title><rect x="837.4" y="739.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="840.4" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$228 (197 samples, 0.09%)</title><rect x="837.4" y="723.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="840.4" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,179 samples, 0.56%)</title><rect x="838.4" y="771.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="841.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (481 samples, 0.23%)</title><rect x="838.4" y="755.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.4" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (481 samples, 0.23%)</title><rect x="838.4" y="739.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="841.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (698 samples, 0.33%)</title><rect x="841.1" y="755.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.1" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (698 samples, 0.33%)</title><rect x="841.1" y="739.0" width="3.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="844.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (804 samples, 0.38%)</title><rect x="845.0" y="771.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="848.0" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (804 samples, 0.38%)</title><rect x="845.0" y="755.0" width="4.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="848.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (719 samples, 0.34%)</title><rect x="849.5" y="787.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.5" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (366 samples, 0.17%)</title><rect x="849.5" y="771.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="852.5" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (366 samples, 0.17%)</title><rect x="849.5" y="755.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="852.5" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (366 samples, 0.17%)</title><rect x="849.5" y="739.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="852.5" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (366 samples, 0.17%)</title><rect x="849.5" y="723.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="852.5" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (366 samples, 0.17%)</title><rect x="849.5" y="707.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="852.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (353 samples, 0.17%)</title><rect x="851.6" y="771.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="854.6" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (353 samples, 0.17%)</title><rect x="851.6" y="755.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.6" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (353 samples, 0.17%)</title><rect x="851.6" y="739.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.6" y="750.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (353 samples, 0.17%)</title><rect x="851.6" y="723.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="854.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (628 samples, 0.30%)</title><rect x="853.5" y="787.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (628 samples, 0.30%)</title><rect x="853.5" y="771.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (628 samples, 0.30%)</title><rect x="853.5" y="755.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="856.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (627 samples, 0.30%)</title><rect x="853.5" y="739.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (245 samples, 0.12%)</title><rect x="853.5" y="723.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.5" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (245 samples, 0.12%)</title><rect x="853.5" y="707.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="856.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (382 samples, 0.18%)</title><rect x="854.9" y="723.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="857.9" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (382 samples, 0.18%)</title><rect x="854.9" y="707.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="857.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (382 samples, 0.18%)</title><rect x="854.9" y="691.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="857.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (382 samples, 0.18%)</title><rect x="854.9" y="675.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="857.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (382 samples, 0.18%)</title><rect x="854.9" y="659.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="857.9" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (382 samples, 0.18%)</title><rect x="854.9" y="643.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="857.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (242 samples, 0.11%)</title><rect x="857.0" y="787.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (242 samples, 0.11%)</title><rect x="857.0" y="771.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="860.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (242 samples, 0.11%)</title><rect x="857.0" y="755.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (242 samples, 0.11%)</title><rect x="857.0" y="739.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="860.0" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (214 samples, 0.10%)</title><rect x="857.0" y="723.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.0" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (214 samples, 0.10%)</title><rect x="857.0" y="707.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="860.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (322 samples, 0.15%)</title><rect x="858.4" y="787.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (322 samples, 0.15%)</title><rect x="858.4" y="771.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (322 samples, 0.15%)</title><rect x="858.4" y="755.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.4" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (322 samples, 0.15%)</title><rect x="858.4" y="739.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="861.4" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (58,399 samples, 27.60%)</title><rect x="860.2" y="803.0" width="325.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.2" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,012 samples, 0.48%)</title><rect x="860.2" y="787.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.2" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,012 samples, 0.48%)</title><rect x="860.2" y="771.0" width="5.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="863.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (57,387 samples, 27.12%)</title><rect x="865.9" y="787.0" width="320.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.9" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (57,387 samples, 27.12%)</title><rect x="865.9" y="771.0" width="320.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="868.9" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (57,385 samples, 27.12%)</title><rect x="865.9" y="755.0" width="320.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.9" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (42,140 samples, 19.91%)</title><rect x="865.9" y="739.0" width="235.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="868.9" y="750.0">one/nio/http/HttpSession.handle..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (42,140 samples, 19.91%)</title><rect x="865.9" y="723.0" width="235.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="868.9" y="734.0">one/nio/http/HttpServer.handleR..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (41,361 samples, 19.54%)</title><rect x="865.9" y="707.0" width="230.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="868.9" y="718.0">RequestHandler0_entity.handleR..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,345 samples, 0.64%)</title><rect x="865.9" y="691.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,345 samples, 0.64%)</title><rect x="865.9" y="675.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="868.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,345 samples, 0.64%)</title><rect x="865.9" y="659.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.9" y="670.0"></text>
</g>
<g>
<title>java.lang.String (679 samples, 0.32%)</title><rect x="865.9" y="643.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="868.9" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (666 samples, 0.31%)</title><rect x="869.7" y="643.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.7" y="654.0"></text>
</g>
<g>
<title>byte[] (666 samples, 0.31%)</title><rect x="869.7" y="627.0" width="3.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="872.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.entity (40,016 samples, 18.91%)</title><rect x="873.4" y="691.0" width="223.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.4" y="702.0">ru/mail/polis/service/shkalev..</text>
</g>
<g>
<title>java/lang/String.getBytes (380 samples, 0.18%)</title><rect x="873.4" y="675.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (380 samples, 0.18%)</title><rect x="873.4" y="659.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (380 samples, 0.18%)</title><rect x="873.4" y="643.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (380 samples, 0.18%)</title><rect x="873.4" y="627.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.4" y="638.0"></text>
</g>
<g>
<title>byte[] (380 samples, 0.18%)</title><rect x="873.4" y="611.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="876.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (650 samples, 0.31%)</title><rect x="875.5" y="675.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="878.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (650 samples, 0.31%)</title><rect x="875.5" y="659.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.5" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (650 samples, 0.31%)</title><rect x="875.5" y="643.0" width="3.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="878.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.executeGet (12,448 samples, 5.88%)</title><rect x="879.1" y="675.0" width="69.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="882.1" y="686.0">ru/mail..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (69 samples, 0.03%)</title><rect x="879.4" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="882.4" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (69 samples, 0.03%)</title><rect x="879.4" y="643.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="882.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.collect (1,004 samples, 0.47%)</title><rect x="880.0" y="659.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="883.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1833015980.linkToTargetMethod (53 samples, 0.03%)</title><rect x="880.5" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/211888294.invokeStatic (53 samples, 0.03%)</title><rect x="880.5" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$139/1024161038.get$Lambda (53 samples, 0.03%)</title><rect x="880.5" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="883.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$139 (53 samples, 0.03%)</title><rect x="880.5" y="595.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="883.5" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (819 samples, 0.39%)</title><rect x="880.8" y="643.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="883.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$139/1024161038.accept (819 samples, 0.39%)</title><rect x="880.8" y="627.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="883.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$collect$13 (819 samples, 0.39%)</title><rect x="880.8" y="611.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.04%)</title><rect x="880.8" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="883.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.04%)</title><rect x="880.8" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="883.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$144/839902634.get$Lambda (77 samples, 0.04%)</title><rect x="880.8" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="883.8" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$144 (77 samples, 0.04%)</title><rect x="880.8" y="547.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="883.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/304881770.linkToTargetMethod (128 samples, 0.06%)</title><rect x="881.3" y="595.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1501497156.invokeStatic (128 samples, 0.06%)</title><rect x="881.3" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="884.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$142/241556689.get$Lambda (128 samples, 0.06%)</title><rect x="881.3" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.3" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$142 (128 samples, 0.06%)</title><rect x="881.3" y="547.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="884.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (308 samples, 0.15%)</title><rect x="882.0" y="595.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="885.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (308 samples, 0.15%)</title><rect x="882.0" y="579.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="885.0" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (194 samples, 0.09%)</title><rect x="882.0" y="563.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="885.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (87 samples, 0.04%)</title><rect x="883.2" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="886.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (87 samples, 0.04%)</title><rect x="883.2" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="886.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (87 samples, 0.04%)</title><rect x="883.2" y="531.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="886.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (306 samples, 0.14%)</title><rect x="883.7" y="595.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (306 samples, 0.14%)</title><rect x="883.7" y="579.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="886.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (183 samples, 0.09%)</title><rect x="883.7" y="563.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="886.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (91 samples, 0.04%)</title><rect x="884.9" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (91 samples, 0.04%)</title><rect x="884.9" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (91 samples, 0.04%)</title><rect x="884.9" y="531.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="887.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.execGet (200 samples, 0.09%)</title><rect x="885.6" y="659.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="888.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (70 samples, 0.03%)</title><rect x="885.6" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="888.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (70 samples, 0.03%)</title><rect x="885.6" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="888.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$306/2058322187.get$Lambda (70 samples, 0.03%)</title><rect x="885.6" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="888.6" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$306 (70 samples, 0.03%)</title><rect x="885.6" y="595.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="888.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.executeAsync (130 samples, 0.06%)</title><rect x="886.0" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="889.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.03%)</title><rect x="886.0" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.03%)</title><rect x="886.0" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$257/177406357.get$Lambda (58 samples, 0.03%)</title><rect x="886.0" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="889.0" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$257 (58 samples, 0.03%)</title><rect x="886.0" y="579.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="889.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (72 samples, 0.03%)</title><rect x="886.3" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="889.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (72 samples, 0.03%)</title><rect x="886.3" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (72 samples, 0.03%)</title><rect x="886.3" y="595.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="889.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.replication (10,163 samples, 4.80%)</title><rect x="886.7" y="659.0" width="56.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.7" y="670.0">ru/mai..</text>
</g>
<g>
<title>java.util.ArrayList (46 samples, 0.02%)</title><rect x="886.7" y="643.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="889.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (78 samples, 0.04%)</title><rect x="887.1" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="890.1" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (78 samples, 0.04%)</title><rect x="887.1" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="890.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (78 samples, 0.04%)</title><rect x="887.1" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.1" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (78 samples, 0.04%)</title><rect x="887.1" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.1" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (78 samples, 0.04%)</title><rect x="887.1" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="890.1" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (77 samples, 0.04%)</title><rect x="887.1" y="563.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="890.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (104 samples, 0.05%)</title><rect x="887.5" y="643.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (80 samples, 0.04%)</title><rect x="887.5" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.5" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (80 samples, 0.04%)</title><rect x="887.5" y="611.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="890.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (75 samples, 0.04%)</title><rect x="888.1" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="891.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (75 samples, 0.04%)</title><rect x="888.1" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="891.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (224 samples, 0.11%)</title><rect x="888.5" y="643.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (224 samples, 0.11%)</title><rect x="888.5" y="627.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (120 samples, 0.06%)</title><rect x="888.5" y="611.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="891.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.05%)</title><rect x="889.2" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.05%)</title><rect x="889.2" y="595.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="892.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (104 samples, 0.05%)</title><rect x="889.2" y="579.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="892.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (5,940 samples, 2.81%)</title><rect x="889.7" y="643.0" width="33.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="892.7" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (5,940 samples, 2.81%)</title><rect x="889.7" y="627.0" width="33.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.7" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (5,940 samples, 2.81%)</title><rect x="889.7" y="611.0" width="33.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.7" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (5,940 samples, 2.81%)</title><rect x="889.7" y="595.0" width="33.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.7" y="606.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.02%)</title><rect x="889.7" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.02%)</title><rect x="889.7" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$133/1603733576.get$Lambda (50 samples, 0.02%)</title><rect x="889.7" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="892.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$133 (50 samples, 0.02%)</title><rect x="889.7" y="531.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="892.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (191 samples, 0.09%)</title><rect x="890.0" y="579.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="893.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (191 samples, 0.09%)</title><rect x="890.0" y="563.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="893.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (106 samples, 0.05%)</title><rect x="890.0" y="547.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="893.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.04%)</title><rect x="890.6" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="893.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.04%)</title><rect x="890.6" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="893.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (85 samples, 0.04%)</title><rect x="890.6" y="515.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="893.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (220 samples, 0.10%)</title><rect x="891.1" y="579.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="894.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (220 samples, 0.10%)</title><rect x="891.1" y="563.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (117 samples, 0.06%)</title><rect x="891.1" y="547.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="894.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.05%)</title><rect x="891.7" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.05%)</title><rect x="891.7" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (103 samples, 0.05%)</title><rect x="891.7" y="515.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="894.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (186 samples, 0.09%)</title><rect x="892.3" y="579.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="895.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (265 samples, 0.13%)</title><rect x="893.4" y="579.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="896.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (3,013 samples, 1.42%)</title><rect x="894.8" y="579.0" width="16.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.8" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (336 samples, 0.16%)</title><rect x="894.8" y="563.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="897.8" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (282 samples, 0.13%)</title><rect x="894.8" y="547.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.8" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (98 samples, 0.05%)</title><rect x="894.8" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.8" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (98 samples, 0.05%)</title><rect x="894.8" y="515.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="897.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (184 samples, 0.09%)</title><rect x="895.4" y="531.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="898.4" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (184 samples, 0.09%)</title><rect x="895.4" y="515.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="898.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (54 samples, 0.03%)</title><rect x="896.4" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (54 samples, 0.03%)</title><rect x="896.4" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="899.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (54 samples, 0.03%)</title><rect x="896.4" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$60/915416632.get (54 samples, 0.03%)</title><rect x="896.4" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.4" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (54 samples, 0.03%)</title><rect x="896.4" y="483.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="899.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,093 samples, 0.52%)</title><rect x="896.7" y="563.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.7" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,093 samples, 0.52%)</title><rect x="896.7" y="547.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.7" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (85 samples, 0.04%)</title><rect x="896.9" y="531.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="899.9" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (135 samples, 0.06%)</title><rect x="897.4" y="531.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="900.4" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (47 samples, 0.02%)</title><rect x="898.2" y="531.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="901.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.04%)</title><rect x="898.4" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.04%)</title><rect x="898.4" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.4" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/2069775835.get$Lambda (75 samples, 0.04%)</title><rect x="898.4" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.4" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$119 (75 samples, 0.04%)</title><rect x="898.4" y="483.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="901.4" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (455 samples, 0.22%)</title><rect x="898.8" y="531.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (455 samples, 0.22%)</title><rect x="898.8" y="515.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.8" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/2069775835.accept (455 samples, 0.22%)</title><rect x="898.8" y="499.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.8" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (455 samples, 0.22%)</title><rect x="898.8" y="483.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (180 samples, 0.09%)</title><rect x="898.8" y="467.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1045516625.accept (180 samples, 0.09%)</title><rect x="898.8" y="451.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.8" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (180 samples, 0.09%)</title><rect x="898.8" y="435.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="901.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (180 samples, 0.09%)</title><rect x="898.8" y="419.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (180 samples, 0.09%)</title><rect x="898.8" y="403.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (180 samples, 0.09%)</title><rect x="898.8" y="387.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (180 samples, 0.09%)</title><rect x="898.8" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (180 samples, 0.09%)</title><rect x="898.8" y="355.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (180 samples, 0.09%)</title><rect x="898.8" y="339.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="901.8" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (155 samples, 0.07%)</title><rect x="899.8" y="467.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="902.8" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (155 samples, 0.07%)</title><rect x="899.8" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (78 samples, 0.04%)</title><rect x="899.8" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (78 samples, 0.04%)</title><rect x="899.8" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="902.8" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (78 samples, 0.04%)</title><rect x="899.8" y="403.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="902.8" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (77 samples, 0.04%)</title><rect x="900.3" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="903.3" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (77 samples, 0.04%)</title><rect x="900.3" y="419.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="903.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (120 samples, 0.06%)</title><rect x="900.7" y="467.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="903.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (120 samples, 0.06%)</title><rect x="900.7" y="451.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="903.7" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (113 samples, 0.05%)</title><rect x="901.4" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.4" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (113 samples, 0.05%)</title><rect x="901.4" y="515.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="904.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (144 samples, 0.07%)</title><rect x="902.0" y="531.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.0" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (144 samples, 0.07%)</title><rect x="902.0" y="515.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="905.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (45 samples, 0.02%)</title><rect x="902.8" y="563.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="905.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1,150 samples, 0.54%)</title><rect x="903.1" y="563.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.1" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (1,150 samples, 0.54%)</title><rect x="903.1" y="547.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.1" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,048 samples, 0.50%)</title><rect x="903.1" y="531.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="906.1" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,048 samples, 0.50%)</title><rect x="903.1" y="515.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.1" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,048 samples, 0.50%)</title><rect x="903.1" y="499.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.1" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (239 samples, 0.11%)</title><rect x="903.1" y="483.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="906.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (302 samples, 0.14%)</title><rect x="904.4" y="483.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.4" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (302 samples, 0.14%)</title><rect x="904.4" y="467.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.4" y="478.0"></text>
</g>
<g>
<title>byte[] (302 samples, 0.14%)</title><rect x="904.4" y="451.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="907.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (507 samples, 0.24%)</title><rect x="906.1" y="483.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (507 samples, 0.24%)</title><rect x="906.1" y="467.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="909.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (218 samples, 0.10%)</title><rect x="906.1" y="451.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="909.1" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (289 samples, 0.14%)</title><rect x="907.3" y="451.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.3" y="462.0"></text>
</g>
<g>
<title>byte[] (289 samples, 0.14%)</title><rect x="907.3" y="435.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="910.3" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (102 samples, 0.05%)</title><rect x="908.9" y="531.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="911.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (148 samples, 0.07%)</title><rect x="909.5" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="912.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (148 samples, 0.07%)</title><rect x="909.5" y="547.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="912.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (241 samples, 0.11%)</title><rect x="910.3" y="563.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.3" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (67 samples, 0.03%)</title><rect x="910.3" y="547.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="913.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (68 samples, 0.03%)</title><rect x="910.7" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.7" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (68 samples, 0.03%)</title><rect x="910.7" y="531.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="913.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (106 samples, 0.05%)</title><rect x="911.0" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (106 samples, 0.05%)</title><rect x="911.0" y="531.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="914.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1,219 samples, 0.58%)</title><rect x="911.6" y="579.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (210 samples, 0.10%)</title><rect x="911.9" y="563.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="914.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (925 samples, 0.44%)</title><rect x="913.3" y="563.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="916.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (925 samples, 0.44%)</title><rect x="913.3" y="547.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.3" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (99 samples, 0.05%)</title><rect x="913.3" y="531.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="916.3" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (85 samples, 0.04%)</title><rect x="913.8" y="531.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="916.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (449 samples, 0.21%)</title><rect x="914.3" y="531.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="917.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (449 samples, 0.21%)</title><rect x="914.3" y="515.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.3" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (449 samples, 0.21%)</title><rect x="914.3" y="499.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.3" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (449 samples, 0.21%)</title><rect x="914.3" y="483.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.3" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (449 samples, 0.21%)</title><rect x="914.3" y="467.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="917.3" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (171 samples, 0.08%)</title><rect x="916.8" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (171 samples, 0.08%)</title><rect x="916.8" y="515.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (52 samples, 0.02%)</title><rect x="916.8" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (52 samples, 0.02%)</title><rect x="916.8" y="483.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="919.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (119 samples, 0.06%)</title><rect x="917.1" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="920.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (119 samples, 0.06%)</title><rect x="917.1" y="483.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="920.1" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (121 samples, 0.06%)</title><rect x="917.8" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.8" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (121 samples, 0.06%)</title><rect x="917.8" y="515.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.8" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (121 samples, 0.06%)</title><rect x="917.8" y="499.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="920.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (796 samples, 0.38%)</title><rect x="918.4" y="579.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (160 samples, 0.08%)</title><rect x="918.4" y="563.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="921.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (80 samples, 0.04%)</title><rect x="918.4" y="547.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="921.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (80 samples, 0.04%)</title><rect x="918.9" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (80 samples, 0.04%)</title><rect x="918.9" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="921.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (78 samples, 0.04%)</title><rect x="918.9" y="515.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="921.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (114 samples, 0.05%)</title><rect x="919.3" y="563.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="922.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (522 samples, 0.25%)</title><rect x="920.0" y="563.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (90 samples, 0.04%)</title><rect x="920.0" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="923.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.04%)</title><rect x="920.0" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="923.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$131/1669423235.get$Lambda (49 samples, 0.02%)</title><rect x="920.2" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="923.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$131 (49 samples, 0.02%)</title><rect x="920.2" y="499.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="923.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (432 samples, 0.20%)</title><rect x="920.5" y="547.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (432 samples, 0.20%)</title><rect x="920.5" y="531.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (229 samples, 0.11%)</title><rect x="920.5" y="515.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="923.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (203 samples, 0.10%)</title><rect x="921.7" y="515.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="924.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (203 samples, 0.10%)</title><rect x="921.7" y="499.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="924.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (203 samples, 0.10%)</title><rect x="921.7" y="483.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="924.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.create (3,678 samples, 1.74%)</title><rect x="922.9" y="643.0" width="20.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.get (3,678 samples, 1.74%)</title><rect x="922.9" y="627.0" width="20.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="925.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1,293 samples, 0.61%)</title><rect x="922.9" y="611.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (124 samples, 0.06%)</title><rect x="922.9" y="595.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="925.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (1,169 samples, 0.55%)</title><rect x="923.6" y="595.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="926.6" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,127 samples, 0.53%)</title><rect x="923.6" y="579.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="926.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,127 samples, 0.53%)</title><rect x="923.6" y="563.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="926.6" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (46 samples, 0.02%)</title><rect x="923.6" y="547.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="926.6" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (71 samples, 0.03%)</title><rect x="923.8" y="547.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="926.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (145 samples, 0.07%)</title><rect x="924.2" y="547.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="927.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (46 samples, 0.02%)</title><rect x="925.0" y="547.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="928.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.04%)</title><rect x="925.3" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="928.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.04%)</title><rect x="925.3" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="928.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/2069775835.get$Lambda (86 samples, 0.04%)</title><rect x="925.3" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="928.3" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$119 (86 samples, 0.04%)</title><rect x="925.3" y="499.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="928.3" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (107 samples, 0.05%)</title><rect x="925.8" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="928.8" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (107 samples, 0.05%)</title><rect x="925.8" y="531.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="928.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (471 samples, 0.22%)</title><rect x="926.4" y="547.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/2069775835.accept (471 samples, 0.22%)</title><rect x="926.4" y="531.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="929.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (471 samples, 0.22%)</title><rect x="926.4" y="515.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.4" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (174 samples, 0.08%)</title><rect x="926.4" y="499.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.4" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1045516625.accept (174 samples, 0.08%)</title><rect x="926.4" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="929.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (174 samples, 0.08%)</title><rect x="926.4" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (174 samples, 0.08%)</title><rect x="926.4" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="929.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (174 samples, 0.08%)</title><rect x="926.4" y="435.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="929.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (174 samples, 0.08%)</title><rect x="926.4" y="419.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (174 samples, 0.08%)</title><rect x="926.4" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (174 samples, 0.08%)</title><rect x="926.4" y="387.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="929.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (174 samples, 0.08%)</title><rect x="926.4" y="371.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="929.4" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (166 samples, 0.08%)</title><rect x="927.3" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="930.3" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (166 samples, 0.08%)</title><rect x="927.3" y="483.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="930.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (81 samples, 0.04%)</title><rect x="927.3" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="930.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (81 samples, 0.04%)</title><rect x="927.3" y="451.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (81 samples, 0.04%)</title><rect x="927.3" y="435.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="930.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (85 samples, 0.04%)</title><rect x="927.8" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="930.8" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (85 samples, 0.04%)</title><rect x="927.8" y="451.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="930.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (131 samples, 0.06%)</title><rect x="928.2" y="499.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="931.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (131 samples, 0.06%)</title><rect x="928.2" y="483.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="931.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (155 samples, 0.07%)</title><rect x="929.0" y="547.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (155 samples, 0.07%)</title><rect x="929.0" y="531.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="932.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Address.toString (198 samples, 0.09%)</title><rect x="930.1" y="611.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="933.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/673068808.linkToTargetMethod (198 samples, 0.09%)</title><rect x="930.1" y="595.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="933.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1758386724.invoke (198 samples, 0.09%)</title><rect x="930.1" y="579.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="933.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (198 samples, 0.09%)</title><rect x="930.1" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="933.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (66 samples, 0.03%)</title><rect x="930.1" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="933.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (66 samples, 0.03%)</title><rect x="930.1" y="531.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="933.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (132 samples, 0.06%)</title><rect x="930.4" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="933.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (132 samples, 0.06%)</title><rect x="930.4" y="531.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.4" y="542.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.06%)</title><rect x="930.4" y="515.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="933.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.defaultBuilder (2,187 samples, 1.03%)</title><rect x="931.2" y="611.0" width="12.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="934.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (72 samples, 0.03%)</title><rect x="931.2" y="595.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="934.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (299 samples, 0.14%)</title><rect x="931.6" y="595.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="934.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1299698737.invoke (299 samples, 0.14%)</title><rect x="931.6" y="579.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="934.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1674951449.invoke (299 samples, 0.14%)</title><rect x="931.6" y="563.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="934.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (299 samples, 0.14%)</title><rect x="931.6" y="547.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="934.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (70 samples, 0.03%)</title><rect x="931.6" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="934.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (70 samples, 0.03%)</title><rect x="931.6" y="515.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="934.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (229 samples, 0.11%)</title><rect x="932.0" y="531.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (229 samples, 0.11%)</title><rect x="932.0" y="515.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="935.0" y="526.0"></text>
</g>
<g>
<title>byte[] (229 samples, 0.11%)</title><rect x="932.0" y="499.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="935.0" y="510.0"></text>
</g>
<g>
<title>java/net/URI.create (1,132 samples, 0.53%)</title><rect x="933.3" y="595.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="936.3" y="606.0"></text>
</g>
<g>
<title>java.net.URI (239 samples, 0.11%)</title><rect x="933.3" y="579.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="936.3" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (893 samples, 0.42%)</title><rect x="934.6" y="579.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.6" y="590.0"></text>
</g>
<g>
<title>java.net.URI$Parser (73 samples, 0.03%)</title><rect x="934.6" y="563.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="937.6" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (820 samples, 0.39%)</title><rect x="935.0" y="563.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="938.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (135 samples, 0.06%)</title><rect x="935.0" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="938.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (135 samples, 0.06%)</title><rect x="935.0" y="531.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="938.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.03%)</title><rect x="935.0" y="515.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="938.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.03%)</title><rect x="935.4" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="938.4" y="526.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.03%)</title><rect x="935.4" y="499.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="938.4" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (685 samples, 0.32%)</title><rect x="935.7" y="547.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="938.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (348 samples, 0.16%)</title><rect x="935.7" y="531.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="938.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (348 samples, 0.16%)</title><rect x="935.7" y="515.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="938.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String (162 samples, 0.08%)</title><rect x="935.7" y="499.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="938.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (186 samples, 0.09%)</title><rect x="936.6" y="499.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="939.6" y="510.0"></text>
</g>
<g>
<title>byte[] (186 samples, 0.09%)</title><rect x="936.6" y="483.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="939.6" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (337 samples, 0.16%)</title><rect x="937.7" y="531.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="940.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (160 samples, 0.08%)</title><rect x="937.7" y="515.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="940.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (160 samples, 0.08%)</title><rect x="937.7" y="499.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="940.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String (77 samples, 0.04%)</title><rect x="937.7" y="483.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="940.7" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (83 samples, 0.04%)</title><rect x="938.1" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="941.1" y="494.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.04%)</title><rect x="938.1" y="467.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="941.1" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (177 samples, 0.08%)</title><rect x="938.6" y="515.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="941.6" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (177 samples, 0.08%)</title><rect x="938.6" y="499.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="941.6" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (177 samples, 0.08%)</title><rect x="938.6" y="483.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="941.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (177 samples, 0.08%)</title><rect x="938.6" y="467.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="941.6" y="478.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.03%)</title><rect x="938.6" y="451.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="941.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (112 samples, 0.05%)</title><rect x="938.9" y="451.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="941.9" y="462.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.05%)</title><rect x="938.9" y="435.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="941.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (328 samples, 0.15%)</title><rect x="939.6" y="595.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (126 samples, 0.06%)</title><rect x="939.6" y="579.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="942.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (202 samples, 0.10%)</title><rect x="940.3" y="579.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="943.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (45 samples, 0.02%)</title><rect x="940.3" y="563.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="943.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (157 samples, 0.07%)</title><rect x="940.5" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="943.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (157 samples, 0.07%)</title><rect x="940.5" y="547.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="943.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (274 samples, 0.13%)</title><rect x="941.4" y="595.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="944.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (274 samples, 0.13%)</title><rect x="941.4" y="579.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="944.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (274 samples, 0.13%)</title><rect x="941.4" y="563.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="944.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (274 samples, 0.13%)</title><rect x="941.4" y="547.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.4" y="558.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (274 samples, 0.13%)</title><rect x="941.4" y="531.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (123 samples, 0.06%)</title><rect x="941.4" y="515.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="944.4" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (123 samples, 0.06%)</title><rect x="941.4" y="499.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="944.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$116/908762339.apply (151 samples, 0.07%)</title><rect x="942.1" y="515.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (151 samples, 0.07%)</title><rect x="942.1" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="945.1" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (69 samples, 0.03%)</title><rect x="942.1" y="483.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="945.1" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (82 samples, 0.04%)</title><rect x="942.5" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="945.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (82 samples, 0.04%)</title><rect x="942.5" y="467.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="945.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Replicas.toString (82 samples, 0.04%)</title><rect x="942.9" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.04%)</title><rect x="942.9" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="945.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/862388123.invoke (82 samples, 0.04%)</title><rect x="942.9" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="945.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.04%)</title><rect x="942.9" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="945.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (78 samples, 0.04%)</title><rect x="942.9" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="945.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (78 samples, 0.04%)</title><rect x="942.9" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="945.9" y="526.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.04%)</title><rect x="942.9" y="499.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="945.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.sendActualResponse (233 samples, 0.11%)</title><rect x="943.4" y="659.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="946.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.03%)</title><rect x="943.4" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="946.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.03%)</title><rect x="943.4" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="946.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (93 samples, 0.04%)</title><rect x="943.7" y="643.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="946.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (93 samples, 0.04%)</title><rect x="943.7" y="627.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="946.7" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (62 samples, 0.03%)</title><rect x="943.7" y="611.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="946.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (83 samples, 0.04%)</title><rect x="944.2" y="643.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="947.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (83 samples, 0.04%)</title><rect x="944.2" y="627.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (58 samples, 0.03%)</title><rect x="944.2" y="611.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="947.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.&lt;init&gt; (170 samples, 0.08%)</title><rect x="944.7" y="659.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="947.7" y="670.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (66 samples, 0.03%)</title><rect x="944.7" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.7" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (66 samples, 0.03%)</title><rect x="944.7" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.7" y="638.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (104 samples, 0.05%)</title><rect x="945.0" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.0" y="654.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (104 samples, 0.05%)</title><rect x="945.0" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="948.0" y="638.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (104 samples, 0.05%)</title><rect x="945.0" y="611.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.0" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (60 samples, 0.03%)</title><rect x="945.0" y="595.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="948.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Ring.primaryFor (523 samples, 0.25%)</title><rect x="945.6" y="659.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="948.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (62 samples, 0.03%)</title><rect x="945.6" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="948.6" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap (62 samples, 0.03%)</title><rect x="945.6" y="627.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="948.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (461 samples, 0.22%)</title><rect x="946.0" y="643.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="949.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (461 samples, 0.22%)</title><rect x="946.0" y="627.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="949.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (187 samples, 0.09%)</title><rect x="946.0" y="611.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="949.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Address.hashCode (187 samples, 0.09%)</title><rect x="946.0" y="595.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="949.0" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (104 samples, 0.05%)</title><rect x="946.0" y="579.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="949.0" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (83 samples, 0.04%)</title><rect x="946.5" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.5" y="590.0"></text>
</g>
<g>
<title>java.lang.Integer (83 samples, 0.04%)</title><rect x="946.5" y="563.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="949.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (274 samples, 0.13%)</title><rect x="947.0" y="611.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="950.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (139 samples, 0.07%)</title><rect x="947.0" y="595.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="950.0" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (139 samples, 0.07%)</title><rect x="947.0" y="579.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="950.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (135 samples, 0.06%)</title><rect x="947.8" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.8" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (135 samples, 0.06%)</title><rect x="947.8" y="579.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="950.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.executePut (25,585 samples, 12.09%)</title><rect x="948.5" y="675.0" width="142.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.5" y="686.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (208 samples, 0.10%)</title><rect x="948.5" y="659.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="951.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (208 samples, 0.10%)</title><rect x="948.5" y="643.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$113/1712326348.get$Lambda (69 samples, 0.03%)</title><rect x="948.5" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="951.5" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$113 (69 samples, 0.03%)</title><rect x="948.5" y="611.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="951.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$256/72675183.get$Lambda (139 samples, 0.07%)</title><rect x="948.9" y="627.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.9" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$256 (139 samples, 0.07%)</title><rect x="948.9" y="611.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="951.9" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (133 samples, 0.06%)</title><rect x="949.7" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="952.7" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (133 samples, 0.06%)</title><rect x="949.7" y="643.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="952.7" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.HttpRequestCreator (100 samples, 0.05%)</title><rect x="950.4" y="659.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="953.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.collect (2,163 samples, 1.02%)</title><rect x="951.0" y="659.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="954.0" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (63 samples, 0.03%)</title><rect x="951.0" y="643.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="954.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (72 samples, 0.03%)</title><rect x="951.4" y="643.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="954.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1833015980.linkToTargetMethod (121 samples, 0.06%)</title><rect x="952.0" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="955.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/211888294.invokeStatic (121 samples, 0.06%)</title><rect x="952.0" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$139/1024161038.get$Lambda (121 samples, 0.06%)</title><rect x="952.0" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.0" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$139 (121 samples, 0.06%)</title><rect x="952.0" y="595.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="955.0" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,778 samples, 0.84%)</title><rect x="952.7" y="643.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$139/1024161038.accept (1,778 samples, 0.84%)</title><rect x="952.7" y="627.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="955.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$collect$13 (1,778 samples, 0.84%)</title><rect x="952.7" y="611.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="955.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (144 samples, 0.07%)</title><rect x="952.7" y="595.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="955.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (144 samples, 0.07%)</title><rect x="952.7" y="579.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$144/839902634.get$Lambda (144 samples, 0.07%)</title><rect x="952.7" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.7" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$144 (144 samples, 0.07%)</title><rect x="952.7" y="547.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="955.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/304881770.linkToTargetMethod (287 samples, 0.14%)</title><rect x="953.5" y="595.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="956.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1501497156.invokeStatic (287 samples, 0.14%)</title><rect x="953.5" y="579.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="956.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$142/241556689.get$Lambda (287 samples, 0.14%)</title><rect x="953.5" y="563.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="956.5" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$142 (287 samples, 0.14%)</title><rect x="953.5" y="547.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="956.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (699 samples, 0.33%)</title><rect x="955.1" y="595.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="958.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (699 samples, 0.33%)</title><rect x="955.1" y="579.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="958.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (416 samples, 0.20%)</title><rect x="955.1" y="563.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="958.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (79 samples, 0.04%)</title><rect x="957.4" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (79 samples, 0.04%)</title><rect x="957.4" y="547.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="960.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (204 samples, 0.10%)</title><rect x="957.8" y="563.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="960.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (204 samples, 0.10%)</title><rect x="957.8" y="547.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="960.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (204 samples, 0.10%)</title><rect x="957.8" y="531.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="960.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (648 samples, 0.31%)</title><rect x="959.0" y="595.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="962.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (648 samples, 0.31%)</title><rect x="959.0" y="579.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="962.0" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (372 samples, 0.18%)</title><rect x="959.0" y="563.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="962.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (91 samples, 0.04%)</title><rect x="961.0" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (91 samples, 0.04%)</title><rect x="961.0" y="547.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="964.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (185 samples, 0.09%)</title><rect x="961.6" y="563.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (185 samples, 0.09%)</title><rect x="961.6" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="964.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (185 samples, 0.09%)</title><rect x="961.6" y="531.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="964.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (85 samples, 0.04%)</title><rect x="962.6" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="965.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (85 samples, 0.04%)</title><rect x="962.6" y="627.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="965.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.executeAsync (299 samples, 0.14%)</title><rect x="963.1" y="659.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="966.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (159 samples, 0.08%)</title><rect x="963.1" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (159 samples, 0.08%)</title><rect x="963.1" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="966.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$257/177406357.get$Lambda (159 samples, 0.08%)</title><rect x="963.1" y="611.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.1" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$257 (159 samples, 0.08%)</title><rect x="963.1" y="595.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="966.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (140 samples, 0.07%)</title><rect x="963.9" y="643.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="966.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (140 samples, 0.07%)</title><rect x="963.9" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="966.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (139 samples, 0.07%)</title><rect x="963.9" y="611.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="966.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.replication (20,639 samples, 9.75%)</title><rect x="964.7" y="659.0" width="115.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.7" y="670.0">ru/mail/polis/..</text>
</g>
<g>
<title>java.util.ArrayList (76 samples, 0.04%)</title><rect x="964.7" y="643.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="967.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.02%)</title><rect x="965.2" y="643.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.02%)</title><rect x="965.2" y="627.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="968.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$137/1985808388.get$Lambda (48 samples, 0.02%)</title><rect x="965.2" y="611.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.2" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$137 (48 samples, 0.02%)</title><rect x="965.2" y="595.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="968.2" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (175 samples, 0.08%)</title><rect x="965.4" y="643.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.4" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (175 samples, 0.08%)</title><rect x="965.4" y="627.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (175 samples, 0.08%)</title><rect x="965.4" y="611.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="968.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (175 samples, 0.08%)</title><rect x="965.4" y="595.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.4" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (175 samples, 0.08%)</title><rect x="965.4" y="579.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.4" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (168 samples, 0.08%)</title><rect x="965.4" y="563.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="968.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (172 samples, 0.08%)</title><rect x="966.4" y="643.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (131 samples, 0.06%)</title><rect x="966.4" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.4" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (131 samples, 0.06%)</title><rect x="966.4" y="611.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="969.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (150 samples, 0.07%)</title><rect x="967.4" y="643.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="970.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (150 samples, 0.07%)</title><rect x="967.4" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="970.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (73 samples, 0.03%)</title><rect x="967.4" y="611.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="970.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (77 samples, 0.04%)</title><rect x="967.8" y="611.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="970.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (403 samples, 0.19%)</title><rect x="968.2" y="643.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="971.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (403 samples, 0.19%)</title><rect x="968.2" y="627.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="971.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (213 samples, 0.10%)</title><rect x="968.2" y="611.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="971.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (190 samples, 0.09%)</title><rect x="969.4" y="611.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="972.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (190 samples, 0.09%)</title><rect x="969.4" y="595.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (190 samples, 0.09%)</title><rect x="969.4" y="579.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="972.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (12,137 samples, 5.74%)</title><rect x="970.4" y="643.0" width="67.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.4" y="654.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (12,137 samples, 5.74%)</title><rect x="970.4" y="627.0" width="67.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.4" y="638.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (12,137 samples, 5.74%)</title><rect x="970.4" y="611.0" width="67.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.4" y="622.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (12,137 samples, 5.74%)</title><rect x="970.4" y="595.0" width="67.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.4" y="606.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.04%)</title><rect x="970.4" y="579.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.04%)</title><rect x="970.4" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$133/1603733576.get$Lambda (92 samples, 0.04%)</title><rect x="970.4" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="973.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$133 (92 samples, 0.04%)</title><rect x="970.4" y="531.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="973.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (420 samples, 0.20%)</title><rect x="970.9" y="579.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (420 samples, 0.20%)</title><rect x="970.9" y="563.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (225 samples, 0.11%)</title><rect x="970.9" y="547.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="973.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (195 samples, 0.09%)</title><rect x="972.2" y="547.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (195 samples, 0.09%)</title><rect x="972.2" y="531.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (195 samples, 0.09%)</title><rect x="972.2" y="515.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="975.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (425 samples, 0.20%)</title><rect x="973.3" y="579.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="976.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (425 samples, 0.20%)</title><rect x="973.3" y="563.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="976.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (243 samples, 0.11%)</title><rect x="973.3" y="547.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="976.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (182 samples, 0.09%)</title><rect x="974.6" y="547.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (182 samples, 0.09%)</title><rect x="974.6" y="531.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="977.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (182 samples, 0.09%)</title><rect x="974.6" y="515.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="977.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (317 samples, 0.15%)</title><rect x="975.7" y="579.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="978.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (589 samples, 0.28%)</title><rect x="977.4" y="579.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="980.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (6,067 samples, 2.87%)</title><rect x="980.7" y="579.0" width="33.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="983.7" y="590.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (769 samples, 0.36%)</title><rect x="980.7" y="563.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.7" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (602 samples, 0.28%)</title><rect x="980.7" y="547.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="983.7" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (229 samples, 0.11%)</title><rect x="980.7" y="531.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.7" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (229 samples, 0.11%)</title><rect x="980.7" y="515.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="983.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (373 samples, 0.18%)</title><rect x="982.0" y="531.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="985.0" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (373 samples, 0.18%)</title><rect x="982.0" y="515.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="985.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (167 samples, 0.08%)</title><rect x="984.1" y="547.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="987.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (167 samples, 0.08%)</title><rect x="984.1" y="531.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="987.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (167 samples, 0.08%)</title><rect x="984.1" y="515.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$60/915416632.get (167 samples, 0.08%)</title><rect x="984.1" y="499.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="987.1" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (167 samples, 0.08%)</title><rect x="984.1" y="483.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="987.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,204 samples, 1.04%)</title><rect x="985.0" y="563.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="988.0" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,204 samples, 1.04%)</title><rect x="985.0" y="547.0" width="12.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="988.0" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (84 samples, 0.04%)</title><rect x="985.0" y="531.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="988.0" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (156 samples, 0.07%)</title><rect x="985.5" y="531.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="988.5" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (297 samples, 0.14%)</title><rect x="986.3" y="531.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="989.3" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (105 samples, 0.05%)</title><rect x="988.0" y="531.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="991.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (186 samples, 0.09%)</title><rect x="988.6" y="531.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="991.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (186 samples, 0.09%)</title><rect x="988.6" y="515.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="991.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/2069775835.get$Lambda (186 samples, 0.09%)</title><rect x="988.6" y="499.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="991.6" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$119 (186 samples, 0.09%)</title><rect x="988.6" y="483.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="991.6" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (871 samples, 0.41%)</title><rect x="989.6" y="531.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (871 samples, 0.41%)</title><rect x="989.6" y="515.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="992.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/2069775835.accept (871 samples, 0.41%)</title><rect x="989.6" y="499.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="992.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (871 samples, 0.41%)</title><rect x="989.6" y="483.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="992.6" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (359 samples, 0.17%)</title><rect x="989.6" y="467.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="992.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1045516625.accept (359 samples, 0.17%)</title><rect x="989.6" y="451.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (359 samples, 0.17%)</title><rect x="989.6" y="435.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (359 samples, 0.17%)</title><rect x="989.6" y="419.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="992.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (359 samples, 0.17%)</title><rect x="989.6" y="403.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (359 samples, 0.17%)</title><rect x="989.6" y="387.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="992.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (359 samples, 0.17%)</title><rect x="989.6" y="371.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="992.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (359 samples, 0.17%)</title><rect x="989.6" y="355.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="992.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (359 samples, 0.17%)</title><rect x="989.6" y="339.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="992.6" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (302 samples, 0.14%)</title><rect x="991.6" y="467.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="994.6" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (302 samples, 0.14%)</title><rect x="991.6" y="451.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (157 samples, 0.07%)</title><rect x="991.6" y="435.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="994.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (157 samples, 0.07%)</title><rect x="991.6" y="419.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (157 samples, 0.07%)</title><rect x="991.6" y="403.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="994.6" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (145 samples, 0.07%)</title><rect x="992.5" y="435.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="995.5" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (145 samples, 0.07%)</title><rect x="992.5" y="419.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="995.5" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (210 samples, 0.10%)</title><rect x="993.3" y="467.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="996.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (210 samples, 0.10%)</title><rect x="993.3" y="451.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="996.3" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (218 samples, 0.10%)</title><rect x="994.5" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="997.5" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (218 samples, 0.10%)</title><rect x="994.5" y="515.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="997.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (287 samples, 0.14%)</title><rect x="995.7" y="531.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (287 samples, 0.14%)</title><rect x="995.7" y="515.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="998.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (79 samples, 0.04%)</title><rect x="997.3" y="563.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1000.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (2,218 samples, 1.05%)</title><rect x="997.7" y="563.0" width="12.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.7" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (2,218 samples, 1.05%)</title><rect x="997.7" y="547.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.7" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2,053 samples, 0.97%)</title><rect x="997.7" y="531.0" width="11.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1000.7" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2,053 samples, 0.97%)</title><rect x="997.7" y="515.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1000.7" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2,053 samples, 0.97%)</title><rect x="997.7" y="499.0" width="11.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.7" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (439 samples, 0.21%)</title><rect x="997.7" y="483.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1000.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (606 samples, 0.29%)</title><rect x="1000.2" y="483.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1003.2" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (606 samples, 0.29%)</title><rect x="1000.2" y="467.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1003.2" y="478.0"></text>
</g>
<g>
<title>byte[] (606 samples, 0.29%)</title><rect x="1000.2" y="451.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1003.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,008 samples, 0.48%)</title><rect x="1003.6" y="483.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1006.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,008 samples, 0.48%)</title><rect x="1003.6" y="467.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.6" y="478.0"></text>
</g>
<g>
<title>java.lang.String (462 samples, 0.22%)</title><rect x="1003.6" y="451.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1006.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (546 samples, 0.26%)</title><rect x="1006.1" y="451.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.1" y="462.0"></text>
</g>
<g>
<title>byte[] (546 samples, 0.26%)</title><rect x="1006.1" y="435.0" width="3.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1009.1" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (165 samples, 0.08%)</title><rect x="1009.2" y="531.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1012.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (264 samples, 0.12%)</title><rect x="1010.1" y="563.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1013.1" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (264 samples, 0.12%)</title><rect x="1010.1" y="547.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1013.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (533 samples, 0.25%)</title><rect x="1011.6" y="563.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1014.6" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (146 samples, 0.07%)</title><rect x="1011.6" y="547.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1014.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (149 samples, 0.07%)</title><rect x="1012.4" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1015.4" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (149 samples, 0.07%)</title><rect x="1012.4" y="531.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1015.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (238 samples, 0.11%)</title><rect x="1013.2" y="547.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1016.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (238 samples, 0.11%)</title><rect x="1013.2" y="531.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1016.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2,603 samples, 1.23%)</title><rect x="1014.5" y="579.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (121 samples, 0.06%)</title><rect x="1014.5" y="563.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1017.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (420 samples, 0.20%)</title><rect x="1015.2" y="563.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1018.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (82 samples, 0.04%)</title><rect x="1017.6" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1020.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (82 samples, 0.04%)</title><rect x="1017.6" y="547.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1020.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1,980 samples, 0.94%)</title><rect x="1018.0" y="563.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1021.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1,980 samples, 0.94%)</title><rect x="1018.0" y="547.0" width="11.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1021.0" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (204 samples, 0.10%)</title><rect x="1018.0" y="531.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1021.0" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (197 samples, 0.09%)</title><rect x="1019.2" y="531.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1022.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (958 samples, 0.45%)</title><rect x="1020.3" y="531.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1023.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (958 samples, 0.45%)</title><rect x="1020.3" y="515.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1023.3" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (958 samples, 0.45%)</title><rect x="1020.3" y="499.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1023.3" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (958 samples, 0.45%)</title><rect x="1020.3" y="483.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1023.3" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (958 samples, 0.45%)</title><rect x="1020.3" y="467.0" width="5.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1023.3" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (338 samples, 0.16%)</title><rect x="1025.6" y="531.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (338 samples, 0.16%)</title><rect x="1025.6" y="515.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1028.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (90 samples, 0.04%)</title><rect x="1025.6" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1028.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (90 samples, 0.04%)</title><rect x="1025.6" y="483.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1028.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (248 samples, 0.12%)</title><rect x="1026.1" y="499.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1029.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (248 samples, 0.12%)</title><rect x="1026.1" y="483.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1029.1" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (283 samples, 0.13%)</title><rect x="1027.5" y="531.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1030.5" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (283 samples, 0.13%)</title><rect x="1027.5" y="515.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1030.5" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (283 samples, 0.13%)</title><rect x="1027.5" y="499.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1030.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,624 samples, 0.77%)</title><rect x="1029.1" y="579.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1032.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (323 samples, 0.15%)</title><rect x="1029.1" y="563.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1032.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (164 samples, 0.08%)</title><rect x="1029.1" y="547.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1032.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (159 samples, 0.08%)</title><rect x="1030.0" y="547.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1033.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (159 samples, 0.08%)</title><rect x="1030.0" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (159 samples, 0.08%)</title><rect x="1030.0" y="515.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1033.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (204 samples, 0.10%)</title><rect x="1030.9" y="563.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1033.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1,097 samples, 0.52%)</title><rect x="1032.0" y="563.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1035.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (193 samples, 0.09%)</title><rect x="1032.0" y="547.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1035.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (193 samples, 0.09%)</title><rect x="1032.0" y="531.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1035.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1363122709.get$Lambda (87 samples, 0.04%)</title><rect x="1032.0" y="515.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$128 (87 samples, 0.04%)</title><rect x="1032.0" y="499.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1035.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$131/1669423235.get$Lambda (106 samples, 0.05%)</title><rect x="1032.5" y="515.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1035.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$131 (106 samples, 0.05%)</title><rect x="1032.5" y="499.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1035.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (904 samples, 0.43%)</title><rect x="1033.1" y="547.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1036.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (904 samples, 0.43%)</title><rect x="1033.1" y="531.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1036.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (510 samples, 0.24%)</title><rect x="1033.1" y="515.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1036.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (394 samples, 0.19%)</title><rect x="1035.9" y="515.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (394 samples, 0.19%)</title><rect x="1035.9" y="499.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1038.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (394 samples, 0.19%)</title><rect x="1035.9" y="483.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1038.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.create (7,478 samples, 3.53%)</title><rect x="1038.1" y="643.0" width="41.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1041.1" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.put (7,478 samples, 3.53%)</title><rect x="1038.1" y="627.0" width="41.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.1" y="638.0">ru/..</text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (193 samples, 0.09%)</title><rect x="1038.1" y="611.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1041.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (193 samples, 0.09%)</title><rect x="1038.1" y="595.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1041.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2,579 samples, 1.22%)</title><rect x="1039.2" y="611.0" width="14.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1042.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (215 samples, 0.10%)</title><rect x="1039.2" y="595.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1042.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2,364 samples, 1.12%)</title><rect x="1040.4" y="595.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1043.4" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,180 samples, 1.03%)</title><rect x="1040.4" y="579.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1043.4" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,180 samples, 1.03%)</title><rect x="1040.4" y="563.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1043.4" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (100 samples, 0.05%)</title><rect x="1040.4" y="547.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1043.4" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (137 samples, 0.06%)</title><rect x="1040.9" y="547.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1043.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (297 samples, 0.14%)</title><rect x="1041.7" y="547.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1044.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (88 samples, 0.04%)</title><rect x="1043.4" y="547.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1046.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (206 samples, 0.10%)</title><rect x="1043.9" y="547.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1046.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (206 samples, 0.10%)</title><rect x="1043.9" y="531.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/2069775835.get$Lambda (206 samples, 0.10%)</title><rect x="1043.9" y="515.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1046.9" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$119 (206 samples, 0.10%)</title><rect x="1043.9" y="499.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1046.9" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (217 samples, 0.10%)</title><rect x="1045.0" y="547.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1048.0" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (217 samples, 0.10%)</title><rect x="1045.0" y="531.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1048.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (861 samples, 0.41%)</title><rect x="1046.2" y="547.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1049.2" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/2069775835.accept (861 samples, 0.41%)</title><rect x="1046.2" y="531.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1049.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (861 samples, 0.41%)</title><rect x="1046.2" y="515.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.2" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (357 samples, 0.17%)</title><rect x="1046.2" y="499.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1045516625.accept (357 samples, 0.17%)</title><rect x="1046.2" y="483.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1049.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (357 samples, 0.17%)</title><rect x="1046.2" y="467.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (357 samples, 0.17%)</title><rect x="1046.2" y="451.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1049.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (357 samples, 0.17%)</title><rect x="1046.2" y="435.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (357 samples, 0.17%)</title><rect x="1046.2" y="419.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1049.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (357 samples, 0.17%)</title><rect x="1046.2" y="403.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (357 samples, 0.17%)</title><rect x="1046.2" y="387.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (357 samples, 0.17%)</title><rect x="1046.2" y="371.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1049.2" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (293 samples, 0.14%)</title><rect x="1048.2" y="499.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.2" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (293 samples, 0.14%)</title><rect x="1048.2" y="483.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (169 samples, 0.08%)</title><rect x="1048.2" y="467.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (169 samples, 0.08%)</title><rect x="1048.2" y="451.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1051.2" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (169 samples, 0.08%)</title><rect x="1048.2" y="435.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1051.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (124 samples, 0.06%)</title><rect x="1049.1" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1052.1" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (124 samples, 0.06%)</title><rect x="1049.1" y="451.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1052.1" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (211 samples, 0.10%)</title><rect x="1049.8" y="499.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1052.8" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (211 samples, 0.10%)</title><rect x="1049.8" y="483.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1052.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (274 samples, 0.13%)</title><rect x="1051.0" y="547.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1054.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (274 samples, 0.13%)</title><rect x="1051.0" y="531.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1054.0" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (184 samples, 0.09%)</title><rect x="1052.5" y="579.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1055.5" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.of (184 samples, 0.09%)</title><rect x="1052.5" y="563.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.5" y="574.0"></text>
</g>
<g>
<title>java.util.Optional (184 samples, 0.09%)</title><rect x="1052.5" y="547.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1055.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Address.toString (256 samples, 0.12%)</title><rect x="1053.6" y="611.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1056.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/673068808.linkToTargetMethod (256 samples, 0.12%)</title><rect x="1053.6" y="595.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1056.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1758386724.invoke (256 samples, 0.12%)</title><rect x="1053.6" y="579.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (256 samples, 0.12%)</title><rect x="1053.6" y="563.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1056.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (251 samples, 0.12%)</title><rect x="1053.6" y="547.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1056.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (251 samples, 0.12%)</title><rect x="1053.6" y="531.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1056.6" y="542.0"></text>
</g>
<g>
<title>byte[] (251 samples, 0.12%)</title><rect x="1053.6" y="515.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1056.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.defaultBuilder (4,450 samples, 2.10%)</title><rect x="1055.0" y="611.0" width="24.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1058.0" y="622.0">r..</text>
</g>
<g>
<title>java.lang.String[] (153 samples, 0.07%)</title><rect x="1055.0" y="595.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1058.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (634 samples, 0.30%)</title><rect x="1055.8" y="595.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1299698737.invoke (634 samples, 0.30%)</title><rect x="1055.8" y="579.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1058.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1674951449.invoke (634 samples, 0.30%)</title><rect x="1055.8" y="563.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (634 samples, 0.30%)</title><rect x="1055.8" y="547.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1058.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (158 samples, 0.07%)</title><rect x="1055.8" y="531.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (158 samples, 0.07%)</title><rect x="1055.8" y="515.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1058.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (476 samples, 0.22%)</title><rect x="1056.7" y="531.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (476 samples, 0.22%)</title><rect x="1056.7" y="515.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1059.7" y="526.0"></text>
</g>
<g>
<title>byte[] (476 samples, 0.22%)</title><rect x="1056.7" y="499.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1059.7" y="510.0"></text>
</g>
<g>
<title>java/net/URI.create (2,388 samples, 1.13%)</title><rect x="1059.4" y="595.0" width="13.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1062.4" y="606.0"></text>
</g>
<g>
<title>java.net.URI (469 samples, 0.22%)</title><rect x="1059.4" y="579.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1062.4" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,919 samples, 0.91%)</title><rect x="1062.0" y="579.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1065.0" y="590.0"></text>
</g>
<g>
<title>java.net.URI$Parser (201 samples, 0.09%)</title><rect x="1062.0" y="563.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1065.0" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,718 samples, 0.81%)</title><rect x="1063.1" y="563.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1066.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (304 samples, 0.14%)</title><rect x="1063.1" y="547.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1066.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (304 samples, 0.14%)</title><rect x="1063.1" y="531.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1066.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String (151 samples, 0.07%)</title><rect x="1063.1" y="515.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1066.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (153 samples, 0.07%)</title><rect x="1064.0" y="515.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1067.0" y="526.0"></text>
</g>
<g>
<title>byte[] (153 samples, 0.07%)</title><rect x="1064.0" y="499.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1067.0" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,414 samples, 0.67%)</title><rect x="1064.8" y="547.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1067.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (761 samples, 0.36%)</title><rect x="1064.8" y="531.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1067.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (761 samples, 0.36%)</title><rect x="1064.8" y="515.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1067.8" y="526.0"></text>
</g>
<g>
<title>java.lang.String (293 samples, 0.14%)</title><rect x="1064.8" y="499.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1067.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (468 samples, 0.22%)</title><rect x="1066.4" y="499.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1069.4" y="510.0"></text>
</g>
<g>
<title>byte[] (468 samples, 0.22%)</title><rect x="1066.4" y="483.0" width="2.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1069.4" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (653 samples, 0.31%)</title><rect x="1069.1" y="531.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1072.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (301 samples, 0.14%)</title><rect x="1069.1" y="515.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1072.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (301 samples, 0.14%)</title><rect x="1069.1" y="499.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String (129 samples, 0.06%)</title><rect x="1069.1" y="483.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1072.1" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (172 samples, 0.08%)</title><rect x="1069.8" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.8" y="494.0"></text>
</g>
<g>
<title>byte[] (172 samples, 0.08%)</title><rect x="1069.8" y="467.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1072.8" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (352 samples, 0.17%)</title><rect x="1070.7" y="515.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.7" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (352 samples, 0.17%)</title><rect x="1070.7" y="499.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1073.7" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (352 samples, 0.17%)</title><rect x="1070.7" y="483.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1073.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (352 samples, 0.17%)</title><rect x="1070.7" y="467.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1073.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String (149 samples, 0.07%)</title><rect x="1070.7" y="451.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1073.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (203 samples, 0.10%)</title><rect x="1071.6" y="451.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1074.6" y="462.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.10%)</title><rect x="1071.6" y="435.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1074.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (600 samples, 0.28%)</title><rect x="1072.7" y="595.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1075.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (232 samples, 0.11%)</title><rect x="1072.7" y="579.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1075.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (368 samples, 0.17%)</title><rect x="1074.0" y="579.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1077.0" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (89 samples, 0.04%)</title><rect x="1074.0" y="563.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1077.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (279 samples, 0.13%)</title><rect x="1074.5" y="563.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1077.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (279 samples, 0.13%)</title><rect x="1074.5" y="547.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1077.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (535 samples, 0.25%)</title><rect x="1076.0" y="595.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1079.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (535 samples, 0.25%)</title><rect x="1076.0" y="579.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (535 samples, 0.25%)</title><rect x="1076.0" y="563.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1079.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (535 samples, 0.25%)</title><rect x="1076.0" y="547.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1079.0" y="558.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (535 samples, 0.25%)</title><rect x="1076.0" y="531.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (236 samples, 0.11%)</title><rect x="1076.0" y="515.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1079.0" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (236 samples, 0.11%)</title><rect x="1076.0" y="499.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1079.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$116/908762339.apply (299 samples, 0.14%)</title><rect x="1077.4" y="515.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1080.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (299 samples, 0.14%)</title><rect x="1077.4" y="499.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1080.4" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (135 samples, 0.06%)</title><rect x="1077.4" y="483.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1080.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (164 samples, 0.08%)</title><rect x="1078.1" y="483.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.1" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (164 samples, 0.08%)</title><rect x="1078.1" y="467.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1081.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Replicas.toString (140 samples, 0.07%)</title><rect x="1079.0" y="595.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1082.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (140 samples, 0.07%)</title><rect x="1079.0" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/862388123.invoke (140 samples, 0.07%)</title><rect x="1079.0" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1082.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (140 samples, 0.07%)</title><rect x="1079.0" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (136 samples, 0.06%)</title><rect x="1079.1" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1082.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (136 samples, 0.06%)</title><rect x="1079.1" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.1" y="526.0"></text>
</g>
<g>
<title>byte[] (136 samples, 0.06%)</title><rect x="1079.1" y="499.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1082.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.sendActualResponse (527 samples, 0.25%)</title><rect x="1079.8" y="659.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1082.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (121 samples, 0.06%)</title><rect x="1079.8" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1082.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (121 samples, 0.06%)</title><rect x="1079.8" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$146/1096399172.get$Lambda (73 samples, 0.03%)</title><rect x="1079.8" y="611.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1082.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$146 (73 samples, 0.03%)</title><rect x="1079.8" y="595.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1082.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$149/1498172504.get$Lambda (48 samples, 0.02%)</title><rect x="1080.2" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1083.2" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.AsyncReplicator$$Lambda$149 (48 samples, 0.02%)</title><rect x="1080.2" y="595.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1083.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (190 samples, 0.09%)</title><rect x="1080.5" y="643.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1083.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (190 samples, 0.09%)</title><rect x="1080.5" y="627.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1083.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (126 samples, 0.06%)</title><rect x="1080.5" y="611.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1083.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (64 samples, 0.03%)</title><rect x="1081.2" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1084.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (64 samples, 0.03%)</title><rect x="1081.2" y="595.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1084.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (216 samples, 0.10%)</title><rect x="1081.5" y="643.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1084.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (216 samples, 0.10%)</title><rect x="1081.5" y="627.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (145 samples, 0.07%)</title><rect x="1081.5" y="611.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1084.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (71 samples, 0.03%)</title><rect x="1082.4" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1085.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (71 samples, 0.03%)</title><rect x="1082.4" y="595.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1085.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.&lt;init&gt; (448 samples, 0.21%)</title><rect x="1082.7" y="659.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1085.7" y="670.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (151 samples, 0.07%)</title><rect x="1082.7" y="643.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1085.7" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (151 samples, 0.07%)</title><rect x="1082.7" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1085.7" y="638.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.03%)</title><rect x="1082.7" y="611.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1085.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (80 samples, 0.04%)</title><rect x="1083.1" y="611.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (80 samples, 0.04%)</title><rect x="1083.1" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1086.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (80 samples, 0.04%)</title><rect x="1083.1" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1086.1" y="590.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.04%)</title><rect x="1083.1" y="563.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1086.1" y="574.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (297 samples, 0.14%)</title><rect x="1083.6" y="643.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1086.6" y="654.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (297 samples, 0.14%)</title><rect x="1083.6" y="627.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1086.6" y="638.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (297 samples, 0.14%)</title><rect x="1083.6" y="611.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1086.6" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (180 samples, 0.09%)</title><rect x="1083.6" y="595.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1086.6" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (117 samples, 0.06%)</title><rect x="1084.6" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1087.6" y="606.0"></text>
</g>
<g>
<title>char[] (117 samples, 0.06%)</title><rect x="1084.6" y="579.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1087.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Ring.primaryFor (1,068 samples, 0.50%)</title><rect x="1085.2" y="659.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.2" y="670.0"></text>
</g>
<g>
<title>java.util.HashSet (47 samples, 0.02%)</title><rect x="1085.2" y="643.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1088.2" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (162 samples, 0.08%)</title><rect x="1085.5" y="643.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1088.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap (162 samples, 0.08%)</title><rect x="1085.5" y="627.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1088.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (859 samples, 0.41%)</title><rect x="1086.4" y="643.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1089.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (859 samples, 0.41%)</title><rect x="1086.4" y="627.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1089.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (337 samples, 0.16%)</title><rect x="1086.4" y="611.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Address.hashCode (337 samples, 0.16%)</title><rect x="1086.4" y="595.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.4" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (204 samples, 0.10%)</title><rect x="1086.4" y="579.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1089.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (133 samples, 0.06%)</title><rect x="1087.5" y="579.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.5" y="590.0"></text>
</g>
<g>
<title>java.lang.Integer (133 samples, 0.06%)</title><rect x="1087.5" y="563.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1090.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (522 samples, 0.25%)</title><rect x="1088.3" y="611.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1091.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (310 samples, 0.15%)</title><rect x="1088.3" y="595.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1091.3" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (310 samples, 0.15%)</title><rect x="1088.3" y="579.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1091.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (212 samples, 0.10%)</title><rect x="1090.0" y="595.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.0" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (212 samples, 0.10%)</title><rect x="1090.0" y="579.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1093.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Replicas.parse (531 samples, 0.25%)</title><rect x="1091.2" y="675.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1094.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (434 samples, 0.21%)</title><rect x="1091.2" y="659.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1094.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (434 samples, 0.21%)</title><rect x="1091.2" y="643.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1094.2" y="654.0"></text>
</g>
<g>
<title>java.lang.String (222 samples, 0.10%)</title><rect x="1091.2" y="627.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1094.2" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (212 samples, 0.10%)</title><rect x="1092.4" y="627.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.4" y="638.0"></text>
</g>
<g>
<title>byte[] (212 samples, 0.10%)</title><rect x="1092.4" y="611.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1095.4" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shkalev.Replicas (97 samples, 0.05%)</title><rect x="1093.6" y="659.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1096.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ServiceUtils.isProxied (422 samples, 0.20%)</title><rect x="1094.2" y="675.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1097.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (422 samples, 0.20%)</title><rect x="1094.2" y="659.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1097.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (422 samples, 0.20%)</title><rect x="1094.2" y="643.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1097.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (422 samples, 0.20%)</title><rect x="1094.2" y="627.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1097.2" y="638.0"></text>
</g>
<g>
<title>java.lang.String (207 samples, 0.10%)</title><rect x="1094.2" y="611.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1097.2" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (215 samples, 0.10%)</title><rect x="1095.3" y="611.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.3" y="622.0"></text>
</g>
<g>
<title>byte[] (215 samples, 0.10%)</title><rect x="1095.3" y="595.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1098.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (779 samples, 0.37%)</title><rect x="1096.5" y="707.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1099.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (779 samples, 0.37%)</title><rect x="1096.5" y="691.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1099.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (779 samples, 0.37%)</title><rect x="1096.5" y="675.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String (337 samples, 0.16%)</title><rect x="1096.5" y="659.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1099.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (442 samples, 0.21%)</title><rect x="1098.4" y="659.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1101.4" y="670.0"></text>
</g>
<g>
<title>byte[] (442 samples, 0.21%)</title><rect x="1098.4" y="643.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1101.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,241 samples, 2.00%)</title><rect x="1100.9" y="739.0" width="23.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1103.9" y="750.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (539 samples, 0.25%)</title><rect x="1100.9" y="723.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1103.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,029 samples, 0.49%)</title><rect x="1103.9" y="723.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.9" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (1,029 samples, 0.49%)</title><rect x="1103.9" y="707.0" width="5.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1106.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,673 samples, 1.26%)</title><rect x="1109.6" y="723.0" width="14.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1112.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,673 samples, 1.26%)</title><rect x="1109.6" y="707.0" width="14.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1112.6" y="718.0"></text>
</g>
<g>
<title>char[] (1,644 samples, 0.78%)</title><rect x="1109.6" y="691.0" width="9.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1112.6" y="702.0"></text>
</g>
<g>
<title>java.lang.String (322 samples, 0.15%)</title><rect x="1118.8" y="691.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1121.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (707 samples, 0.33%)</title><rect x="1120.6" y="691.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (707 samples, 0.33%)</title><rect x="1120.6" y="675.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (707 samples, 0.33%)</title><rect x="1120.6" y="659.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1123.6" y="670.0"></text>
</g>
<g>
<title>byte[] (707 samples, 0.33%)</title><rect x="1120.6" y="643.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1123.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (348 samples, 0.16%)</title><rect x="1124.5" y="739.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1127.5" y="750.0"></text>
</g>
<g>
<title>byte[] (348 samples, 0.16%)</title><rect x="1124.5" y="723.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1127.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (619 samples, 0.29%)</title><rect x="1126.4" y="739.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (619 samples, 0.29%)</title><rect x="1126.4" y="723.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1129.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (619 samples, 0.29%)</title><rect x="1126.4" y="707.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.4" y="718.0"></text>
</g>
<g>
<title>java.lang.String (316 samples, 0.15%)</title><rect x="1126.4" y="691.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1129.4" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (303 samples, 0.14%)</title><rect x="1128.2" y="691.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1131.2" y="702.0"></text>
</g>
<g>
<title>byte[] (303 samples, 0.14%)</title><rect x="1128.2" y="675.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1131.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,037 samples, 4.74%)</title><rect x="1129.9" y="739.0" width="56.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1132.9" y="750.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,037 samples, 4.74%)</title><rect x="1129.9" y="723.0" width="56.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.9" y="734.0">one/n..</text>
</g>
<g>
<title>char[] (5,013 samples, 2.37%)</title><rect x="1129.9" y="707.0" width="27.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1132.9" y="718.0">c..</text>
</g>
<g>
<title>java.lang.String (1,764 samples, 0.83%)</title><rect x="1157.8" y="707.0" width="9.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1160.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,260 samples, 1.54%)</title><rect x="1167.7" y="707.0" width="18.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1170.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,260 samples, 1.54%)</title><rect x="1167.7" y="691.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1170.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,260 samples, 1.54%)</title><rect x="1167.7" y="675.0" width="18.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1170.7" y="686.0"></text>
</g>
<g>
<title>byte[] (3,260 samples, 1.54%)</title><rect x="1167.7" y="659.0" width="18.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1170.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO$Worker.run (740 samples, 0.35%)</title><rect x="1185.9" y="803.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.dump (740 samples, 0.35%)</title><rect x="1185.9" y="787.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.write (732 samples, 0.35%)</title><rect x="1185.9" y="771.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.writeOffsets (109 samples, 0.05%)</title><rect x="1185.9" y="755.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Bytes.fromInt (109 samples, 0.05%)</title><rect x="1185.9" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (109 samples, 0.05%)</title><rect x="1185.9" y="723.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1188.9" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (74 samples, 0.03%)</title><rect x="1185.9" y="707.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1188.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.writeRows (623 samples, 0.29%)</title><rect x="1186.5" y="755.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Bytes.fromInt (108 samples, 0.05%)</title><rect x="1186.8" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1189.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (108 samples, 0.05%)</title><rect x="1186.8" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1189.8" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (59 samples, 0.03%)</title><rect x="1186.8" y="707.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1189.8" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (49 samples, 0.02%)</title><rect x="1187.1" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.1" y="718.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.02%)</title><rect x="1187.1" y="691.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1190.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Bytes.fromLong (123 samples, 0.06%)</title><rect x="1187.4" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (123 samples, 0.06%)</title><rect x="1187.4" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.4" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (76 samples, 0.04%)</title><rect x="1187.4" y="707.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1190.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (47 samples, 0.02%)</title><rect x="1187.8" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1190.8" y="718.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.02%)</title><rect x="1187.8" y="691.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1190.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (60 samples, 0.03%)</title><rect x="1188.1" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1191.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (60 samples, 0.03%)</title><rect x="1188.1" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.1" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (60 samples, 0.03%)</title><rect x="1188.1" y="707.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1191.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getValue (73 samples, 0.03%)</title><rect x="1188.4" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.4" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (73 samples, 0.03%)</title><rect x="1188.4" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.4" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (73 samples, 0.03%)</title><rect x="1188.4" y="707.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1191.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.writeByteBuffer (216 samples, 0.10%)</title><rect x="1188.8" y="739.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Bytes.fromInt (216 samples, 0.10%)</title><rect x="1188.8" y="723.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (216 samples, 0.10%)</title><rect x="1188.8" y="707.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.8" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (158 samples, 0.07%)</title><rect x="1188.8" y="691.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1191.8" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (58 samples, 0.03%)</title><rect x="1189.7" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.7" y="702.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.03%)</title><rect x="1189.7" y="675.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1192.7" y="686.0"></text>
</g>
</g>
</svg>
