<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1173"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1173"> </text>
<g id="frames">
<g>
<title>all (7,288 samples, 100.00%)</title><rect x="10.0" y="1139.0" width="1180.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="13.0" y="1150.0">all</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.04%)</title><rect x="10.2" y="1123.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.2" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.07%)</title><rect x="10.6" y="1123.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.6" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (4 samples, 0.05%)</title><rect x="10.6" y="1107.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.6" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="10.8" y="1091.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.8" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="10.8" y="1075.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.8" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="10.8" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.8" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="10.8" y="1043.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.8" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="11.5" y="1123.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="14.5" y="1134.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.05%)</title><rect x="11.5" y="1107.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.5" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.05%)</title><rect x="11.5" y="1091.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="14.5" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="11.5" y="1075.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.5" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="11.5" y="1059.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.5" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (17 samples, 0.23%)</title><rect x="12.1" y="1123.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="15.1" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="12.3" y="1107.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="15.3" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (13 samples, 0.18%)</title><rect x="12.8" y="1107.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="15.8" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (12 samples, 0.16%)</title><rect x="12.8" y="1091.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="15.8" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.15%)</title><rect x="12.9" y="1075.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.9" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (9 samples, 0.12%)</title><rect x="13.2" y="1059.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.2" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.11%)</title><rect x="13.2" y="1043.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.2" y="1054.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (2 samples, 0.03%)</title><rect x="13.2" y="1027.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="16.2" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (4 samples, 0.05%)</title><rect x="13.6" y="1027.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="16.6" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.03%)</title><rect x="13.7" y="1011.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.7" y="1022.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (2 samples, 0.03%)</title><rect x="13.7" y="995.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="16.7" y="1006.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (2 samples, 0.03%)</title><rect x="13.7" y="979.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.7" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (119 samples, 1.63%)</title><rect x="14.9" y="1123.0" width="19.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.9" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (109 samples, 1.50%)</title><rect x="16.0" y="1107.0" width="17.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="19.0" y="1118.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="17.3" y="1091.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="20.3" y="1102.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.03%)</title><rect x="17.6" y="1091.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="20.6" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (35 samples, 0.48%)</title><rect x="17.9" y="1091.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="20.9" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (12 samples, 0.16%)</title><rect x="18.3" y="1075.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="21.3" y="1086.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.03%)</title><rect x="20.2" y="1075.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="23.2" y="1086.0"></text>
</g>
<g>
<title>__lll_unlock_wake (12 samples, 0.16%)</title><rect x="20.5" y="1075.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="23.5" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.10%)</title><rect x="21.3" y="1059.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="24.3" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.10%)</title><rect x="21.3" y="1043.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="24.3" y="1054.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="22.0" y="1027.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="25.0" y="1038.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="22.1" y="1011.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="25.1" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.03%)</title><rect x="22.5" y="1075.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="25.5" y="1086.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="22.8" y="1075.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="25.8" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (59 samples, 0.81%)</title><rect x="23.6" y="1091.0" width="9.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="26.6" y="1102.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.03%)</title><rect x="33.2" y="1091.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="36.2" y="1102.0"></text>
</g>
<g>
<title>[not_walkable] (10 samples, 0.14%)</title><rect x="34.3" y="1123.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="37.3" y="1134.0"></text>
</g>
<g>
<title>[not_walkable_Java] (7 samples, 0.10%)</title><rect x="35.9" y="1123.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="38.9" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="36.4" y="1107.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="39.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="37.0" y="1123.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="40.0" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.07%)</title><rect x="37.4" y="1107.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="40.4" y="1118.0"></text>
</g>
<g>
<title>[unknown_Java] (91 samples, 1.25%)</title><rect x="38.3" y="1123.0" width="14.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="41.3" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (50 samples, 0.69%)</title><rect x="45.0" y="1107.0" width="8.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="48.0" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.55%)</title><rect x="46.6" y="1091.0" width="6.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="49.6" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.55%)</title><rect x="46.6" y="1075.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="49.6" y="1086.0"></text>
</g>
<g>
<title>sys_futex (39 samples, 0.54%)</title><rect x="46.8" y="1059.0" width="6.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="49.8" y="1070.0"></text>
</g>
<g>
<title>do_futex (39 samples, 0.54%)</title><rect x="46.8" y="1043.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="49.8" y="1054.0"></text>
</g>
<g>
<title>futex_wake (39 samples, 0.54%)</title><rect x="46.8" y="1027.0" width="6.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="49.8" y="1038.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.04%)</title><rect x="47.1" y="1011.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="50.1" y="1022.0"></text>
</g>
<g>
<title>wake_up_q (34 samples, 0.47%)</title><rect x="47.6" y="1011.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="50.6" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (34 samples, 0.47%)</title><rect x="47.6" y="995.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="50.6" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (34 samples, 0.47%)</title><rect x="47.6" y="979.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="50.6" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (34 samples, 0.47%)</title><rect x="53.2" y="1123.0" width="5.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="56.2" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.30%)</title><rect x="55.2" y="1107.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="58.2" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.30%)</title><rect x="55.2" y="1091.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="58.2" y="1102.0"></text>
</g>
<g>
<title>sys_futex (20 samples, 0.27%)</title><rect x="55.5" y="1075.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="58.5" y="1086.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.21%)</title><rect x="56.1" y="1059.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="59.1" y="1070.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.19%)</title><rect x="56.3" y="1043.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="59.3" y="1054.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.07%)</title><rect x="56.6" y="1027.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="59.6" y="1038.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.03%)</title><rect x="57.4" y="1027.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="60.4" y="1038.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.04%)</title><rect x="57.8" y="1027.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="60.8" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="58.9" y="1123.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="61.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,779 samples, 51.85%)</title><rect x="59.2" y="1123.0" width="611.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.2" y="1134.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,779 samples, 51.85%)</title><rect x="59.2" y="1107.0" width="611.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.2" y="1118.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,779 samples, 51.85%)</title><rect x="59.2" y="1091.0" width="611.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.2" y="1102.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.03%)</title><rect x="59.9" y="1075.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (875 samples, 12.01%)</title><rect x="60.4" y="1075.0" width="141.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.4" y="1086.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (874 samples, 11.99%)</title><rect x="60.5" y="1059.0" width="141.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.5" y="1070.0">java/util/concurre..</text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="60.7" y="1043.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="63.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (869 samples, 11.92%)</title><rect x="61.0" y="1043.0" width="140.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.0" y="1054.0">java/util/concurre..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1879542087.apply (867 samples, 11.90%)</title><rect x="61.3" y="1027.0" width="140.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.3" y="1038.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (865 samples, 11.87%)</title><rect x="61.6" y="1011.0" width="140.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.6" y="1022.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (865 samples, 11.87%)</title><rect x="61.6" y="995.0" width="140.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.6" y="1006.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3 samples, 0.04%)</title><rect x="61.6" y="979.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3 samples, 0.04%)</title><rect x="61.6" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.04%)</title><rect x="61.6" y="947.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.04%)</title><rect x="62.1" y="979.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (713 samples, 9.78%)</title><rect x="62.6" y="979.0" width="115.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.6" y="990.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (713 samples, 9.78%)</title><rect x="62.6" y="963.0" width="115.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.6" y="974.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (713 samples, 9.78%)</title><rect x="62.6" y="947.0" width="115.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.6" y="958.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (305 samples, 4.18%)</title><rect x="62.6" y="931.0" width="49.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.6" y="942.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (305 samples, 4.18%)</title><rect x="62.6" y="915.0" width="49.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.6" y="926.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (305 samples, 4.18%)</title><rect x="62.6" y="899.0" width="49.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.6" y="910.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.08%)</title><rect x="62.6" y="883.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.08%)</title><rect x="62.6" y="867.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.08%)</title><rect x="62.6" y="851.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (6 samples, 0.08%)</title><rect x="62.6" y="835.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.08%)</title><rect x="62.6" y="819.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.08%)</title><rect x="62.6" y="803.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/2004840984.apply (2 samples, 0.03%)</title><rect x="63.3" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/2004840984.apply (299 samples, 4.10%)</title><rect x="63.6" y="883.0" width="48.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.6" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (298 samples, 4.09%)</title><rect x="63.8" y="867.0" width="48.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.8" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (298 samples, 4.09%)</title><rect x="63.8" y="851.0" width="48.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.8" y="862.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$150/238148860.apply (296 samples, 4.06%)</title><rect x="63.8" y="835.0" width="47.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.8" y="846.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (296 samples, 4.06%)</title><rect x="63.8" y="819.0" width="47.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.8" y="830.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5 samples, 0.07%)</title><rect x="63.8" y="803.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5 samples, 0.07%)</title><rect x="63.8" y="787.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.03%)</title><rect x="64.2" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.04%)</title><rect x="64.6" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.04%)</title><rect x="64.6" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.04%)</title><rect x="64.6" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (288 samples, 3.95%)</title><rect x="65.0" y="803.0" width="46.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.0" y="814.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (259 samples, 3.55%)</title><rect x="65.4" y="787.0" width="41.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.4" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (258 samples, 3.54%)</title><rect x="65.5" y="771.0" width="41.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.5" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.03%)</title><rect x="65.7" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$243/1695633741.apply (255 samples, 3.50%)</title><rect x="66.0" y="755.0" width="41.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.0" y="766.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (255 samples, 3.50%)</title><rect x="66.0" y="739.0" width="41.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.0" y="750.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.03%)</title><rect x="66.0" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="66.0" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="66.3" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.14%)</title><rect x="66.7" y="723.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.14%)</title><rect x="66.7" y="707.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (5 samples, 0.07%)</title><rect x="66.7" y="691.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (5 samples, 0.07%)</title><rect x="66.7" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (5 samples, 0.07%)</title><rect x="66.7" y="659.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.07%)</title><rect x="67.5" y="691.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.07%)</title><rect x="67.5" y="675.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.04%)</title><rect x="67.8" y="659.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.04%)</title><rect x="67.8" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.04%)</title><rect x="67.8" y="627.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (3 samples, 0.04%)</title><rect x="67.8" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.03%)</title><rect x="68.0" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.03%)</title><rect x="68.0" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.03%)</title><rect x="68.0" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.03%)</title><rect x="68.0" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.03%)</title><rect x="68.0" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.0" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.03%)</title><rect x="68.0" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.03%)</title><rect x="68.0" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.03%)</title><rect x="68.0" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.03%)</title><rect x="68.0" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.03%)</title><rect x="68.0" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.03%)</title><rect x="68.0" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="68.0" y="419.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="71.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="68.0" y="403.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="71.0" y="414.0"></text>
</g>
<g>
<title>__GI___writev (2 samples, 0.03%)</title><rect x="68.0" y="387.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="71.0" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="68.0" y="371.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="71.0" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="68.0" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="71.0" y="366.0"></text>
</g>
<g>
<title>sys_writev (2 samples, 0.03%)</title><rect x="68.0" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="71.0" y="350.0"></text>
</g>
<g>
<title>do_writev (2 samples, 0.03%)</title><rect x="68.0" y="323.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="71.0" y="334.0"></text>
</g>
<g>
<title>vfs_writev (2 samples, 0.03%)</title><rect x="68.0" y="307.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="71.0" y="318.0"></text>
</g>
<g>
<title>do_iter_write (2 samples, 0.03%)</title><rect x="68.0" y="291.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="71.0" y="302.0"></text>
</g>
<g>
<title>do_iter_readv_writev (2 samples, 0.03%)</title><rect x="68.0" y="275.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="71.0" y="286.0"></text>
</g>
<g>
<title>sock_write_iter (2 samples, 0.03%)</title><rect x="68.0" y="259.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="71.0" y="270.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.03%)</title><rect x="68.0" y="243.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="71.0" y="254.0"></text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.03%)</title><rect x="68.0" y="227.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="71.0" y="238.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.03%)</title><rect x="68.0" y="211.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="71.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (56 samples, 0.77%)</title><rect x="68.3" y="723.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.07%)</title><rect x="68.3" y="707.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (51 samples, 0.70%)</title><rect x="69.1" y="707.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (17 samples, 0.23%)</title><rect x="69.1" y="691.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (17 samples, 0.23%)</title><rect x="69.1" y="675.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (17 samples, 0.23%)</title><rect x="69.1" y="659.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (15 samples, 0.21%)</title><rect x="69.1" y="643.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (15 samples, 0.21%)</title><rect x="69.1" y="627.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (15 samples, 0.21%)</title><rect x="69.1" y="611.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.07%)</title><rect x="70.7" y="595.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="70.7" y="579.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="73.7" y="590.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (3 samples, 0.04%)</title><rect x="70.7" y="563.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="73.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="70.7" y="547.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="73.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="70.7" y="531.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="73.7" y="542.0"></text>
</g>
<g>
<title>__write (3 samples, 0.04%)</title><rect x="70.7" y="515.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="73.7" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="70.9" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="73.9" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="70.9" y="483.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="73.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (2 samples, 0.03%)</title><rect x="71.5" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (34 samples, 0.47%)</title><rect x="71.8" y="691.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (34 samples, 0.47%)</title><rect x="71.8" y="675.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (28 samples, 0.38%)</title><rect x="72.3" y="659.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (26 samples, 0.36%)</title><rect x="72.3" y="643.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (26 samples, 0.36%)</title><rect x="72.3" y="627.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (25 samples, 0.34%)</title><rect x="72.5" y="611.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (19 samples, 0.26%)</title><rect x="73.5" y="595.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.26%)</title><rect x="73.5" y="579.0" width="3.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="76.5" y="590.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (8 samples, 0.11%)</title><rect x="73.5" y="563.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="76.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="73.5" y="547.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="76.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="73.5" y="531.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="76.5" y="542.0"></text>
</g>
<g>
<title>__write (8 samples, 0.11%)</title><rect x="73.5" y="515.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="76.5" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="74.1" y="499.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="77.1" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="74.1" y="483.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="77.1" y="494.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.04%)</title><rect x="74.3" y="467.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="77.3" y="478.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.04%)</title><rect x="74.3" y="451.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="77.3" y="462.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.04%)</title><rect x="74.3" y="435.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="77.3" y="446.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.04%)</title><rect x="74.3" y="419.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="77.3" y="430.0"></text>
</g>
<g>
<title>pipe_write (3 samples, 0.04%)</title><rect x="74.3" y="403.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="77.3" y="414.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="74.3" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="77.3" y="398.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="74.3" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="77.3" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="74.3" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="77.3" y="366.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.15%)</title><rect x="74.8" y="563.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="77.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="74.8" y="547.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="77.8" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="75.1" y="531.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="78.1" y="542.0"></text>
</g>
<g>
<title>__write (2 samples, 0.03%)</title><rect x="75.1" y="515.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="78.1" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="75.1" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.1" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="75.1" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="78.1" y="494.0"></text>
</g>
<g>
<title>__write (2 samples, 0.03%)</title><rect x="75.4" y="531.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="78.4" y="542.0"></text>
</g>
<g>
<title>__write (5 samples, 0.07%)</title><rect x="75.7" y="547.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="78.7" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="75.7" y="531.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="78.7" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="75.7" y="515.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="78.7" y="526.0"></text>
</g>
<g>
<title>sys_write (5 samples, 0.07%)</title><rect x="75.7" y="499.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="78.7" y="510.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.07%)</title><rect x="75.7" y="483.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="78.7" y="494.0"></text>
</g>
<g>
<title>__vfs_write (4 samples, 0.05%)</title><rect x="75.7" y="467.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="78.7" y="478.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.05%)</title><rect x="75.7" y="451.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="78.7" y="462.0"></text>
</g>
<g>
<title>pipe_write (4 samples, 0.05%)</title><rect x="75.7" y="435.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="78.7" y="446.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.04%)</title><rect x="75.9" y="419.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="78.9" y="430.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.04%)</title><rect x="75.9" y="403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="78.9" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="75.9" y="387.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="78.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (2 samples, 0.03%)</title><rect x="76.5" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.5" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="76.5" y="627.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="79.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.04%)</title><rect x="76.9" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (185 samples, 2.54%)</title><rect x="77.4" y="723.0" width="29.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.4" y="734.0">jd..</text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.14%)</title><rect x="77.7" y="707.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.14%)</title><rect x="77.7" y="691.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (10 samples, 0.14%)</title><rect x="77.7" y="675.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="79.3" y="707.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (135 samples, 1.85%)</title><rect x="79.9" y="707.0" width="21.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.9" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (6 samples, 0.08%)</title><rect x="80.1" y="691.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.1" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.08%)</title><rect x="80.1" y="675.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.1" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (6 samples, 0.08%)</title><rect x="80.1" y="659.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (6 samples, 0.08%)</title><rect x="80.1" y="643.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.08%)</title><rect x="80.1" y="627.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.1" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.07%)</title><rect x="80.3" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="80.6" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="80.6" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="80.6" y="563.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (65 samples, 0.89%)</title><rect x="81.1" y="691.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.04%)</title><rect x="84.3" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.3" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.04%)</title><rect x="84.3" y="659.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.3" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.04%)</title><rect x="84.3" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.3" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.04%)</title><rect x="84.3" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.3" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (7 samples, 0.10%)</title><rect x="84.8" y="675.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.8" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (7 samples, 0.10%)</title><rect x="84.8" y="659.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.8" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (7 samples, 0.10%)</title><rect x="84.8" y="643.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.8" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (7 samples, 0.10%)</title><rect x="84.8" y="627.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.8" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (7 samples, 0.10%)</title><rect x="84.8" y="611.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.8" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (7 samples, 0.10%)</title><rect x="84.8" y="595.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.8" y="606.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$259/1931801631.test (29 samples, 0.40%)</title><rect x="86.1" y="675.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.04%)</title><rect x="86.3" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.3" y="670.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (25 samples, 0.34%)</title><rect x="86.7" y="659.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$84/1248234350.test (25 samples, 0.34%)</title><rect x="86.7" y="643.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="89.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (25 samples, 0.34%)</title><rect x="86.7" y="627.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.7" y="638.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$73/1620948027.test (25 samples, 0.34%)</title><rect x="86.7" y="611.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.7" y="622.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (25 samples, 0.34%)</title><rect x="86.7" y="595.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$72/1431467659.test (25 samples, 0.34%)</title><rect x="86.7" y="579.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (25 samples, 0.34%)</title><rect x="86.7" y="563.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (17 samples, 0.23%)</title><rect x="86.7" y="547.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (17 samples, 0.23%)</title><rect x="86.7" y="531.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.08%)</title><rect x="86.7" y="515.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="89.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.15%)</title><rect x="87.7" y="515.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.07%)</title><rect x="88.2" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.05%)</title><rect x="88.4" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.4" y="494.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (4 samples, 0.05%)</title><rect x="88.4" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.4" y="478.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (4 samples, 0.05%)</title><rect x="88.4" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.04%)</title><rect x="89.0" y="499.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.11%)</title><rect x="89.5" y="547.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.11%)</title><rect x="89.5" y="531.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.11%)</title><rect x="89.5" y="515.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.5" y="526.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="90.5" y="499.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="93.5" y="510.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.04%)</title><rect x="90.8" y="675.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="93.8" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="91.3" y="675.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="94.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (62 samples, 0.85%)</title><rect x="91.8" y="691.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.8" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (62 samples, 0.85%)</title><rect x="91.8" y="675.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.8" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (62 samples, 0.85%)</title><rect x="91.8" y="659.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.8" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (58 samples, 0.80%)</title><rect x="92.4" y="643.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.4" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1441133448.accept (51 samples, 0.70%)</title><rect x="93.2" y="627.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.2" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (50 samples, 0.69%)</title><rect x="93.4" y="611.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (25 samples, 0.34%)</title><rect x="94.2" y="595.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="97.2" y="606.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="95.3" y="579.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="98.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/140979054.accept (14 samples, 0.19%)</title><rect x="96.0" y="579.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.0" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (14 samples, 0.19%)</title><rect x="96.0" y="563.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (20 samples, 0.27%)</title><rect x="98.2" y="595.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (9 samples, 0.12%)</title><rect x="99.2" y="579.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (9 samples, 0.12%)</title><rect x="99.2" y="563.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (9 samples, 0.12%)</title><rect x="99.2" y="547.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.07%)</title><rect x="100.7" y="579.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.7" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.03%)</title><rect x="101.5" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (7 samples, 0.10%)</title><rect x="101.8" y="707.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (7 samples, 0.10%)</title><rect x="101.8" y="691.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (7 samples, 0.10%)</title><rect x="101.8" y="675.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.8" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="102.5" y="659.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="105.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (27 samples, 0.37%)</title><rect x="102.9" y="707.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.9" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (19 samples, 0.26%)</title><rect x="103.9" y="691.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.08%)</title><rect x="105.5" y="675.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.08%)</title><rect x="105.5" y="659.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.08%)</title><rect x="105.5" y="643.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.03%)</title><rect x="106.7" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.setRetryOnError (2 samples, 0.03%)</title><rect x="107.3" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (25 samples, 0.34%)</title><rect x="107.6" y="787.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (25 samples, 0.34%)</title><rect x="107.6" y="771.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.03%)</title><rect x="108.0" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.03%)</title><rect x="108.0" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (21 samples, 0.29%)</title><rect x="108.3" y="755.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (21 samples, 0.29%)</title><rect x="108.3" y="739.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (14 samples, 0.19%)</title><rect x="109.4" y="723.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (12 samples, 0.16%)</title><rect x="109.7" y="707.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7 samples, 0.10%)</title><rect x="110.1" y="691.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1601852745.run (7 samples, 0.10%)</title><rect x="110.1" y="675.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7 samples, 0.10%)</title><rect x="110.1" y="659.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.05%)</title><rect x="110.2" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (2 samples, 0.03%)</title><rect x="110.5" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.03%)</title><rect x="110.5" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="110.5" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="110.5" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 0.03%)</title><rect x="110.9" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.03%)</title><rect x="110.9" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3 samples, 0.04%)</title><rect x="111.2" y="691.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="114.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.03%)</title><rect x="111.4" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.03%)</title><rect x="111.4" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="111.7" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (407 samples, 5.58%)</title><rect x="112.2" y="931.0" width="65.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.2" y="942.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.11%)</title><rect x="112.3" y="915.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.10%)</title><rect x="112.5" y="899.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.05%)</title><rect x="112.7" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.7" y="894.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="112.8" y="867.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="115.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$215/188872055.apply (2 samples, 0.03%)</title><rect x="113.3" y="883.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (2 samples, 0.03%)</title><rect x="113.3" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.03%)</title><rect x="113.3" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.03%)</title><rect x="113.3" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="113.3" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.15%)</title><rect x="113.6" y="915.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 0.15%)</title><rect x="113.6" y="899.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (2 samples, 0.03%)</title><rect x="113.8" y="883.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.03%)</title><rect x="113.8" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="116.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (2 samples, 0.03%)</title><rect x="113.8" y="851.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.04%)</title><rect x="114.1" y="883.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.1" y="894.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="114.1" y="867.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="117.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.03%)</title><rect x="114.6" y="883.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="117.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="114.9" y="883.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="114.9" y="867.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (387 samples, 5.31%)</title><rect x="115.4" y="915.0" width="62.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="118.4" y="926.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (338 samples, 4.64%)</title><rect x="115.4" y="899.0" width="54.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.4" y="910.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (338 samples, 4.64%)</title><rect x="115.4" y="883.0" width="54.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.4" y="894.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (336 samples, 4.61%)</title><rect x="115.4" y="867.0" width="54.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.4" y="878.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.05%)</title><rect x="115.4" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.05%)</title><rect x="115.4" y="835.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.05%)</title><rect x="115.4" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (4 samples, 0.05%)</title><rect x="115.4" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.05%)</title><rect x="115.4" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.05%)</title><rect x="115.4" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$162/1969843662.apply (2 samples, 0.03%)</title><rect x="115.7" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$162/1969843662.apply (332 samples, 4.56%)</title><rect x="116.1" y="851.0" width="53.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="119.1" y="862.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (331 samples, 4.54%)</title><rect x="116.2" y="835.0" width="53.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.2" y="846.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (331 samples, 4.54%)</title><rect x="116.2" y="819.0" width="53.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.2" y="830.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (153 samples, 2.10%)</title><rect x="116.4" y="803.0" width="24.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.4" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (153 samples, 2.10%)</title><rect x="116.4" y="787.0" width="24.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.4" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (151 samples, 2.07%)</title><rect x="116.7" y="771.0" width="24.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.7" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/1123552469.apply (151 samples, 2.07%)</title><rect x="116.7" y="755.0" width="24.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.7" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (151 samples, 2.07%)</title><rect x="116.7" y="739.0" width="24.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.7" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (151 samples, 2.07%)</title><rect x="116.7" y="723.0" width="24.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.7" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (151 samples, 2.07%)</title><rect x="116.7" y="707.0" width="24.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.7" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (127 samples, 1.74%)</title><rect x="116.7" y="691.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.7" y="702.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (7 samples, 0.10%)</title><rect x="116.7" y="675.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.7" y="686.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (7 samples, 0.10%)</title><rect x="116.7" y="659.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.7" y="670.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (6 samples, 0.08%)</title><rect x="116.9" y="643.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.9" y="654.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (6 samples, 0.08%)</title><rect x="116.9" y="627.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (106 samples, 1.45%)</title><rect x="117.8" y="675.0" width="17.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (103 samples, 1.41%)</title><rect x="117.8" y="659.0" width="16.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (103 samples, 1.41%)</title><rect x="117.8" y="643.0" width="16.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1758386724.linkToTargetMethod (6 samples, 0.08%)</title><rect x="118.3" y="627.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="118.3" y="611.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/594427726.get$Lambda (6 samples, 0.08%)</title><rect x="118.3" y="595.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/594427726.&lt;init&gt; (6 samples, 0.08%)</title><rect x="118.3" y="579.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.3" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (94 samples, 1.29%)</title><rect x="119.3" y="627.0" width="15.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="122.3" y="638.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (71 samples, 0.97%)</title><rect x="119.3" y="611.0" width="11.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="122.3" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (5 samples, 0.07%)</title><rect x="120.1" y="595.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="123.1" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (5 samples, 0.07%)</title><rect x="120.1" y="579.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="123.1" y="590.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (2 samples, 0.03%)</title><rect x="120.9" y="595.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="123.9" y="606.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (16 samples, 0.22%)</title><rect x="121.2" y="595.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="124.2" y="606.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (2 samples, 0.03%)</title><rect x="121.6" y="579.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="124.6" y="590.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (2 samples, 0.03%)</title><rect x="121.9" y="579.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="124.9" y="590.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (4 samples, 0.05%)</title><rect x="122.4" y="579.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="125.4" y="590.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.03%)</title><rect x="122.7" y="563.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="125.7" y="574.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.03%)</title><rect x="123.0" y="579.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="126.0" y="590.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.03%)</title><rect x="123.5" y="579.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="126.5" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.296] (4 samples, 0.05%)</title><rect x="124.3" y="595.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="127.3" y="606.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.03%)</title><rect x="125.1" y="595.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="128.1" y="606.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.03%)</title><rect x="125.4" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="128.4" y="606.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (12 samples, 0.16%)</title><rect x="125.9" y="595.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="128.9" y="606.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (9 samples, 0.12%)</title><rect x="126.3" y="579.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="129.3" y="590.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.07%)</title><rect x="126.3" y="563.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="129.3" y="574.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="126.7" y="547.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="129.7" y="558.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.05%)</title><rect x="127.1" y="563.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="130.1" y="574.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (18 samples, 0.25%)</title><rect x="127.9" y="595.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="130.9" y="606.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (7 samples, 0.10%)</title><rect x="128.4" y="579.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="131.4" y="590.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.03%)</title><rect x="129.2" y="563.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="132.2" y="574.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.03%)</title><rect x="129.5" y="579.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="132.5" y="590.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.05%)</title><rect x="129.8" y="579.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="132.8" y="590.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="130.1" y="563.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="133.1" y="574.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.03%)</title><rect x="131.1" y="611.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="134.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/594427726.run (16 samples, 0.22%)</title><rect x="131.6" y="611.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (16 samples, 0.22%)</title><rect x="131.6" y="595.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.6" y="606.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (16 samples, 0.22%)</title><rect x="131.6" y="579.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.04%)</title><rect x="132.2" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.2" y="574.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (7 samples, 0.10%)</title><rect x="132.7" y="563.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.7" y="574.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (7 samples, 0.10%)</title><rect x="132.7" y="547.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.7" y="558.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.03%)</title><rect x="133.5" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.03%)</title><rect x="133.5" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.5" y="526.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.03%)</title><rect x="133.9" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.03%)</title><rect x="133.9" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (3 samples, 0.04%)</title><rect x="134.5" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (3 samples, 0.04%)</title><rect x="134.5" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.5" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (2 samples, 0.03%)</title><rect x="134.5" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (14 samples, 0.19%)</title><rect x="135.0" y="675.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="138.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.08%)</title><rect x="135.0" y="659.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.0" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.08%)</title><rect x="135.0" y="643.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.0" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="135.0" y="627.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="135.3" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.3" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="135.3" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="135.5" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.length (3 samples, 0.04%)</title><rect x="136.0" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (5 samples, 0.07%)</title><rect x="136.5" y="659.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.5" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putInt (2 samples, 0.03%)</title><rect x="136.5" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putIntUnaligned (2 samples, 0.03%)</title><rect x="136.5" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putShort (3 samples, 0.04%)</title><rect x="136.8" y="643.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putShortUnaligned (3 samples, 0.04%)</title><rect x="136.8" y="627.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (24 samples, 0.33%)</title><rect x="137.3" y="691.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.07%)</title><rect x="137.9" y="675.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.9" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.07%)</title><rect x="137.9" y="659.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="137.9" y="643.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.9" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="137.9" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.9" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (15 samples, 0.21%)</title><rect x="138.7" y="675.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.11%)</title><rect x="139.5" y="659.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.11%)</title><rect x="139.5" y="643.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (8 samples, 0.11%)</title><rect x="139.5" y="627.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.5" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.03%)</title><rect x="140.8" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (177 samples, 2.43%)</title><rect x="141.1" y="803.0" width="28.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.1" y="814.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (176 samples, 2.41%)</title><rect x="141.1" y="787.0" width="28.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.1" y="798.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (9 samples, 0.12%)</title><rect x="141.8" y="771.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.03%)</title><rect x="143.3" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.03%)</title><rect x="143.3" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.03%)</title><rect x="143.3" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.03%)</title><rect x="143.3" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.03%)</title><rect x="143.3" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.03%)</title><rect x="143.3" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (40 samples, 0.55%)</title><rect x="143.6" y="771.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (31 samples, 0.43%)</title><rect x="143.6" y="755.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (31 samples, 0.43%)</title><rect x="143.6" y="739.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.6" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.19%)</title><rect x="143.6" y="723.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.6" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="143.6" y="707.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (2 samples, 0.03%)</title><rect x="143.7" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.7" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.equals (2 samples, 0.03%)</title><rect x="143.7" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.7" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.15%)</title><rect x="144.1" y="707.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (11 samples, 0.15%)</title><rect x="144.1" y="691.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.1" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.03%)</title><rect x="145.0" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.0" y="686.0"></text>
</g>
<g>
<title>java/util/Objects.hash (3 samples, 0.04%)</title><rect x="145.4" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.4" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (3 samples, 0.04%)</title><rect x="145.4" y="659.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="148.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (17 samples, 0.23%)</title><rect x="145.8" y="723.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.8" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (6 samples, 0.08%)</title><rect x="146.8" y="707.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.8" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (6 samples, 0.08%)</title><rect x="146.8" y="691.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.8" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.remove (4 samples, 0.05%)</title><rect x="147.9" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.9" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlink (3 samples, 0.04%)</title><rect x="148.1" y="691.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getPlainConnection (8 samples, 0.11%)</title><rect x="148.6" y="755.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.&lt;init&gt; (8 samples, 0.11%)</title><rect x="148.6" y="739.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.&lt;init&gt; (8 samples, 0.11%)</title><rect x="148.6" y="723.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (8 samples, 0.11%)</title><rect x="148.6" y="707.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (8 samples, 0.11%)</title><rect x="148.6" y="691.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (121 samples, 1.66%)</title><rect x="150.1" y="771.0" width="19.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.1" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (110 samples, 1.51%)</title><rect x="151.8" y="755.0" width="17.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.8" y="766.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="151.8" y="739.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="154.8" y="750.0"></text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.03%)</title><rect x="152.2" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.2" y="750.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.03%)</title><rect x="152.6" y="739.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="155.6" y="750.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (76 samples, 1.04%)</title><rect x="153.0" y="739.0" width="12.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="156.0" y="750.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (2 samples, 0.03%)</title><rect x="154.7" y="723.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="157.7" y="734.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.03%)</title><rect x="155.7" y="723.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="158.7" y="734.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (16 samples, 0.22%)</title><rect x="156.0" y="723.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="159.0" y="734.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.03%)</title><rect x="156.7" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="159.7" y="718.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (3 samples, 0.04%)</title><rect x="157.0" y="707.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="160.0" y="718.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.04%)</title><rect x="157.5" y="707.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="160.5" y="718.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.03%)</title><rect x="157.7" y="691.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="160.7" y="702.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (4 samples, 0.05%)</title><rect x="158.0" y="707.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="161.0" y="718.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.03%)</title><rect x="158.6" y="723.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="161.6" y="734.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="159.0" y="723.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="162.0" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.03%)</title><rect x="159.4" y="723.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="162.4" y="734.0"></text>
</g>
<g>
<title>nmethod::metadata_at(int) const (3 samples, 0.04%)</title><rect x="159.8" y="723.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="162.8" y="734.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (11 samples, 0.15%)</title><rect x="160.7" y="723.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="163.7" y="734.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="160.7" y="707.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="163.7" y="718.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.03%)</title><rect x="161.1" y="707.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="164.1" y="718.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (7 samples, 0.10%)</title><rect x="161.4" y="707.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="164.4" y="718.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.10%)</title><rect x="161.4" y="691.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="164.4" y="702.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (17 samples, 0.23%)</title><rect x="162.5" y="723.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="165.5" y="734.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (2 samples, 0.03%)</title><rect x="163.5" y="707.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="166.5" y="718.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (6 samples, 0.08%)</title><rect x="163.8" y="707.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="166.8" y="718.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.04%)</title><rect x="164.8" y="707.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="167.8" y="718.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.04%)</title><rect x="164.8" y="691.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="167.8" y="702.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (2 samples, 0.03%)</title><rect x="165.3" y="739.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="168.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$170/611855697.run (20 samples, 0.27%)</title><rect x="166.2" y="739.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (18 samples, 0.25%)</title><rect x="166.6" y="723.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.6" y="734.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.05%)</title><rect x="166.9" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.9" y="718.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (12 samples, 0.16%)</title><rect x="167.5" y="707.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.5" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (12 samples, 0.16%)</title><rect x="167.5" y="691.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.5" y="702.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (12 samples, 0.16%)</title><rect x="167.5" y="675.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.5" y="686.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (11 samples, 0.15%)</title><rect x="167.7" y="659.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="170.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="167.7" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="167.7" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.7" y="638.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (2 samples, 0.03%)</title><rect x="167.7" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.7" y="622.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (2 samples, 0.03%)</title><rect x="167.7" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.7" y="606.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (9 samples, 0.12%)</title><rect x="168.0" y="643.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (2 samples, 0.03%)</title><rect x="169.0" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="169.8" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.08%)</title><rect x="170.1" y="899.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="173.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.05%)</title><rect x="170.1" y="883.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.04%)</title><rect x="170.3" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.3" y="878.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="170.3" y="851.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="173.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.03%)</title><rect x="170.8" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="173.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (43 samples, 0.59%)</title><rect x="171.1" y="899.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (7 samples, 0.10%)</title><rect x="171.3" y="883.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="171.3" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="171.3" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.07%)</title><rect x="171.6" y="867.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.03%)</title><rect x="171.9" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (24 samples, 0.33%)</title><rect x="172.4" y="883.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="172.4" y="867.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="175.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (20 samples, 0.27%)</title><rect x="173.0" y="867.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.0" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/191283006.linkToTargetMethod (20 samples, 0.27%)</title><rect x="173.0" y="851.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/285778514.invoke (20 samples, 0.27%)</title><rect x="173.0" y="835.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/760951648.invoke (20 samples, 0.27%)</title><rect x="173.0" y="819.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.21%)</title><rect x="173.0" y="803.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="176.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (3 samples, 0.04%)</title><rect x="173.5" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (4 samples, 0.05%)</title><rect x="174.2" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="174.8" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="174.8" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="175.1" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/319977154.invoke (5 samples, 0.07%)</title><rect x="175.5" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="175.5" y="787.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (5 samples, 0.07%)</title><rect x="175.5" y="771.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.07%)</title><rect x="175.5" y="755.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.5" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="176.0" y="739.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="179.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (11 samples, 0.15%)</title><rect x="176.3" y="883.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.05%)</title><rect x="176.3" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="179.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.04%)</title><rect x="176.3" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="179.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (7 samples, 0.10%)</title><rect x="176.9" y="867.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (3 samples, 0.04%)</title><rect x="177.1" y="851.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (3 samples, 0.04%)</title><rect x="177.6" y="851.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (88 samples, 1.21%)</title><rect x="178.1" y="979.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="181.1" y="990.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (10 samples, 0.14%)</title><rect x="178.4" y="963.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="181.4" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.12%)</title><rect x="178.5" y="947.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.5" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="179.0" y="931.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="179.0" y="915.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.0" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="179.0" y="899.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.03%)</title><rect x="179.7" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (76 samples, 1.04%)</title><rect x="180.0" y="963.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.0" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (76 samples, 1.04%)</title><rect x="180.0" y="947.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.0" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (70 samples, 0.96%)</title><rect x="181.0" y="931.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.88%)</title><rect x="181.0" y="915.0" width="10.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="184.0" y="926.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (3 samples, 0.04%)</title><rect x="181.0" y="899.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="184.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="181.0" y="883.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="184.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="181.0" y="867.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="184.0" y="878.0"></text>
</g>
<g>
<title>__write (3 samples, 0.04%)</title><rect x="181.0" y="851.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="184.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="181.1" y="835.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="184.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="181.1" y="819.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="184.1" y="830.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.03%)</title><rect x="181.1" y="803.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="184.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.84%)</title><rect x="181.5" y="899.0" width="9.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="184.5" y="910.0"></text>
</g>
<g>
<title>__write (61 samples, 0.84%)</title><rect x="181.5" y="883.0" width="9.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="184.5" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 0.75%)</title><rect x="182.4" y="867.0" width="8.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="185.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 0.74%)</title><rect x="182.4" y="851.0" width="8.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="185.4" y="862.0"></text>
</g>
<g>
<title>sys_write (52 samples, 0.71%)</title><rect x="182.8" y="835.0" width="8.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="185.8" y="846.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="182.8" y="819.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="185.8" y="830.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="182.8" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="185.8" y="814.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="182.8" y="787.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="185.8" y="798.0"></text>
</g>
<g>
<title>vfs_write (49 samples, 0.67%)</title><rect x="183.2" y="819.0" width="8.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="186.2" y="830.0"></text>
</g>
<g>
<title>__vfs_write (43 samples, 0.59%)</title><rect x="183.6" y="803.0" width="6.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="186.6" y="814.0"></text>
</g>
<g>
<title>new_sync_write (43 samples, 0.59%)</title><rect x="183.6" y="787.0" width="6.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="186.6" y="798.0"></text>
</g>
<g>
<title>pipe_write (41 samples, 0.56%)</title><rect x="183.9" y="771.0" width="6.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="186.9" y="782.0"></text>
</g>
<g>
<title>__wake_up_sync_key (29 samples, 0.40%)</title><rect x="184.4" y="755.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="187.4" y="766.0"></text>
</g>
<g>
<title>__wake_up_common_lock (29 samples, 0.40%)</title><rect x="184.4" y="739.0" width="4.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="187.4" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 0.40%)</title><rect x="184.4" y="723.0" width="4.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="187.4" y="734.0"></text>
</g>
<g>
<title>copy_page_from_iter (3 samples, 0.04%)</title><rect x="189.1" y="755.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="192.1" y="766.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="189.2" y="739.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="192.2" y="750.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="189.7" y="755.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.7" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.04%)</title><rect x="190.0" y="755.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="193.0" y="766.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.05%)</title><rect x="190.5" y="803.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="193.5" y="814.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="190.9" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="193.9" y="798.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="190.9" y="771.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="193.9" y="782.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="190.9" y="755.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="193.9" y="766.0"></text>
</g>
<g>
<title>__write (3 samples, 0.04%)</title><rect x="191.3" y="915.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="194.3" y="926.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="191.8" y="915.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="194.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (2 samples, 0.03%)</title><rect x="192.3" y="979.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.3" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="192.3" y="963.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="195.3" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (2 samples, 0.03%)</title><rect x="192.3" y="947.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="195.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (41 samples, 0.56%)</title><rect x="192.6" y="979.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.6" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.hasNext (6 samples, 0.08%)</title><rect x="193.4" y="963.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.4" y="974.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (6 samples, 0.08%)</title><rect x="194.4" y="963.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="197.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (20 samples, 0.27%)</title><rect x="195.4" y="963.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (18 samples, 0.25%)</title><rect x="195.7" y="947.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.7" y="958.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (16 samples, 0.22%)</title><rect x="196.0" y="931.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.0" y="942.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.03%)</title><rect x="196.5" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.5" y="926.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (2 samples, 0.03%)</title><rect x="196.5" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.5" y="910.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (2 samples, 0.03%)</title><rect x="196.5" y="883.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.5" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (2 samples, 0.03%)</title><rect x="196.5" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.5" y="878.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (11 samples, 0.15%)</title><rect x="196.8" y="915.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.8" y="926.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (11 samples, 0.15%)</title><rect x="196.8" y="899.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.8" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="197.2" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="200.2" y="894.0"></text>
</g>
<g>
<title>JVM_IHashCode (7 samples, 0.10%)</title><rect x="197.5" y="883.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="200.5" y="894.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="197.7" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="200.7" y="878.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.03%)</title><rect x="198.0" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="201.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (4 samples, 0.05%)</title><rect x="198.6" y="963.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (15 samples, 0.21%)</title><rect x="199.3" y="979.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (15 samples, 0.21%)</title><rect x="199.3" y="963.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (10 samples, 0.14%)</title><rect x="200.1" y="947.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.1" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.now (9 samples, 0.12%)</title><rect x="200.1" y="931.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.1" y="942.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (9 samples, 0.12%)</title><rect x="200.1" y="915.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (9 samples, 0.12%)</title><rect x="200.1" y="899.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.1" y="910.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (7 samples, 0.10%)</title><rect x="200.4" y="883.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="203.4" y="894.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.03%)</title><rect x="201.2" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="204.2" y="878.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="201.7" y="1043.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="204.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (28 samples, 0.38%)</title><rect x="202.0" y="1075.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (28 samples, 0.38%)</title><rect x="202.0" y="1059.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (28 samples, 0.38%)</title><rect x="202.0" y="1043.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="205.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (28 samples, 0.38%)</title><rect x="202.0" y="1027.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.0" y="1038.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.12%)</title><rect x="203.6" y="1011.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="206.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3 samples, 0.04%)</title><rect x="205.1" y="1011.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$258/1414850782.run (2 samples, 0.03%)</title><rect x="205.6" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.04%)</title><rect x="205.9" y="1011.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (883 samples, 12.12%)</title><rect x="206.6" y="1075.0" width="142.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.6" y="1086.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (879 samples, 12.06%)</title><rect x="207.2" y="1059.0" width="142.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.2" y="1070.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (685 samples, 9.40%)</title><rect x="211.1" y="1043.0" width="110.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.1" y="1054.0">java/util/con..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.03%)</title><rect x="212.4" y="1027.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (15 samples, 0.21%)</title><rect x="212.7" y="1027.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="214.5" y="1011.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="217.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="214.8" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="217.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10 samples, 0.14%)</title><rect x="215.1" y="1027.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (6 samples, 0.08%)</title><rect x="215.8" y="1011.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.08%)</title><rect x="215.8" y="995.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (56 samples, 0.77%)</title><rect x="216.8" y="1027.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (56 samples, 0.77%)</title><rect x="216.8" y="1011.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="219.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (52 samples, 0.71%)</title><rect x="217.2" y="995.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (49 samples, 0.67%)</title><rect x="217.7" y="979.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="220.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (49 samples, 0.67%)</title><rect x="217.7" y="963.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.7" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.10%)</title><rect x="217.9" y="947.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="220.9" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="218.4" y="931.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="221.4" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (41 samples, 0.56%)</title><rect x="219.0" y="947.0" width="6.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="222.0" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.45%)</title><rect x="220.3" y="931.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="223.3" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.45%)</title><rect x="220.3" y="915.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="223.3" y="926.0"></text>
</g>
<g>
<title>sys_futex (30 samples, 0.41%)</title><rect x="220.8" y="899.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="223.8" y="910.0"></text>
</g>
<g>
<title>do_futex (30 samples, 0.41%)</title><rect x="220.8" y="883.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="223.8" y="894.0"></text>
</g>
<g>
<title>futex_wake (29 samples, 0.40%)</title><rect x="221.0" y="867.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="224.0" y="878.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="221.1" y="851.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="224.1" y="862.0"></text>
</g>
<g>
<title>wake_up_q (26 samples, 0.36%)</title><rect x="221.5" y="851.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="224.5" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (26 samples, 0.36%)</title><rect x="221.5" y="835.0" width="4.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="224.5" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (26 samples, 0.36%)</title><rect x="221.5" y="819.0" width="4.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="224.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (4 samples, 0.05%)</title><rect x="225.8" y="1027.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="228.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (4 samples, 0.05%)</title><rect x="225.8" y="1011.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (590 samples, 8.10%)</title><rect x="226.5" y="1027.0" width="95.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.5" y="1038.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (2 samples, 0.03%)</title><rect x="226.6" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="229.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (587 samples, 8.05%)</title><rect x="227.0" y="1011.0" width="95.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.0" y="1022.0">jdk/interna..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="228.9" y="995.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="231.9" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (3 samples, 0.04%)</title><rect x="229.2" y="995.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="232.2" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Park (225 samples, 3.09%)</title><rect x="229.7" y="995.0" width="36.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="232.7" y="1006.0">Uns..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.05%)</title><rect x="232.3" y="979.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="235.3" y="990.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.04%)</title><rect x="233.1" y="979.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="236.1" y="990.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (45 samples, 0.62%)</title><rect x="233.8" y="979.0" width="7.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="236.8" y="990.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (8 samples, 0.11%)</title><rect x="237.6" y="963.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="240.6" y="974.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (4 samples, 0.05%)</title><rect x="238.3" y="947.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="241.3" y="958.0"></text>
</g>
<g>
<title>Monitor::unlock() (5 samples, 0.07%)</title><rect x="238.9" y="963.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="241.9" y="974.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.10%)</title><rect x="239.8" y="963.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="242.8" y="974.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (3 samples, 0.04%)</title><rect x="241.0" y="979.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="244.0" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (6 samples, 0.08%)</title><rect x="241.5" y="979.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="244.5" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (6 samples, 0.08%)</title><rect x="242.5" y="979.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="245.5" y="990.0"></text>
</g>
<g>
<title>__lll_unlock_wake (118 samples, 1.62%)</title><rect x="243.5" y="979.0" width="19.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="246.5" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 0.75%)</title><rect x="253.7" y="963.0" width="8.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="256.7" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (55 samples, 0.75%)</title><rect x="253.7" y="947.0" width="8.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="256.7" y="958.0"></text>
</g>
<g>
<title>sys_futex (25 samples, 0.34%)</title><rect x="258.5" y="931.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="261.5" y="942.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.32%)</title><rect x="258.7" y="915.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="261.7" y="926.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.22%)</title><rect x="259.3" y="899.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="262.3" y="910.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="261.6" y="883.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="264.6" y="894.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.04%)</title><rect x="261.9" y="899.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="264.9" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="262.6" y="979.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="265.6" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.04%)</title><rect x="262.9" y="979.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="265.9" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="263.4" y="979.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="266.4" y="990.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="263.7" y="979.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="266.7" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.03%)</title><rect x="264.2" y="979.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="267.2" y="990.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (3 samples, 0.04%)</title><rect x="264.5" y="979.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="267.5" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (7 samples, 0.10%)</title><rect x="265.0" y="979.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="268.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (340 samples, 4.67%)</title><rect x="266.1" y="995.0" width="55.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="269.1" y="1006.0">[unkn..</text>
</g>
<g>
<title>__pthread_cleanup_push (2 samples, 0.03%)</title><rect x="266.1" y="979.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="269.1" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_wait (323 samples, 4.43%)</title><rect x="266.5" y="979.0" width="52.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="269.5" y="990.0">__pth..</text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="289.6" y="963.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="292.6" y="974.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="289.6" y="947.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="292.6" y="958.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="289.6" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="292.6" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="289.6" y="915.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="292.6" y="926.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.03%)</title><rect x="289.6" y="899.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="292.6" y="910.0"></text>
</g>
<g>
<title>rebalance_domains (2 samples, 0.03%)</title><rect x="289.6" y="883.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="292.6" y="894.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.03%)</title><rect x="289.6" y="867.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="292.6" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="289.6" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="292.6" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (178 samples, 2.44%)</title><rect x="289.9" y="963.0" width="28.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="292.9" y="974.0">en..</text>
</g>
<g>
<title>do_syscall_64 (178 samples, 2.44%)</title><rect x="289.9" y="947.0" width="28.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="292.9" y="958.0">do..</text>
</g>
<g>
<title>sys_futex (136 samples, 1.87%)</title><rect x="296.7" y="931.0" width="22.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="299.7" y="942.0">s..</text>
</g>
<g>
<title>do_futex (121 samples, 1.66%)</title><rect x="298.5" y="915.0" width="19.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="301.5" y="926.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.15 (2 samples, 0.03%)</title><rect x="301.6" y="899.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="304.6" y="910.0"></text>
</g>
<g>
<title>futex_wait (97 samples, 1.33%)</title><rect x="301.9" y="899.0" width="15.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="304.9" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (52 samples, 0.71%)</title><rect x="306.0" y="883.0" width="8.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="309.0" y="894.0"></text>
</g>
<g>
<title>schedule (38 samples, 0.52%)</title><rect x="308.2" y="867.0" width="6.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="311.2" y="878.0"></text>
</g>
<g>
<title>__schedule (35 samples, 0.48%)</title><rect x="308.7" y="851.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="311.7" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (29 samples, 0.40%)</title><rect x="309.7" y="835.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="312.7" y="846.0"></text>
</g>
<g>
<title>apic_timer_interrupt (5 samples, 0.07%)</title><rect x="313.6" y="819.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="316.6" y="830.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (5 samples, 0.07%)</title><rect x="313.6" y="803.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="316.6" y="814.0"></text>
</g>
<g>
<title>irq_exit (5 samples, 0.07%)</title><rect x="313.6" y="787.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="316.6" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.07%)</title><rect x="313.6" y="771.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="316.6" y="782.0"></text>
</g>
<g>
<title>run_rebalance_domains (3 samples, 0.04%)</title><rect x="313.6" y="755.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="316.6" y="766.0"></text>
</g>
<g>
<title>rebalance_domains (3 samples, 0.04%)</title><rect x="313.6" y="739.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="316.6" y="750.0"></text>
</g>
<g>
<title>update_blocked_averages (3 samples, 0.04%)</title><rect x="313.6" y="723.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="316.6" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="313.6" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="316.6" y="718.0"></text>
</g>
<g>
<title>run_timer_softirq (2 samples, 0.03%)</title><rect x="314.1" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="317.1" y="766.0"></text>
</g>
<g>
<title>call_timer_fn (2 samples, 0.03%)</title><rect x="314.1" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="317.1" y="750.0"></text>
</g>
<g>
<title>tcp_delack_timer (2 samples, 0.03%)</title><rect x="314.1" y="723.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="317.1" y="734.0"></text>
</g>
<g>
<title>futex_wait_setup (16 samples, 0.22%)</title><rect x="314.4" y="883.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="317.4" y="894.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="315.7" y="867.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="318.7" y="878.0"></text>
</g>
<g>
<title>get_futex_value_locked (5 samples, 0.07%)</title><rect x="316.2" y="867.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="319.2" y="878.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.04%)</title><rect x="317.0" y="883.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="320.0" y="894.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.04%)</title><rect x="317.6" y="899.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="320.6" y="910.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.05%)</title><rect x="318.1" y="915.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="321.1" y="926.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="318.8" y="979.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="321.8" y="990.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.07%)</title><rect x="319.2" y="979.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="322.2" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="320.1" y="979.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="323.1" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (5 samples, 0.07%)</title><rect x="320.4" y="979.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="323.4" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="321.2" y="995.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="324.2" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.04%)</title><rect x="321.5" y="995.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="324.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.04%)</title><rect x="322.0" y="1043.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (21 samples, 0.29%)</title><rect x="322.5" y="1043.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (21 samples, 0.29%)</title><rect x="322.5" y="1027.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (13 samples, 0.18%)</title><rect x="323.3" y="1011.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (13 samples, 0.18%)</title><rect x="323.3" y="995.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="326.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.18%)</title><rect x="323.3" y="979.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.16%)</title><rect x="323.5" y="963.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.5" y="974.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.04%)</title><rect x="323.5" y="947.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="326.5" y="958.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.03%)</title><rect x="323.6" y="931.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="326.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="323.9" y="947.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="326.9" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.11%)</title><rect x="323.9" y="931.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="326.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="324.4" y="915.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="327.4" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="324.4" y="899.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="327.4" y="910.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="324.8" y="883.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="327.8" y="894.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="324.8" y="867.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="327.8" y="878.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.04%)</title><rect x="324.8" y="851.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="327.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.04%)</title><rect x="325.4" y="1011.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="328.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.04%)</title><rect x="325.4" y="995.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (3 samples, 0.04%)</title><rect x="325.4" y="979.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (145 samples, 1.99%)</title><rect x="325.9" y="1043.0" width="23.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.9" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (145 samples, 1.99%)</title><rect x="325.9" y="1027.0" width="23.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="328.9" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (145 samples, 1.99%)</title><rect x="325.9" y="1011.0" width="23.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="328.9" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (139 samples, 1.91%)</title><rect x="326.9" y="995.0" width="22.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.9" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (139 samples, 1.91%)</title><rect x="326.9" y="979.0" width="22.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.9" y="990.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (19 samples, 0.26%)</title><rect x="327.5" y="963.0" width="3.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="330.5" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.04%)</title><rect x="328.3" y="947.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="331.3" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="328.8" y="947.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="331.8" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.05%)</title><rect x="329.1" y="947.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="332.1" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.04%)</title><rect x="329.9" y="947.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="332.9" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (116 samples, 1.59%)</title><rect x="330.6" y="963.0" width="18.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="333.6" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (83 samples, 1.14%)</title><rect x="335.9" y="947.0" width="13.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="338.9" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (81 samples, 1.11%)</title><rect x="335.9" y="931.0" width="13.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="338.9" y="942.0"></text>
</g>
<g>
<title>sys_futex (79 samples, 1.08%)</title><rect x="336.2" y="915.0" width="12.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="339.2" y="926.0"></text>
</g>
<g>
<title>do_futex (78 samples, 1.07%)</title><rect x="336.4" y="899.0" width="12.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="339.4" y="910.0"></text>
</g>
<g>
<title>futex_wake (78 samples, 1.07%)</title><rect x="336.4" y="883.0" width="12.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="339.4" y="894.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.08%)</title><rect x="337.2" y="867.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="340.2" y="878.0"></text>
</g>
<g>
<title>wake_q_add (2 samples, 0.03%)</title><rect x="337.9" y="851.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="340.9" y="862.0"></text>
</g>
<g>
<title>wake_up_q (66 samples, 0.91%)</title><rect x="338.4" y="867.0" width="10.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="341.4" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (66 samples, 0.91%)</title><rect x="338.4" y="851.0" width="10.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="341.4" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (65 samples, 0.89%)</title><rect x="338.5" y="835.0" width="10.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="341.5" y="846.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="349.0" y="931.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="352.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$258/1414850782.run (542 samples, 7.44%)</title><rect x="349.5" y="1075.0" width="87.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.5" y="1086.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (542 samples, 7.44%)</title><rect x="349.5" y="1059.0" width="87.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.5" y="1070.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (541 samples, 7.42%)</title><rect x="349.7" y="1043.0" width="87.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.7" y="1054.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (538 samples, 7.38%)</title><rect x="350.2" y="1027.0" width="87.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.2" y="1038.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (538 samples, 7.38%)</title><rect x="350.2" y="1011.0" width="87.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="353.2" y="1022.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (538 samples, 7.38%)</title><rect x="350.2" y="995.0" width="87.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.2" y="1006.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (531 samples, 7.29%)</title><rect x="351.3" y="979.0" width="86.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.3" y="990.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.07%)</title><rect x="351.3" y="963.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.07%)</title><rect x="351.3" y="947.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="354.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.07%)</title><rect x="351.3" y="931.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.07%)</title><rect x="351.3" y="915.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.3" y="926.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.07%)</title><rect x="351.3" y="899.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="354.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (526 samples, 7.22%)</title><rect x="352.1" y="963.0" width="85.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="355.1" y="974.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (525 samples, 7.20%)</title><rect x="352.3" y="947.0" width="85.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="355.3" y="958.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (521 samples, 7.15%)</title><rect x="352.8" y="931.0" width="84.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.8" y="942.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1601852745.run (2 samples, 0.03%)</title><rect x="352.9" y="915.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="355.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (518 samples, 7.11%)</title><rect x="353.2" y="915.0" width="83.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.2" y="926.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (101 samples, 1.39%)</title><rect x="354.1" y="899.0" width="16.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (86 samples, 1.18%)</title><rect x="354.2" y="883.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="357.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (76 samples, 1.04%)</title><rect x="355.8" y="867.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (71 samples, 0.97%)</title><rect x="355.8" y="851.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (64 samples, 0.88%)</title><rect x="357.0" y="835.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.0" y="846.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="357.1" y="819.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="360.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (31 samples, 0.43%)</title><rect x="357.5" y="819.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.5" y="830.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="358.3" y="803.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="361.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$275/2116661731.apply (8 samples, 0.11%)</title><rect x="358.8" y="803.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="361.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (7 samples, 0.10%)</title><rect x="358.9" y="787.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="361.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (7 samples, 0.10%)</title><rect x="358.9" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (7 samples, 0.10%)</title><rect x="358.9" y="755.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="361.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (7 samples, 0.10%)</title><rect x="358.9" y="739.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="361.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.05%)</title><rect x="359.4" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="362.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$131/1498196556.apply (15 samples, 0.21%)</title><rect x="360.0" y="803.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (15 samples, 0.21%)</title><rect x="360.0" y="787.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (15 samples, 0.21%)</title><rect x="360.0" y="771.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (15 samples, 0.21%)</title><rect x="360.0" y="755.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="363.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (15 samples, 0.21%)</title><rect x="360.0" y="739.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.18%)</title><rect x="360.4" y="723.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="363.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$298/232009893.run (13 samples, 0.18%)</title><rect x="360.4" y="707.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (13 samples, 0.18%)</title><rect x="360.4" y="691.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="363.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.03%)</title><rect x="360.4" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="360.4" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="363.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="360.4" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.03%)</title><rect x="360.4" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.03%)</title><rect x="360.4" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="363.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.03%)</title><rect x="360.4" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="363.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1601852745.run (2 samples, 0.03%)</title><rect x="360.4" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.03%)</title><rect x="360.4" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="363.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.03%)</title><rect x="360.4" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="363.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (11 samples, 0.15%)</title><rect x="360.7" y="675.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (11 samples, 0.15%)</title><rect x="360.7" y="659.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.15%)</title><rect x="360.7" y="643.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.15%)</title><rect x="360.7" y="627.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 0.15%)</title><rect x="360.7" y="611.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="363.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.15%)</title><rect x="360.7" y="595.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="363.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (9 samples, 0.12%)</title><rect x="360.9" y="579.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (9 samples, 0.12%)</title><rect x="360.9" y="563.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="363.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (9 samples, 0.12%)</title><rect x="360.9" y="547.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="363.9" y="558.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (9 samples, 0.12%)</title><rect x="360.9" y="531.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (9 samples, 0.12%)</title><rect x="360.9" y="515.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="363.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (9 samples, 0.12%)</title><rect x="360.9" y="499.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="363.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 0.11%)</title><rect x="361.0" y="483.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 0.11%)</title><rect x="361.0" y="467.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="364.0" y="478.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (8 samples, 0.11%)</title><rect x="361.0" y="451.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="364.0" y="462.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (8 samples, 0.11%)</title><rect x="361.0" y="435.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="364.0" y="446.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (8 samples, 0.11%)</title><rect x="361.0" y="419.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="364.0" y="430.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (6 samples, 0.08%)</title><rect x="361.2" y="403.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="364.2" y="414.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (2 samples, 0.03%)</title><rect x="361.5" y="387.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="364.5" y="398.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.03%)</title><rect x="361.8" y="387.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="364.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (26 samples, 0.36%)</title><rect x="362.5" y="819.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (25 samples, 0.34%)</title><rect x="362.6" y="803.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.07%)</title><rect x="362.6" y="787.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.04%)</title><rect x="363.0" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="366.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.04%)</title><rect x="363.0" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.04%)</title><rect x="363.0" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="366.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.04%)</title><rect x="363.0" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.04%)</title><rect x="363.0" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$246/934433586.apply (20 samples, 0.27%)</title><rect x="363.4" y="787.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="366.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (20 samples, 0.27%)</title><rect x="363.4" y="771.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="366.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (20 samples, 0.27%)</title><rect x="363.4" y="755.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/461660073.apply (18 samples, 0.25%)</title><rect x="363.4" y="739.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (18 samples, 0.25%)</title><rect x="363.4" y="723.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.05%)</title><rect x="363.6" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="366.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (4 samples, 0.05%)</title><rect x="364.3" y="707.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.05%)</title><rect x="364.3" y="691.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="364.6" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (9 samples, 0.12%)</title><rect x="364.9" y="707.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="367.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (3 samples, 0.04%)</title><rect x="364.9" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.07%)</title><rect x="365.4" y="691.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.07%)</title><rect x="365.4" y="675.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (4 samples, 0.05%)</title><rect x="365.4" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (4 samples, 0.05%)</title><rect x="365.4" y="643.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (4 samples, 0.05%)</title><rect x="365.4" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$150/238148860.apply (2 samples, 0.03%)</title><rect x="366.4" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2 samples, 0.03%)</title><rect x="366.4" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2 samples, 0.03%)</title><rect x="366.4" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$285/665809420.get (2 samples, 0.03%)</title><rect x="367.0" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.07%)</title><rect x="367.3" y="851.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.07%)</title><rect x="367.3" y="835.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.07%)</title><rect x="367.3" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.07%)</title><rect x="367.3" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="370.3" y="814.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="367.3" y="787.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="370.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3 samples, 0.04%)</title><rect x="367.7" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="370.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (14 samples, 0.19%)</title><rect x="368.1" y="883.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (10 samples, 0.14%)</title><rect x="368.8" y="867.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="371.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (8 samples, 0.11%)</title><rect x="369.1" y="851.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (2 samples, 0.03%)</title><rect x="369.9" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (5 samples, 0.07%)</title><rect x="370.4" y="899.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (5 samples, 0.07%)</title><rect x="370.4" y="883.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.07%)</title><rect x="370.4" y="867.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (407 samples, 5.58%)</title><rect x="371.2" y="899.0" width="65.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.2" y="910.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (407 samples, 5.58%)</title><rect x="371.2" y="883.0" width="65.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.2" y="894.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (407 samples, 5.58%)</title><rect x="371.2" y="867.0" width="65.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.2" y="878.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (402 samples, 5.52%)</title><rect x="372.0" y="851.0" width="65.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.0" y="862.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$281/468499725.run (3 samples, 0.04%)</title><rect x="372.0" y="835.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 0.04%)</title><rect x="372.0" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (399 samples, 5.47%)</title><rect x="372.5" y="835.0" width="64.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.5" y="846.0">jdk/int..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (389 samples, 5.34%)</title><rect x="372.5" y="819.0" width="63.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.5" y="830.0">java/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (389 samples, 5.34%)</title><rect x="372.5" y="803.0" width="63.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.5" y="814.0">sun/ni..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.03%)</title><rect x="372.5" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="372.5" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="372.5" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (387 samples, 5.31%)</title><rect x="372.8" y="787.0" width="62.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.8" y="798.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (379 samples, 5.20%)</title><rect x="374.1" y="771.0" width="61.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="377.1" y="782.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (6 samples, 0.08%)</title><rect x="374.1" y="755.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="377.1" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.08%)</title><rect x="374.1" y="739.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.1" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (6 samples, 0.08%)</title><rect x="374.1" y="723.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.1" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (6 samples, 0.08%)</title><rect x="374.1" y="707.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="377.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (361 samples, 4.95%)</title><rect x="375.1" y="755.0" width="58.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.1" y="766.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (355 samples, 4.87%)</title><rect x="376.1" y="739.0" width="57.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="379.1" y="750.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (2 samples, 0.03%)</title><rect x="376.7" y="723.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="379.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (346 samples, 4.75%)</title><rect x="377.0" y="723.0" width="56.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="380.0" y="734.0">[unkno..</text>
</g>
<g>
<title>[unknown] (346 samples, 4.75%)</title><rect x="377.0" y="707.0" width="56.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="380.0" y="718.0">[unkno..</text>
</g>
<g>
<title>__GI___writev (343 samples, 4.71%)</title><rect x="377.0" y="691.0" width="55.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="380.0" y="702.0">__GI_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (323 samples, 4.43%)</title><rect x="380.3" y="675.0" width="52.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="383.3" y="686.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (323 samples, 4.43%)</title><rect x="380.3" y="659.0" width="52.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="383.3" y="670.0">do_sy..</text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="381.3" y="643.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="384.3" y="654.0"></text>
</g>
<g>
<title>sys_writev (315 samples, 4.32%)</title><rect x="381.6" y="643.0" width="51.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="384.6" y="654.0">sys_w..</text>
</g>
<g>
<title>do_writev (315 samples, 4.32%)</title><rect x="381.6" y="627.0" width="51.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="384.6" y="638.0">do_wr..</text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.07%)</title><rect x="381.9" y="611.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="384.9" y="622.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.07%)</title><rect x="381.9" y="595.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="384.9" y="606.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.07%)</title><rect x="381.9" y="579.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="384.9" y="590.0"></text>
</g>
<g>
<title>vfs_writev (308 samples, 4.23%)</title><rect x="382.7" y="611.0" width="49.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="385.7" y="622.0">vfs_w..</text>
</g>
<g>
<title>do_iter_write (297 samples, 4.08%)</title><rect x="383.4" y="595.0" width="48.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="386.4" y="606.0">do_i..</text>
</g>
<g>
<title>do_iter_readv_writev (282 samples, 3.87%)</title><rect x="383.5" y="579.0" width="45.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="386.5" y="590.0">do_i..</text>
</g>
<g>
<title>sock_write_iter (279 samples, 3.83%)</title><rect x="384.0" y="563.0" width="45.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="387.0" y="574.0">sock..</text>
</g>
<g>
<title>sock_sendmsg (279 samples, 3.83%)</title><rect x="384.0" y="547.0" width="45.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="387.0" y="558.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (268 samples, 3.68%)</title><rect x="384.2" y="531.0" width="43.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="387.2" y="542.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (267 samples, 3.66%)</title><rect x="384.3" y="515.0" width="43.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="387.3" y="526.0">tcp_..</text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="384.7" y="499.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.7" y="510.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="385.3" y="499.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="388.3" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (253 samples, 3.47%)</title><rect x="386.6" y="499.0" width="41.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="389.6" y="510.0">tcp..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="387.7" y="483.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="390.7" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="387.7" y="467.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="390.7" y="478.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="388.2" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="391.2" y="494.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (15 samples, 0.21%)</title><rect x="389.0" y="483.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="392.0" y="494.0"></text>
</g>
<g>
<title>__alloc_skb (15 samples, 0.21%)</title><rect x="389.0" y="467.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="392.0" y="478.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (5 samples, 0.07%)</title><rect x="389.4" y="451.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="392.4" y="462.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.07%)</title><rect x="389.4" y="435.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="392.4" y="446.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.08%)</title><rect x="390.2" y="451.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="393.2" y="462.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.04%)</title><rect x="390.3" y="435.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="393.3" y="446.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="391.1" y="451.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="394.1" y="462.0"></text>
</g>
<g>
<title>skb_entail (9 samples, 0.12%)</title><rect x="391.5" y="483.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="394.5" y="494.0"></text>
</g>
<g>
<title>tcp_push (206 samples, 2.83%)</title><rect x="393.1" y="483.0" width="33.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="396.1" y="494.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (206 samples, 2.83%)</title><rect x="393.1" y="467.0" width="33.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="396.1" y="478.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (205 samples, 2.81%)</title><rect x="393.2" y="451.0" width="33.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="396.2" y="462.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (184 samples, 2.52%)</title><rect x="394.2" y="435.0" width="29.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="397.2" y="446.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (176 samples, 2.41%)</title><rect x="395.2" y="419.0" width="28.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="398.2" y="430.0">ip..</text>
</g>
<g>
<title>ip_local_out (174 samples, 2.39%)</title><rect x="395.5" y="403.0" width="28.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="398.5" y="414.0">ip..</text>
</g>
<g>
<title>ip_output (173 samples, 2.37%)</title><rect x="395.7" y="387.0" width="28.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="398.7" y="398.0">ip..</text>
</g>
<g>
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="395.8" y="371.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="398.8" y="382.0"></text>
</g>
<g>
<title>ip_finish_output (169 samples, 2.32%)</title><rect x="396.3" y="371.0" width="27.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="399.3" y="382.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (168 samples, 2.31%)</title><rect x="396.5" y="355.0" width="27.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="399.5" y="366.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (148 samples, 2.03%)</title><rect x="396.6" y="339.0" width="24.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="399.6" y="350.0">_..</text>
</g>
<g>
<title>do_softirq.part.17 (148 samples, 2.03%)</title><rect x="396.6" y="323.0" width="24.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="399.6" y="334.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (147 samples, 2.02%)</title><rect x="396.8" y="307.0" width="23.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="399.8" y="318.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (146 samples, 2.00%)</title><rect x="396.8" y="291.0" width="23.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="399.8" y="302.0">_..</text>
</g>
<g>
<title>net_rx_action (144 samples, 1.98%)</title><rect x="397.1" y="275.0" width="23.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="400.1" y="286.0">n..</text>
</g>
<g>
<title>process_backlog (143 samples, 1.96%)</title><rect x="397.3" y="259.0" width="23.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="400.3" y="270.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (137 samples, 1.88%)</title><rect x="398.1" y="243.0" width="22.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="401.1" y="254.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (137 samples, 1.88%)</title><rect x="398.1" y="227.0" width="22.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="401.1" y="238.0">_..</text>
</g>
<g>
<title>ip_rcv (135 samples, 1.85%)</title><rect x="398.4" y="211.0" width="21.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="401.4" y="222.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (131 samples, 1.80%)</title><rect x="399.1" y="195.0" width="21.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="402.1" y="206.0">i..</text>
</g>
<g>
<title>ip_local_deliver (131 samples, 1.80%)</title><rect x="399.1" y="179.0" width="21.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="402.1" y="190.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (129 samples, 1.77%)</title><rect x="399.2" y="163.0" width="20.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="402.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (126 samples, 1.73%)</title><rect x="399.7" y="147.0" width="20.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="402.7" y="158.0"></text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.14%)</title><rect x="400.5" y="131.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="403.5" y="142.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="401.8" y="115.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="404.8" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (109 samples, 1.50%)</title><rect x="402.5" y="131.0" width="17.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="405.5" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (107 samples, 1.47%)</title><rect x="402.8" y="115.0" width="17.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="405.8" y="126.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (11 samples, 0.15%)</title><rect x="403.4" y="99.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="406.4" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (11 samples, 0.15%)</title><rect x="403.4" y="83.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="406.4" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.15%)</title><rect x="403.4" y="67.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="406.4" y="78.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.14%)</title><rect x="403.6" y="51.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="406.6" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.11%)</title><rect x="403.8" y="35.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="406.8" y="46.0"></text>
</g>
<g>
<title>sched_clock_cpu (3 samples, 0.04%)</title><rect x="405.4" y="99.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="408.4" y="110.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.03%)</title><rect x="405.5" y="83.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="408.5" y="94.0"></text>
</g>
<g>
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="405.5" y="67.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="408.5" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (31 samples, 0.43%)</title><rect x="406.0" y="99.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="409.0" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (29 samples, 0.40%)</title><rect x="406.4" y="83.0" width="4.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="409.4" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (29 samples, 0.40%)</title><rect x="406.4" y="67.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="409.4" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 0.40%)</title><rect x="406.4" y="51.0" width="4.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="409.4" y="62.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.12%)</title><rect x="411.1" y="99.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="414.1" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.07%)</title><rect x="411.5" y="83.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="414.5" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.05%)</title><rect x="411.7" y="67.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="414.7" y="78.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.04%)</title><rect x="411.9" y="51.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="414.9" y="62.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="412.0" y="35.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="415.0" y="46.0"></text>
</g>
<g>
<title>tcp_data_queue (43 samples, 0.59%)</title><rect x="412.5" y="99.0" width="7.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="415.5" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (35 samples, 0.48%)</title><rect x="413.0" y="83.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="416.0" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (34 samples, 0.47%)</title><rect x="413.2" y="67.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="416.2" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (33 samples, 0.45%)</title><rect x="413.3" y="51.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="416.3" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (33 samples, 0.45%)</title><rect x="413.3" y="35.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="416.3" y="46.0"></text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.07%)</title><rect x="418.7" y="83.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="421.7" y="94.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.24 (2 samples, 0.03%)</title><rect x="419.1" y="67.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="422.1" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.04%)</title><rect x="419.5" y="99.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="422.5" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (19 samples, 0.26%)</title><rect x="420.6" y="339.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="423.6" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (18 samples, 0.25%)</title><rect x="420.6" y="323.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="423.6" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.11%)</title><rect x="420.8" y="307.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="423.8" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.07%)</title><rect x="421.3" y="291.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="424.3" y="302.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.04%)</title><rect x="421.3" y="275.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="424.3" y="286.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="421.4" y="259.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="424.4" y="270.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.11%)</title><rect x="422.2" y="307.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="425.2" y="318.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.05%)</title><rect x="422.9" y="291.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="425.9" y="302.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="424.0" y="435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="427.0" y="446.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.03%)</title><rect x="424.0" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="427.0" y="430.0"></text>
</g>
<g>
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="424.0" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="427.0" y="414.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.03%)</title><rect x="424.3" y="435.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="427.3" y="446.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.10%)</title><rect x="424.8" y="435.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="427.8" y="446.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.10%)</title><rect x="424.8" y="419.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="427.8" y="430.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (7 samples, 0.10%)</title><rect x="424.8" y="403.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="427.8" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.08%)</title><rect x="425.0" y="387.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="428.0" y="398.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.07%)</title><rect x="425.1" y="371.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="428.1" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="425.5" y="355.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="428.5" y="366.0"></text>
</g>
<g>
<title>tcp_tso_segs (2 samples, 0.03%)</title><rect x="426.1" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="429.1" y="446.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.08%)</title><rect x="426.4" y="483.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="429.4" y="494.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.07%)</title><rect x="426.6" y="467.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="429.6" y="478.0"></text>
</g>
<g>
<title>security_socket_sendmsg (9 samples, 0.12%)</title><rect x="427.6" y="531.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="430.6" y="542.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.11%)</title><rect x="427.7" y="515.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="430.7" y="526.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.11%)</title><rect x="427.7" y="499.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="430.7" y="510.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.04%)</title><rect x="428.5" y="483.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="431.5" y="494.0"></text>
</g>
<g>
<title>aa_label_sk_perm (3 samples, 0.04%)</title><rect x="428.5" y="467.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="431.5" y="478.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="429.2" y="579.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="432.2" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (11 samples, 0.15%)</title><rect x="429.7" y="579.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="432.7" y="590.0"></text>
</g>
<g>
<title>security_file_permission (11 samples, 0.15%)</title><rect x="429.7" y="563.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="432.7" y="574.0"></text>
</g>
<g>
<title>apparmor_file_permission (9 samples, 0.12%)</title><rect x="429.8" y="547.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="432.8" y="558.0"></text>
</g>
<g>
<title>common_file_perm (9 samples, 0.12%)</title><rect x="429.8" y="531.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="432.8" y="542.0"></text>
</g>
<g>
<title>aa_file_perm (6 samples, 0.08%)</title><rect x="430.3" y="515.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="433.3" y="526.0"></text>
</g>
<g>
<title>import_iovec (7 samples, 0.10%)</title><rect x="431.5" y="595.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="434.5" y="606.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="431.5" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="434.5" y="590.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (5 samples, 0.07%)</title><rect x="431.8" y="579.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="434.8" y="590.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.04%)</title><rect x="432.6" y="691.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="435.6" y="702.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.04%)</title><rect x="433.1" y="723.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="436.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (12 samples, 0.16%)</title><rect x="433.6" y="755.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.6" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (12 samples, 0.16%)</title><rect x="433.6" y="739.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.6" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (12 samples, 0.16%)</title><rect x="433.6" y="723.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.6" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (12 samples, 0.16%)</title><rect x="433.6" y="707.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="436.6" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="435.2" y="691.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="438.2" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="435.2" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="438.2" y="686.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="435.2" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="438.2" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="435.2" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="438.2" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (8 samples, 0.11%)</title><rect x="435.5" y="819.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.03%)</title><rect x="436.8" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (875 samples, 12.01%)</title><rect x="437.3" y="1075.0" width="141.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.3" y="1086.0">jdk/internal/net/h..</text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="437.4" y="1059.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="440.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (870 samples, 11.94%)</title><rect x="438.1" y="1059.0" width="140.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="441.1" y="1070.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.03%)</title><rect x="439.1" y="1043.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="442.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.03%)</title><rect x="439.4" y="1043.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (453 samples, 6.22%)</title><rect x="439.7" y="1043.0" width="73.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="442.7" y="1054.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1601852745.run (451 samples, 6.19%)</title><rect x="440.0" y="1027.0" width="73.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.0" y="1038.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (449 samples, 6.16%)</title><rect x="440.4" y="1011.0" width="72.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="443.4" y="1022.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (2 samples, 0.03%)</title><rect x="440.4" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="443.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.03%)</title><rect x="440.4" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (81 samples, 1.11%)</title><rect x="440.8" y="995.0" width="13.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="443.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (81 samples, 1.11%)</title><rect x="440.8" y="979.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (81 samples, 1.11%)</title><rect x="440.8" y="963.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (81 samples, 1.11%)</title><rect x="440.8" y="947.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (69 samples, 0.95%)</title><rect x="442.1" y="931.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="445.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (69 samples, 0.95%)</title><rect x="442.1" y="915.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="445.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (69 samples, 0.95%)</title><rect x="442.1" y="899.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (68 samples, 0.93%)</title><rect x="442.3" y="883.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (68 samples, 0.93%)</title><rect x="442.3" y="867.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="445.3" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (68 samples, 0.93%)</title><rect x="442.3" y="851.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.3" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (63 samples, 0.86%)</title><rect x="443.1" y="835.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.1" y="846.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (2 samples, 0.03%)</title><rect x="443.4" y="819.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="446.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.75%)</title><rect x="443.8" y="819.0" width="8.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="446.8" y="830.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (4 samples, 0.05%)</title><rect x="443.9" y="803.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="446.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="443.9" y="787.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="446.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="443.9" y="771.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="446.9" y="782.0"></text>
</g>
<g>
<title>__write (3 samples, 0.04%)</title><rect x="444.1" y="755.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="447.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="444.1" y="739.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="447.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="444.1" y="723.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="447.1" y="734.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.04%)</title><rect x="444.1" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="447.1" y="718.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.04%)</title><rect x="444.1" y="691.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="447.1" y="702.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.03%)</title><rect x="444.1" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="447.1" y="686.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.03%)</title><rect x="444.1" y="659.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="447.1" y="670.0"></text>
</g>
<g>
<title>Klass::is_klass() const volatile (5 samples, 0.07%)</title><rect x="444.6" y="803.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="447.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="444.6" y="787.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="447.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="444.6" y="771.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="447.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="444.6" y="755.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="447.6" y="766.0"></text>
</g>
<g>
<title>__write (4 samples, 0.05%)</title><rect x="444.7" y="739.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="447.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="444.7" y="723.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="447.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="444.7" y="707.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="447.7" y="718.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.04%)</title><rect x="444.9" y="691.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="447.9" y="702.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.03%)</title><rect x="445.1" y="675.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="448.1" y="686.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.03%)</title><rect x="445.1" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="448.1" y="670.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.03%)</title><rect x="445.1" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="448.1" y="654.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.03%)</title><rect x="445.1" y="627.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="448.1" y="638.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="445.1" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="448.1" y="622.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="445.1" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="448.1" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="445.1" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="448.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="445.4" y="803.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="448.4" y="814.0"></text>
</g>
<g>
<title>__write (5 samples, 0.07%)</title><rect x="445.5" y="787.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="448.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="445.7" y="771.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="448.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="445.7" y="755.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="448.7" y="766.0"></text>
</g>
<g>
<title>sys_write (4 samples, 0.05%)</title><rect x="445.7" y="739.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.7" y="750.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.04%)</title><rect x="445.9" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="448.9" y="734.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.04%)</title><rect x="445.9" y="707.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="448.9" y="718.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.04%)</title><rect x="445.9" y="691.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="448.9" y="702.0"></text>
</g>
<g>
<title>pipe_write (3 samples, 0.04%)</title><rect x="445.9" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="448.9" y="686.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.04%)</title><rect x="445.9" y="659.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.9" y="670.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.04%)</title><rect x="445.9" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.9" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="445.9" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="448.9" y="638.0"></text>
</g>
<g>
<title>__write (38 samples, 0.52%)</title><rect x="446.5" y="803.0" width="6.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="449.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.45%)</title><rect x="447.3" y="787.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="450.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.44%)</title><rect x="447.3" y="771.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="450.3" y="782.0"></text>
</g>
<g>
<title>sys_write (26 samples, 0.36%)</title><rect x="448.3" y="755.0" width="4.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="451.3" y="766.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="448.3" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="451.3" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="448.3" y="723.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="451.3" y="734.0"></text>
</g>
<g>
<title>vfs_write (24 samples, 0.33%)</title><rect x="448.6" y="739.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="451.6" y="750.0"></text>
</g>
<g>
<title>__vfs_write (19 samples, 0.26%)</title><rect x="448.9" y="723.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="451.9" y="734.0"></text>
</g>
<g>
<title>new_sync_write (19 samples, 0.26%)</title><rect x="448.9" y="707.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="451.9" y="718.0"></text>
</g>
<g>
<title>pipe_write (18 samples, 0.25%)</title><rect x="449.1" y="691.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="452.1" y="702.0"></text>
</g>
<g>
<title>__wake_up_sync_key (14 samples, 0.19%)</title><rect x="449.1" y="675.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="452.1" y="686.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.19%)</title><rect x="449.1" y="659.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="452.1" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.19%)</title><rect x="449.1" y="643.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="452.1" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="452.2" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="455.2" y="734.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="452.2" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="455.2" y="718.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="452.2" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="455.2" y="702.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="452.2" y="675.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="455.2" y="686.0"></text>
</g>
<g>
<title>__write (4 samples, 0.05%)</title><rect x="452.7" y="819.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="455.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="452.8" y="803.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="455.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="452.8" y="787.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="455.8" y="798.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.03%)</title><rect x="453.0" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="456.0" y="782.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.03%)</title><rect x="453.0" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="456.0" y="766.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.03%)</title><rect x="453.0" y="739.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="456.0" y="750.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.03%)</title><rect x="453.0" y="723.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="456.0" y="734.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.03%)</title><rect x="453.0" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="456.0" y="718.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="453.0" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="456.0" y="702.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="453.0" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="456.0" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="453.0" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="456.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (4 samples, 0.05%)</title><rect x="453.3" y="931.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.3" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="453.3" y="915.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="456.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (364 samples, 4.99%)</title><rect x="454.1" y="995.0" width="59.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.1" y="1006.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (357 samples, 4.90%)</title><rect x="455.3" y="979.0" width="57.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.3" y="990.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (354 samples, 4.86%)</title><rect x="455.7" y="963.0" width="57.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="458.7" y="974.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (354 samples, 4.86%)</title><rect x="455.7" y="947.0" width="57.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.7" y="958.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (192 samples, 2.63%)</title><rect x="455.9" y="931.0" width="31.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.9" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (192 samples, 2.63%)</title><rect x="455.9" y="915.0" width="31.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.9" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (192 samples, 2.63%)</title><rect x="455.9" y="899.0" width="31.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.9" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (190 samples, 2.61%)</title><rect x="456.2" y="883.0" width="30.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.2" y="894.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (190 samples, 2.61%)</title><rect x="456.2" y="867.0" width="30.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.2" y="878.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (183 samples, 2.51%)</title><rect x="456.4" y="851.0" width="29.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.4" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (183 samples, 2.51%)</title><rect x="456.4" y="835.0" width="29.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.4" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (171 samples, 2.35%)</title><rect x="456.5" y="819.0" width="27.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.5" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (162 samples, 2.22%)</title><rect x="458.0" y="803.0" width="26.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.0" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (128 samples, 1.76%)</title><rect x="458.3" y="787.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.3" y="798.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="458.5" y="771.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="461.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.04%)</title><rect x="459.0" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.04%)</title><rect x="459.0" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$277/1948109058.apply (2 samples, 0.03%)</title><rect x="459.6" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$131/1498196556.apply (86 samples, 1.18%)</title><rect x="459.9" y="771.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (86 samples, 1.18%)</title><rect x="459.9" y="755.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3 samples, 0.04%)</title><rect x="459.9" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.04%)</title><rect x="459.9" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (81 samples, 1.11%)</title><rect x="460.4" y="739.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="463.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="460.4" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="460.4" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (79 samples, 1.08%)</title><rect x="460.8" y="723.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (78 samples, 1.07%)</title><rect x="460.9" y="707.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.9" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (27 samples, 0.37%)</title><rect x="461.6" y="691.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.6" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.07%)</title><rect x="461.6" y="675.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.6" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.07%)</title><rect x="461.6" y="659.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.07%)</title><rect x="461.6" y="643.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.6" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.04%)</title><rect x="462.4" y="675.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.04%)</title><rect x="462.4" y="659.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (3 samples, 0.04%)</title><rect x="462.4" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (15 samples, 0.21%)</title><rect x="462.9" y="675.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (15 samples, 0.21%)</title><rect x="462.9" y="659.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (15 samples, 0.21%)</title><rect x="462.9" y="643.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (11 samples, 0.15%)</title><rect x="462.9" y="627.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (10 samples, 0.14%)</title><rect x="463.0" y="611.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (9 samples, 0.12%)</title><rect x="463.2" y="595.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (7 samples, 0.10%)</title><rect x="463.2" y="579.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.2" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (5 samples, 0.07%)</title><rect x="463.5" y="563.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (5 samples, 0.07%)</title><rect x="463.5" y="547.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$293/814841813.applyAsLong (5 samples, 0.07%)</title><rect x="463.5" y="531.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (5 samples, 0.07%)</title><rect x="463.5" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (5 samples, 0.07%)</title><rect x="463.5" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.5" y="510.0"></text>
</g>
<g>
<title>java/lang/Character.digit (5 samples, 0.07%)</title><rect x="463.5" y="483.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.5" y="494.0"></text>
</g>
<g>
<title>java/lang/Character.digit (5 samples, 0.07%)</title><rect x="463.5" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.5" y="478.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.03%)</title><rect x="464.0" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$295/1870570917.get (3 samples, 0.04%)</title><rect x="464.6" y="627.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.&lt;init&gt; (3 samples, 0.04%)</title><rect x="464.6" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (4 samples, 0.05%)</title><rect x="465.3" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (4 samples, 0.05%)</title><rect x="465.3" y="659.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="468.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (4 samples, 0.05%)</title><rect x="465.3" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="468.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (4 samples, 0.05%)</title><rect x="465.3" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (4 samples, 0.05%)</title><rect x="465.3" y="611.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.combineOpFlags (2 samples, 0.03%)</title><rect x="465.6" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (46 samples, 0.63%)</title><rect x="466.1" y="691.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="466.1" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="466.1" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="466.1" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="466.1" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$298/232009893.run (2 samples, 0.03%)</title><rect x="466.1" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="469.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$298/232009893.run (44 samples, 0.60%)</title><rect x="466.4" y="675.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (44 samples, 0.60%)</title><rect x="466.4" y="659.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="467.1" y="643.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="467.2" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.07%)</title><rect x="467.6" y="643.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.07%)</title><rect x="467.6" y="627.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.07%)</title><rect x="467.6" y="611.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (2 samples, 0.03%)</title><rect x="468.4" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (19 samples, 0.26%)</title><rect x="468.7" y="643.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (18 samples, 0.25%)</title><rect x="468.9" y="627.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="468.9" y="611.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="468.9" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$305/107723173.get$Lambda (4 samples, 0.05%)</title><rect x="468.9" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.9" y="590.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.03%)</title><rect x="469.2" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.2" y="574.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (11 samples, 0.15%)</title><rect x="469.5" y="611.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.5" y="622.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (9 samples, 0.12%)</title><rect x="469.8" y="595.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="472.8" y="606.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (9 samples, 0.12%)</title><rect x="469.8" y="579.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.8" y="590.0"></text>
</g>
<g>
<title>JVM_IHashCode (9 samples, 0.12%)</title><rect x="469.8" y="563.0" width="1.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="472.8" y="574.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.03%)</title><rect x="470.1" y="547.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="473.1" y="558.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.04%)</title><rect x="470.6" y="547.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="473.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="471.3" y="611.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="471.3" y="595.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="471.4" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (6 samples, 0.08%)</title><rect x="471.8" y="643.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (5 samples, 0.07%)</title><rect x="471.9" y="627.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Class.getSimpleName (5 samples, 0.07%)</title><rect x="471.9" y="611.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="474.9" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="472.4" y="595.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="475.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (5 samples, 0.07%)</title><rect x="472.7" y="643.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (2 samples, 0.03%)</title><rect x="473.5" y="739.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$247/773184514.apply (32 samples, 0.44%)</title><rect x="473.9" y="771.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (30 samples, 0.41%)</title><rect x="474.2" y="755.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (29 samples, 0.40%)</title><rect x="474.2" y="739.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (26 samples, 0.36%)</title><rect x="474.7" y="723.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (25 samples, 0.34%)</title><rect x="474.8" y="707.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.8" y="718.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (20 samples, 0.27%)</title><rect x="475.7" y="691.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.7" y="702.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (8 samples, 0.11%)</title><rect x="475.7" y="675.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.7" y="686.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (8 samples, 0.11%)</title><rect x="475.7" y="659.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.7" y="670.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (7 samples, 0.10%)</title><rect x="475.8" y="643.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.8" y="654.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (7 samples, 0.10%)</title><rect x="475.8" y="627.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="478.8" y="638.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (12 samples, 0.16%)</title><rect x="476.9" y="675.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.9" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (12 samples, 0.16%)</title><rect x="476.9" y="659.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.9" y="670.0"></text>
</g>
<g>
<title>JVM_IHashCode (8 samples, 0.11%)</title><rect x="476.9" y="643.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="479.9" y="654.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (3 samples, 0.04%)</title><rect x="477.6" y="627.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="480.6" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.04%)</title><rect x="478.2" y="643.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="481.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (22 samples, 0.30%)</title><rect x="479.1" y="787.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.05%)</title><rect x="479.5" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.05%)</title><rect x="479.5" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.04%)</title><rect x="479.7" y="739.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (15 samples, 0.21%)</title><rect x="480.2" y="771.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="483.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="480.2" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$248/194720049.apply (13 samples, 0.18%)</title><rect x="480.5" y="755.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (13 samples, 0.18%)</title><rect x="480.5" y="739.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (10 samples, 0.14%)</title><rect x="480.5" y="723.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (10 samples, 0.14%)</title><rect x="480.5" y="707.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (9 samples, 0.12%)</title><rect x="480.7" y="691.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="483.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (9 samples, 0.12%)</title><rect x="480.7" y="675.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (4 samples, 0.05%)</title><rect x="480.7" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.07%)</title><rect x="481.3" y="659.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.03%)</title><rect x="481.8" y="643.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.04%)</title><rect x="482.1" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.04%)</title><rect x="482.1" y="707.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.04%)</title><rect x="482.1" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (9 samples, 0.12%)</title><rect x="482.6" y="787.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6 samples, 0.08%)</title><rect x="483.1" y="771.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.08%)</title><rect x="483.1" y="755.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1713140792.apply (11 samples, 0.15%)</title><rect x="484.2" y="819.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (11 samples, 0.15%)</title><rect x="484.2" y="803.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (10 samples, 0.14%)</title><rect x="484.4" y="787.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.12%)</title><rect x="484.4" y="771.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.12%)</title><rect x="484.4" y="755.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.12%)</title><rect x="484.4" y="739.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.05%)</title><rect x="486.0" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.05%)</title><rect x="486.0" y="835.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.05%)</title><rect x="486.0" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.05%)</title><rect x="486.0" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.0" y="814.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="486.0" y="787.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="489.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.03%)</title><rect x="486.3" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$104/1180244251.getAsBoolean (2 samples, 0.03%)</title><rect x="486.7" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isSelectorThread (2 samples, 0.03%)</title><rect x="486.7" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (159 samples, 2.18%)</title><rect x="487.0" y="931.0" width="25.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.0" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (8 samples, 0.11%)</title><rect x="488.3" y="915.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (22 samples, 0.30%)</title><rect x="489.6" y="915.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (15 samples, 0.21%)</title><rect x="490.7" y="899.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.7" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (15 samples, 0.21%)</title><rect x="490.7" y="883.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (14 samples, 0.19%)</title><rect x="493.1" y="915.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.1" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.07%)</title><rect x="494.1" y="899.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="497.1" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.07%)</title><rect x="494.1" y="883.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.1" y="894.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.05%)</title><rect x="494.1" y="867.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.1" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.04%)</title><rect x="494.9" y="899.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (9 samples, 0.12%)</title><rect x="495.4" y="915.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.4" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.10%)</title><rect x="495.4" y="899.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="496.5" y="899.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (34 samples, 0.47%)</title><rect x="496.9" y="915.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.9" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (33 samples, 0.45%)</title><rect x="497.0" y="899.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="500.0" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (33 samples, 0.45%)</title><rect x="497.0" y="883.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.0" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (26 samples, 0.36%)</title><rect x="498.2" y="867.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="501.2" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1441133448.accept (24 samples, 0.33%)</title><rect x="498.5" y="851.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.5" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (19 samples, 0.26%)</title><rect x="499.3" y="835.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.3" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (11 samples, 0.15%)</title><rect x="499.9" y="819.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.9" y="830.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="500.3" y="803.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="503.3" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/140979054.accept (4 samples, 0.05%)</title><rect x="500.7" y="803.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.7" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.05%)</title><rect x="500.7" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1778081847.test (2 samples, 0.03%)</title><rect x="501.4" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="504.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.05%)</title><rect x="501.7" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (64 samples, 0.88%)</title><rect x="502.4" y="915.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="505.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (14 samples, 0.19%)</title><rect x="502.5" y="899.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.5" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (14 samples, 0.19%)</title><rect x="502.5" y="883.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.5" y="894.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.03%)</title><rect x="503.5" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.5" y="878.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (2 samples, 0.03%)</title><rect x="503.5" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="506.5" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.03%)</title><rect x="503.8" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.8" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="504.1" y="867.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="507.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (49 samples, 0.67%)</title><rect x="504.8" y="899.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.11%)</title><rect x="504.8" y="883.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.11%)</title><rect x="504.8" y="867.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="507.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.11%)</title><rect x="504.8" y="851.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (26 samples, 0.36%)</title><rect x="506.1" y="883.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.1" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (13 samples, 0.18%)</title><rect x="507.9" y="867.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.03%)</title><rect x="510.3" y="883.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.3" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (13 samples, 0.18%)</title><rect x="510.6" y="883.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.6" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.11%)</title><rect x="510.8" y="867.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="511.6" y="851.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.04%)</title><rect x="511.6" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.04%)</title><rect x="512.1" y="867.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$226/206031356.accept (2 samples, 0.03%)</title><rect x="512.7" y="931.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (407 samples, 5.58%)</title><rect x="513.1" y="1043.0" width="65.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.1" y="1054.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (405 samples, 5.56%)</title><rect x="513.4" y="1027.0" width="65.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.4" y="1038.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (402 samples, 5.52%)</title><rect x="513.5" y="1011.0" width="65.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.5" y="1022.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1601852745.run (402 samples, 5.52%)</title><rect x="513.5" y="995.0" width="65.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.5" y="1006.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (400 samples, 5.49%)</title><rect x="513.9" y="979.0" width="64.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.9" y="990.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (399 samples, 5.47%)</title><rect x="514.0" y="963.0" width="64.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.0" y="974.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (393 samples, 5.39%)</title><rect x="514.5" y="947.0" width="63.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.5" y="958.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (393 samples, 5.39%)</title><rect x="514.5" y="931.0" width="63.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.5" y="942.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$299/40653246.run (240 samples, 3.29%)</title><rect x="514.5" y="915.0" width="38.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.5" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (240 samples, 3.29%)</title><rect x="514.5" y="899.0" width="38.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.5" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (240 samples, 3.29%)</title><rect x="514.5" y="883.0" width="38.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.5" y="894.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (15 samples, 0.21%)</title><rect x="514.5" y="867.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.5" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.08%)</title><rect x="514.5" y="851.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.5" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (6 samples, 0.08%)</title><rect x="514.5" y="835.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.5" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (6 samples, 0.08%)</title><rect x="514.5" y="819.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.5" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.07%)</title><rect x="514.7" y="803.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.7" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.07%)</title><rect x="514.7" y="787.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="514.8" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="514.8" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.05%)</title><rect x="514.8" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (8 samples, 0.11%)</title><rect x="515.6" y="851.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.6" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.11%)</title><rect x="515.6" y="835.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.6" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (2 samples, 0.03%)</title><rect x="515.6" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.6" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.combineOpFlags (2 samples, 0.03%)</title><rect x="515.6" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="518.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.08%)</title><rect x="516.0" y="819.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="519.0" y="830.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.03%)</title><rect x="516.5" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.5" y="814.0"></text>
</g>
<g>
<title>java/util/Optional.map (3 samples, 0.04%)</title><rect x="516.9" y="867.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$313/1391962215.apply (3 samples, 0.04%)</title><rect x="516.9" y="851.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.lambda$closeOrReturnToCache$2 (3 samples, 0.04%)</title><rect x="516.9" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="516.9" y="819.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="519.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="516.9" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (220 samples, 3.02%)</title><rect x="517.4" y="867.0" width="35.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.4" y="878.0">jdk..</text>
</g>
<g>
<title>java/time/Instant.now (6 samples, 0.08%)</title><rect x="517.4" y="851.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.4" y="862.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (6 samples, 0.08%)</title><rect x="517.4" y="835.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.07%)</title><rect x="517.6" y="819.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.6" y="830.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.05%)</title><rect x="517.6" y="803.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="520.6" y="814.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="517.9" y="787.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="520.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (214 samples, 2.94%)</title><rect x="518.4" y="851.0" width="34.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.4" y="862.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (103 samples, 1.41%)</title><rect x="518.9" y="835.0" width="16.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.9" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (5 samples, 0.07%)</title><rect x="534.6" y="819.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.6" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (4 samples, 0.05%)</title><rect x="534.8" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.8" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.03%)</title><rect x="535.1" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.1" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.03%)</title><rect x="535.1" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.1" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.03%)</title><rect x="535.1" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (9 samples, 0.12%)</title><rect x="535.6" y="835.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.10%)</title><rect x="535.6" y="819.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="538.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.07%)</title><rect x="535.7" y="803.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (3 samples, 0.04%)</title><rect x="535.9" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.9" y="798.0"></text>
</g>
<g>
<title>java/util/Objects.equals (3 samples, 0.04%)</title><rect x="535.9" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.9" y="782.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (3 samples, 0.04%)</title><rect x="535.9" y="755.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.9" y="766.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (3 samples, 0.04%)</title><rect x="535.9" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (2 samples, 0.03%)</title><rect x="536.7" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="539.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (2 samples, 0.03%)</title><rect x="536.7" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.03%)</title><rect x="536.7" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (99 samples, 1.36%)</title><rect x="537.0" y="835.0" width="16.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (99 samples, 1.36%)</title><rect x="537.0" y="819.0" width="16.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.0" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.&lt;init&gt; (2 samples, 0.03%)</title><rect x="537.0" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="540.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (7 samples, 0.10%)</title><rect x="537.3" y="803.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="540.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (6 samples, 0.08%)</title><rect x="537.5" y="787.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="540.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (6 samples, 0.08%)</title><rect x="537.5" y="771.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.05%)</title><rect x="537.7" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.05%)</title><rect x="537.7" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="540.7" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.05%)</title><rect x="537.7" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (90 samples, 1.23%)</title><rect x="538.5" y="803.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (90 samples, 1.23%)</title><rect x="538.5" y="787.0" width="14.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (88 samples, 1.21%)</title><rect x="538.5" y="771.0" width="14.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (84 samples, 1.15%)</title><rect x="538.5" y="755.0" width="13.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="541.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (84 samples, 1.15%)</title><rect x="538.5" y="739.0" width="13.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (83 samples, 1.14%)</title><rect x="538.6" y="723.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (78 samples, 1.07%)</title><rect x="539.4" y="707.0" width="12.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.32%)</title><rect x="539.6" y="691.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="542.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.30%)</title><rect x="539.8" y="675.0" width="3.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="542.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="539.8" y="659.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="542.8" y="670.0"></text>
</g>
<g>
<title>__write (3 samples, 0.04%)</title><rect x="539.8" y="643.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="542.8" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="539.9" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="542.9" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="539.9" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="542.9" y="622.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.03%)</title><rect x="539.9" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="542.9" y="606.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.03%)</title><rect x="539.9" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="542.9" y="590.0"></text>
</g>
<g>
<title>__write (19 samples, 0.26%)</title><rect x="540.3" y="659.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="543.3" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.26%)</title><rect x="540.3" y="643.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="543.3" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.26%)</title><rect x="540.3" y="627.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="543.3" y="638.0"></text>
</g>
<g>
<title>sys_write (17 samples, 0.23%)</title><rect x="540.6" y="611.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="543.6" y="622.0"></text>
</g>
<g>
<title>vfs_write (15 samples, 0.21%)</title><rect x="540.9" y="595.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="543.9" y="606.0"></text>
</g>
<g>
<title>__vfs_write (12 samples, 0.16%)</title><rect x="540.9" y="579.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="543.9" y="590.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.15%)</title><rect x="540.9" y="563.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="543.9" y="574.0"></text>
</g>
<g>
<title>pipe_write (10 samples, 0.14%)</title><rect x="541.1" y="547.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="544.1" y="558.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 0.11%)</title><rect x="541.1" y="531.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="544.1" y="542.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.11%)</title><rect x="541.1" y="515.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="544.1" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.11%)</title><rect x="541.1" y="499.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="544.1" y="510.0"></text>
</g>
<g>
<title>__write (54 samples, 0.74%)</title><rect x="543.3" y="691.0" width="8.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="546.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.62%)</title><rect x="544.8" y="675.0" width="7.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="547.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.60%)</title><rect x="544.8" y="659.0" width="7.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="547.8" y="670.0"></text>
</g>
<g>
<title>sys_write (42 samples, 0.58%)</title><rect x="545.1" y="643.0" width="6.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="548.1" y="654.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="545.3" y="627.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="548.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="545.3" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="548.3" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="545.3" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="548.3" y="606.0"></text>
</g>
<g>
<title>vfs_write (39 samples, 0.54%)</title><rect x="545.6" y="627.0" width="6.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="548.6" y="638.0"></text>
</g>
<g>
<title>__vfs_write (35 samples, 0.48%)</title><rect x="545.9" y="611.0" width="5.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="548.9" y="622.0"></text>
</g>
<g>
<title>new_sync_write (35 samples, 0.48%)</title><rect x="545.9" y="595.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="548.9" y="606.0"></text>
</g>
<g>
<title>pipe_write (33 samples, 0.45%)</title><rect x="546.2" y="579.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="549.2" y="590.0"></text>
</g>
<g>
<title>__wake_up_sync_key (30 samples, 0.41%)</title><rect x="546.2" y="563.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="549.2" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (28 samples, 0.38%)</title><rect x="546.2" y="547.0" width="4.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="549.2" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (28 samples, 0.38%)</title><rect x="546.2" y="531.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="549.2" y="542.0"></text>
</g>
<g>
<title>copy_page_from_iter (2 samples, 0.03%)</title><rect x="551.1" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="554.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (4 samples, 0.05%)</title><rect x="552.1" y="755.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (2 samples, 0.03%)</title><rect x="553.0" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="556.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (2 samples, 0.03%)</title><rect x="553.0" y="851.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/1602998459.accept (20 samples, 0.27%)</title><rect x="553.4" y="915.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (20 samples, 0.27%)</title><rect x="553.4" y="899.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="556.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (20 samples, 0.27%)</title><rect x="553.4" y="883.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="556.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 0.16%)</title><rect x="553.4" y="867.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.16%)</title><rect x="553.4" y="851.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 0.14%)</title><rect x="553.7" y="835.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (9 samples, 0.12%)</title><rect x="553.9" y="819.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$303/1643610618.accept (6 samples, 0.08%)</title><rect x="553.9" y="803.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (5 samples, 0.07%)</title><rect x="554.0" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (5 samples, 0.07%)</title><rect x="554.0" y="771.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (5 samples, 0.07%)</title><rect x="554.0" y="755.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (5 samples, 0.07%)</title><rect x="554.0" y="739.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$305/107723173.accept (3 samples, 0.04%)</title><rect x="554.8" y="803.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$227/1294686197.accept (8 samples, 0.11%)</title><rect x="555.3" y="867.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (7 samples, 0.10%)</title><rect x="555.5" y="851.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (4 samples, 0.05%)</title><rect x="556.0" y="835.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="559.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (132 samples, 1.81%)</title><rect x="556.6" y="915.0" width="21.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.6" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (132 samples, 1.81%)</title><rect x="556.6" y="899.0" width="21.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.6" y="910.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.03%)</title><rect x="556.6" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (130 samples, 1.78%)</title><rect x="556.9" y="883.0" width="21.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="559.9" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (126 samples, 1.73%)</title><rect x="557.3" y="867.0" width="20.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (124 samples, 1.70%)</title><rect x="557.6" y="851.0" width="20.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (122 samples, 1.67%)</title><rect x="557.9" y="835.0" width="19.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="560.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.03%)</title><rect x="558.2" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="558.2" y="803.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (118 samples, 1.62%)</title><rect x="558.6" y="819.0" width="19.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="561.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$306/671653725.accept (116 samples, 1.59%)</title><rect x="558.9" y="803.0" width="18.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (112 samples, 1.54%)</title><rect x="559.5" y="787.0" width="18.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (112 samples, 1.54%)</title><rect x="559.5" y="771.0" width="18.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (112 samples, 1.54%)</title><rect x="559.5" y="755.0" width="18.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9 samples, 0.12%)</title><rect x="559.5" y="739.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.04%)</title><rect x="559.5" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="559.7" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$312/318573516.apply (6 samples, 0.08%)</title><rect x="560.0" y="723.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (6 samples, 0.08%)</title><rect x="560.0" y="707.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="563.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (103 samples, 1.41%)</title><rect x="561.0" y="739.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (102 samples, 1.40%)</title><rect x="561.1" y="723.0" width="16.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="564.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (94 samples, 1.29%)</title><rect x="561.3" y="707.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (94 samples, 1.29%)</title><rect x="561.3" y="691.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (94 samples, 1.29%)</title><rect x="561.3" y="675.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="564.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (93 samples, 1.28%)</title><rect x="561.5" y="659.0" width="15.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (3 samples, 0.04%)</title><rect x="561.5" y="643.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.tryLockPhase (2 samples, 0.03%)</title><rect x="562.0" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="565.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="562.0" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="565.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="562.0" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (88 samples, 1.21%)</title><rect x="562.3" y="643.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (88 samples, 1.21%)</title><rect x="562.3" y="627.0" width="14.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (88 samples, 1.21%)</title><rect x="562.3" y="611.0" width="14.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.3" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.14%)</title><rect x="562.6" y="595.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="565.6" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="563.1" y="579.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="566.1" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.04%)</title><rect x="563.6" y="579.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="566.6" y="590.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (75 samples, 1.03%)</title><rect x="564.4" y="595.0" width="12.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="567.4" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 0.89%)</title><rect x="566.0" y="579.0" width="10.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="569.0" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 0.89%)</title><rect x="566.0" y="563.0" width="10.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="569.0" y="574.0"></text>
</g>
<g>
<title>sys_futex (61 samples, 0.84%)</title><rect x="566.6" y="547.0" width="9.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="569.6" y="558.0"></text>
</g>
<g>
<title>do_futex (61 samples, 0.84%)</title><rect x="566.6" y="531.0" width="9.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="569.6" y="542.0"></text>
</g>
<g>
<title>futex_wake (59 samples, 0.81%)</title><rect x="566.6" y="515.0" width="9.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="569.6" y="526.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.08%)</title><rect x="567.3" y="499.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="570.3" y="510.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.03%)</title><rect x="567.9" y="483.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="570.9" y="494.0"></text>
</g>
<g>
<title>wake_up_q (49 samples, 0.67%)</title><rect x="568.3" y="499.0" width="7.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="571.3" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (48 samples, 0.66%)</title><rect x="568.4" y="483.0" width="7.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="571.4" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (47 samples, 0.64%)</title><rect x="568.6" y="467.0" width="7.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="571.6" y="478.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="576.2" y="515.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="579.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$311/1045853271.accept (5 samples, 0.07%)</title><rect x="576.7" y="707.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="579.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (3 samples, 0.04%)</title><rect x="578.1" y="947.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.04%)</title><rect x="578.1" y="931.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.04%)</title><rect x="578.1" y="915.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="581.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.04%)</title><rect x="578.1" y="899.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.03%)</title><rect x="578.6" y="1011.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.6" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$289/1275077482.run (569 samples, 7.81%)</title><rect x="579.0" y="1075.0" width="92.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.0" y="1086.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$executeAsync$6 (569 samples, 7.81%)</title><rect x="579.0" y="1059.0" width="92.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.0" y="1070.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (357 samples, 4.90%)</title><rect x="579.0" y="1043.0" width="57.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="582.0" y="1054.0">one/ni..</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="579.9" y="1027.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="582.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (345 samples, 4.73%)</title><rect x="580.4" y="1027.0" width="55.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.4" y="1038.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.18%)</title><rect x="580.6" y="1011.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="583.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 0.15%)</title><rect x="580.9" y="995.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.11%)</title><rect x="580.9" y="979.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="583.9" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="582.2" y="979.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="585.2" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="582.2" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.2" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (331 samples, 4.54%)</title><rect x="582.7" y="1011.0" width="53.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.7" y="1022.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (331 samples, 4.54%)</title><rect x="582.7" y="995.0" width="53.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.7" y="1006.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (330 samples, 4.53%)</title><rect x="582.8" y="979.0" width="53.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.8" y="990.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="583.2" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.2" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (326 samples, 4.47%)</title><rect x="583.5" y="963.0" width="52.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="586.5" y="974.0">one/n..</text>
</g>
<g>
<title>[unknown] (10 samples, 0.14%)</title><rect x="584.0" y="947.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="587.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.14%)</title><rect x="584.0" y="931.0" width="1.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="587.0" y="942.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.05%)</title><rect x="584.0" y="915.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="587.0" y="926.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.05%)</title><rect x="584.0" y="899.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="587.0" y="910.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="584.3" y="883.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="587.3" y="894.0"></text>
</g>
<g>
<title>__send (3 samples, 0.04%)</title><rect x="584.6" y="915.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="587.6" y="926.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="585.1" y="915.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="588.1" y="926.0"></text>
</g>
<g>
<title>__send (312 samples, 4.28%)</title><rect x="585.8" y="947.0" width="50.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="588.8" y="958.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (300 samples, 4.12%)</title><rect x="587.7" y="931.0" width="48.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="590.7" y="942.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (298 samples, 4.09%)</title><rect x="587.7" y="915.0" width="48.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="590.7" y="926.0">do_s..</text>
</g>
<g>
<title>sys_sendto (291 samples, 3.99%)</title><rect x="588.8" y="899.0" width="47.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="591.8" y="910.0">sys_..</text>
</g>
<g>
<title>SYSC_sendto (289 samples, 3.97%)</title><rect x="588.8" y="883.0" width="46.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="591.8" y="894.0">SYSC..</text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.03%)</title><rect x="589.2" y="867.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="592.2" y="878.0"></text>
</g>
<g>
<title>sock_sendmsg (281 samples, 3.86%)</title><rect x="589.5" y="867.0" width="45.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="592.5" y="878.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (270 samples, 3.70%)</title><rect x="589.6" y="851.0" width="43.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="592.6" y="862.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (267 samples, 3.66%)</title><rect x="590.1" y="835.0" width="43.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="593.1" y="846.0">tcp_..</text>
</g>
<g>
<title>release_sock (10 samples, 0.14%)</title><rect x="590.3" y="819.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="593.3" y="830.0"></text>
</g>
<g>
<title>__release_sock (9 samples, 0.12%)</title><rect x="590.4" y="803.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="593.4" y="814.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (9 samples, 0.12%)</title><rect x="590.4" y="787.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="593.4" y="798.0"></text>
</g>
<g>
<title>tcp_rcv_established (9 samples, 0.12%)</title><rect x="590.4" y="771.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="593.4" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="590.8" y="755.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="593.8" y="766.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.04%)</title><rect x="591.1" y="755.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="594.1" y="766.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.04%)</title><rect x="591.1" y="739.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="594.1" y="750.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.03%)</title><rect x="591.6" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="594.6" y="766.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (253 samples, 3.47%)</title><rect x="592.1" y="819.0" width="40.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="595.1" y="830.0">tcp..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="592.9" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="595.9" y="814.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.15%)</title><rect x="594.0" y="803.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="597.0" y="814.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.11%)</title><rect x="594.2" y="787.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="597.2" y="798.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (2 samples, 0.03%)</title><rect x="594.3" y="771.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="597.3" y="782.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.03%)</title><rect x="594.3" y="755.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="597.3" y="766.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.04%)</title><rect x="594.8" y="771.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="597.8" y="782.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.04%)</title><rect x="595.8" y="803.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="598.8" y="814.0"></text>
</g>
<g>
<title>tcp_push (216 samples, 2.96%)</title><rect x="596.4" y="803.0" width="35.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="599.4" y="814.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (214 samples, 2.94%)</title><rect x="596.8" y="787.0" width="34.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="599.8" y="798.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (212 samples, 2.91%)</title><rect x="597.1" y="771.0" width="34.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="600.1" y="782.0">tc..</text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.04%)</title><rect x="597.4" y="755.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="600.4" y="766.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (196 samples, 2.69%)</title><rect x="597.9" y="755.0" width="31.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="600.9" y="766.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (181 samples, 2.48%)</title><rect x="600.2" y="739.0" width="29.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="603.2" y="750.0">ip..</text>
</g>
<g>
<title>ip_local_out (179 samples, 2.46%)</title><rect x="600.2" y="723.0" width="28.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="603.2" y="734.0">ip..</text>
</g>
<g>
<title>ip_output (179 samples, 2.46%)</title><rect x="600.2" y="707.0" width="28.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="603.2" y="718.0">ip..</text>
</g>
<g>
<title>ip_finish_output (178 samples, 2.44%)</title><rect x="600.3" y="691.0" width="28.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="603.3" y="702.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (176 samples, 2.41%)</title><rect x="600.6" y="675.0" width="28.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="603.6" y="686.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (157 samples, 2.15%)</title><rect x="601.1" y="659.0" width="25.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="604.1" y="670.0">_..</text>
</g>
<g>
<title>do_softirq.part.17 (157 samples, 2.15%)</title><rect x="601.1" y="643.0" width="25.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="604.1" y="654.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (156 samples, 2.14%)</title><rect x="601.3" y="627.0" width="25.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="604.3" y="638.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (156 samples, 2.14%)</title><rect x="601.3" y="611.0" width="25.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="604.3" y="622.0">_..</text>
</g>
<g>
<title>net_rx_action (148 samples, 2.03%)</title><rect x="602.4" y="595.0" width="24.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="605.4" y="606.0">n..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="602.6" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="605.6" y="590.0"></text>
</g>
<g>
<title>process_backlog (145 samples, 1.99%)</title><rect x="602.9" y="579.0" width="23.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="605.9" y="590.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (139 samples, 1.91%)</title><rect x="603.7" y="563.0" width="22.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="606.7" y="574.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (137 samples, 1.88%)</title><rect x="604.0" y="547.0" width="22.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="607.0" y="558.0">_..</text>
</g>
<g>
<title>ip_rcv (131 samples, 1.80%)</title><rect x="604.9" y="531.0" width="21.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="607.9" y="542.0">i..</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="605.3" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="608.3" y="526.0"></text>
</g>
<g>
<title>ip_rcv_finish (126 samples, 1.73%)</title><rect x="605.7" y="515.0" width="20.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="608.7" y="526.0"></text>
</g>
<g>
<title>ip_local_deliver (123 samples, 1.69%)</title><rect x="606.2" y="499.0" width="19.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="609.2" y="510.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (120 samples, 1.65%)</title><rect x="606.2" y="483.0" width="19.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="609.2" y="494.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="606.2" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="609.2" y="478.0"></text>
</g>
<g>
<title>tcp_v4_rcv (118 samples, 1.62%)</title><rect x="606.5" y="467.0" width="19.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="609.5" y="478.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.07%)</title><rect x="607.4" y="451.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="610.4" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="608.3" y="451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="611.3" y="462.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.07%)</title><rect x="608.6" y="451.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="611.6" y="462.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="608.6" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="611.6" y="446.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.04%)</title><rect x="608.9" y="435.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="611.9" y="446.0"></text>
</g>
<g>
<title>tcp_add_backlog (2 samples, 0.03%)</title><rect x="609.4" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="612.4" y="462.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (92 samples, 1.26%)</title><rect x="610.0" y="451.0" width="14.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="613.0" y="462.0"></text>
</g>
<g>
<title>tcp_rcv_established (90 samples, 1.23%)</title><rect x="610.4" y="435.0" width="14.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="613.4" y="446.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (7 samples, 0.10%)</title><rect x="611.0" y="419.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="614.0" y="430.0"></text>
</g>
<g>
<title>tcp_send_ack (4 samples, 0.05%)</title><rect x="611.0" y="403.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="614.0" y="414.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.39 (4 samples, 0.05%)</title><rect x="611.0" y="387.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="614.0" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.04%)</title><rect x="611.2" y="371.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="614.2" y="382.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.04%)</title><rect x="611.2" y="355.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="614.2" y="366.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.04%)</title><rect x="611.2" y="339.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="614.2" y="350.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.04%)</title><rect x="611.2" y="323.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="614.2" y="334.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.04%)</title><rect x="611.2" y="307.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="614.2" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.04%)</title><rect x="611.2" y="291.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="614.2" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.04%)</title><rect x="611.2" y="275.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="614.2" y="286.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.04%)</title><rect x="611.2" y="259.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="614.2" y="270.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.04%)</title><rect x="611.7" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="614.7" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="611.7" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="614.7" y="398.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="611.7" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="614.7" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="611.8" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="614.8" y="366.0"></text>
</g>
<g>
<title>get_seconds (2 samples, 0.03%)</title><rect x="612.3" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="615.3" y="430.0"></text>
</g>
<g>
<title>tcp_ack (36 samples, 0.49%)</title><rect x="613.1" y="419.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="616.1" y="430.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="613.6" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="616.6" y="414.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (26 samples, 0.36%)</title><rect x="614.1" y="403.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="617.1" y="414.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.21%)</title><rect x="615.2" y="387.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="618.2" y="398.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.05%)</title><rect x="615.2" y="371.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="618.2" y="382.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.05%)</title><rect x="615.2" y="355.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="618.2" y="366.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.14%)</title><rect x="616.0" y="371.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="619.0" y="382.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.11%)</title><rect x="616.0" y="355.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="619.0" y="366.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.05%)</title><rect x="616.7" y="339.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="619.7" y="350.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.05%)</title><rect x="616.7" y="323.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="619.7" y="334.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="616.8" y="307.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="619.8" y="318.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="617.0" y="291.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="620.0" y="302.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="617.3" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="620.3" y="366.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.40 (3 samples, 0.04%)</title><rect x="617.6" y="387.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="620.6" y="398.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.04%)</title><rect x="618.5" y="403.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="621.5" y="414.0"></text>
</g>
<g>
<title>tcp_data_queue (33 samples, 0.45%)</title><rect x="619.1" y="419.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="622.1" y="430.0"></text>
</g>
<g>
<title>sock_def_readable (26 samples, 0.36%)</title><rect x="619.6" y="403.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="622.6" y="414.0"></text>
</g>
<g>
<title>__wake_up_sync_key (21 samples, 0.29%)</title><rect x="620.4" y="387.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="623.4" y="398.0"></text>
</g>
<g>
<title>__wake_up_common_lock (21 samples, 0.29%)</title><rect x="620.4" y="371.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="623.4" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.29%)</title><rect x="620.4" y="355.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="623.4" y="366.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.05%)</title><rect x="623.8" y="403.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="626.8" y="414.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="624.4" y="419.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="627.4" y="430.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="624.9" y="451.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="627.9" y="462.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.03%)</title><rect x="625.3" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="628.3" y="462.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="625.6" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="628.6" y="494.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.19%)</title><rect x="626.6" y="659.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="629.6" y="670.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.18%)</title><rect x="626.6" y="643.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="629.6" y="654.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.08%)</title><rect x="627.2" y="627.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="630.2" y="638.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.07%)</title><rect x="627.4" y="611.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="630.4" y="622.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="627.7" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="630.7" y="606.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="628.3" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="631.3" y="638.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="628.3" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="631.3" y="622.0"></text>
</g>
<g>
<title>do_softirq.part.17 (2 samples, 0.03%)</title><rect x="628.8" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="631.8" y="670.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="629.1" y="723.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="632.1" y="734.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.10%)</title><rect x="630.0" y="755.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="633.0" y="766.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.07%)</title><rect x="630.3" y="739.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="633.3" y="750.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (5 samples, 0.07%)</title><rect x="630.3" y="723.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="633.3" y="734.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="630.4" y="707.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="633.4" y="718.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="630.4" y="691.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="633.4" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.05%)</title><rect x="630.4" y="675.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="633.4" y="686.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.11%)</title><rect x="631.6" y="803.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="634.6" y="814.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.08%)</title><rect x="631.9" y="787.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="634.9" y="798.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (2 samples, 0.03%)</title><rect x="632.5" y="771.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="635.5" y="782.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.05%)</title><rect x="633.4" y="851.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="636.4" y="862.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.05%)</title><rect x="633.4" y="835.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.4" y="846.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.05%)</title><rect x="633.4" y="819.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="636.4" y="830.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="633.7" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="636.7" y="814.0"></text>
</g>
<g>
<title>aa_label_sk_perm (2 samples, 0.03%)</title><rect x="633.7" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.7" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg (6 samples, 0.08%)</title><rect x="634.0" y="851.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="637.0" y="862.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.05%)</title><rect x="635.0" y="867.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="638.0" y="878.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="635.0" y="851.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="638.0" y="862.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="635.0" y="835.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="638.0" y="846.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="635.0" y="819.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="638.0" y="830.0"></text>
</g>
<g>
<title>sys_sendto (2 samples, 0.03%)</title><rect x="635.9" y="915.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="638.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="636.3" y="1027.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="636.3" y="1011.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="636.3" y="995.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$328/264777089.action (212 samples, 2.91%)</title><rect x="636.8" y="1043.0" width="34.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.8" y="1054.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$executeGet$0 (212 samples, 2.91%)</title><rect x="636.8" y="1027.0" width="34.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.8" y="1038.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.get (211 samples, 2.90%)</title><rect x="636.9" y="1011.0" width="34.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.9" y="1022.0">ru..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.10%)</title><rect x="637.1" y="995.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.1" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="637.4" y="979.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="640.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.getRow (203 samples, 2.79%)</title><rect x="638.2" y="995.0" width="32.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="641.2" y="1006.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.rowBy (201 samples, 2.76%)</title><rect x="638.4" y="979.0" width="32.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.4" y="990.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.rowIterator (199 samples, 2.73%)</title><rect x="638.4" y="963.0" width="32.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.4" y="974.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (20 samples, 0.27%)</title><rect x="638.4" y="947.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.4" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6 samples, 0.08%)</title><rect x="638.4" y="931.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.4" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5 samples, 0.07%)</title><rect x="638.5" y="915.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="641.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.hasNext (3 samples, 0.04%)</title><rect x="638.7" y="899.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (14 samples, 0.19%)</title><rect x="639.3" y="931.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.3" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.19%)</title><rect x="639.3" y="915.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.3" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.19%)</title><rect x="639.3" y="899.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.3" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (11 samples, 0.15%)</title><rect x="639.5" y="883.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.5" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (9 samples, 0.12%)</title><rect x="639.8" y="867.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (9 samples, 0.12%)</title><rect x="639.8" y="851.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.8" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getRowAt (9 samples, 0.12%)</title><rect x="639.8" y="835.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.8" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.04%)</title><rect x="640.3" y="819.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.3" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="640.5" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.5" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="640.5" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.5" y="798.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="640.5" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="640.5" y="755.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="640.5" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.5" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2 samples, 0.03%)</title><rect x="640.8" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (179 samples, 2.46%)</title><rect x="641.6" y="947.0" width="29.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.6" y="958.0">ru..</text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.08%)</title><rect x="641.6" y="931.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.6" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.08%)</title><rect x="641.6" y="915.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.6" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="641.9" y="899.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.9" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="641.9" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.9" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (3 samples, 0.04%)</title><rect x="642.1" y="867.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (9 samples, 0.12%)</title><rect x="642.6" y="931.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (9 samples, 0.12%)</title><rect x="642.6" y="915.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (8 samples, 0.11%)</title><rect x="642.7" y="899.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (8 samples, 0.11%)</title><rect x="642.7" y="883.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="642.7" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.7" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (2 samples, 0.03%)</title><rect x="642.7" y="851.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.08%)</title><rect x="643.1" y="867.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="643.7" y="851.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="646.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (2 samples, 0.03%)</title><rect x="644.0" y="931.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.07%)</title><rect x="644.4" y="931.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.4" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="644.7" y="915.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.04%)</title><rect x="644.7" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (2 samples, 0.03%)</title><rect x="644.8" y="883.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (2 samples, 0.03%)</title><rect x="644.8" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.iterator (91 samples, 1.25%)</title><rect x="645.2" y="931.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.2" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.&lt;init&gt; (89 samples, 1.22%)</title><rect x="645.5" y="915.0" width="14.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getOffsetsIndex (89 samples, 1.22%)</title><rect x="645.5" y="899.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.5" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (36 samples, 0.49%)</title><rect x="646.1" y="883.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.1" y="894.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.05%)</title><rect x="646.3" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.3" y="878.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (29 samples, 0.40%)</title><rect x="647.1" y="867.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.1" y="878.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.10%)</title><rect x="647.9" y="851.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="650.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (2 samples, 0.03%)</title><rect x="648.7" y="835.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.7" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.15%)</title><rect x="649.1" y="851.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="652.1" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.08%)</title><rect x="649.9" y="835.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="652.9" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.03%)</title><rect x="650.4" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.4" y="830.0"></text>
</g>
<g>
<title>vtable stub (6 samples, 0.08%)</title><rect x="650.8" y="851.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="653.8" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (49 samples, 0.67%)</title><rect x="652.0" y="883.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.0" y="894.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (13 samples, 0.18%)</title><rect x="653.9" y="867.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.9" y="878.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (13 samples, 0.18%)</title><rect x="653.9" y="851.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="656.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (13 samples, 0.18%)</title><rect x="653.9" y="835.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (12 samples, 0.16%)</title><rect x="654.1" y="819.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.1" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (15 samples, 0.21%)</title><rect x="656.0" y="867.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.0" y="878.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (15 samples, 0.21%)</title><rect x="656.0" y="851.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.0" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (15 samples, 0.21%)</title><rect x="656.0" y="835.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.0" y="846.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (15 samples, 0.21%)</title><rect x="656.0" y="819.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.0" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.21%)</title><rect x="656.0" y="803.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="659.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.21%)</title><rect x="656.0" y="787.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.0" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.12%)</title><rect x="656.7" y="771.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.7" y="782.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.07%)</title><rect x="657.3" y="755.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.3" y="766.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.07%)</title><rect x="657.3" y="739.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.07%)</title><rect x="657.3" y="723.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.3" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="657.8" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.8" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="658.1" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.1" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (9 samples, 0.12%)</title><rect x="658.4" y="867.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.4" y="878.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.12%)</title><rect x="658.4" y="851.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.4" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.12%)</title><rect x="658.4" y="835.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.4" y="846.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.10%)</title><rect x="658.8" y="819.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.10%)</title><rect x="658.8" y="803.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.10%)</title><rect x="658.8" y="787.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.8" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="658.9" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.9" y="782.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="658.9" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.9" y="766.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="658.9" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="658.9" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.9" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="658.9" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.9" y="718.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="659.3" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.3" y="766.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="659.3" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="659.3" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.3" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="659.6" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.iterator (66 samples, 0.91%)</title><rect x="659.9" y="931.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (9 samples, 0.12%)</title><rect x="659.9" y="915.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (9 samples, 0.12%)</title><rect x="659.9" y="899.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (8 samples, 0.11%)</title><rect x="660.1" y="883.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.1" y="894.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="660.4" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.4" y="878.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="660.4" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.05%)</title><rect x="660.7" y="867.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.7" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.04%)</title><rect x="660.9" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.9" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="660.9" y="835.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.9" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.04%)</title><rect x="660.9" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.03%)</title><rect x="661.4" y="915.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.03%)</title><rect x="661.4" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="664.4" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (6 samples, 0.08%)</title><rect x="661.7" y="915.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="664.7" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5 samples, 0.07%)</title><rect x="661.7" y="899.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="664.7" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="662.0" y="883.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.hasNext (2 samples, 0.03%)</title><rect x="662.2" y="867.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (49 samples, 0.67%)</title><rect x="662.7" y="915.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.04%)</title><rect x="662.8" y="899.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="662.8" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.03%)</title><rect x="663.0" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (2 samples, 0.03%)</title><rect x="663.0" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (2 samples, 0.03%)</title><rect x="663.0" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.iterator (44 samples, 0.60%)</title><rect x="663.5" y="899.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="666.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (40 samples, 0.55%)</title><rect x="664.0" y="883.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (40 samples, 0.55%)</title><rect x="664.0" y="867.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (40 samples, 0.55%)</title><rect x="664.0" y="851.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (40 samples, 0.55%)</title><rect x="664.0" y="835.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="667.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (40 samples, 0.55%)</title><rect x="664.0" y="819.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="667.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (40 samples, 0.55%)</title><rect x="664.0" y="803.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (25 samples, 0.34%)</title><rect x="666.4" y="787.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (25 samples, 0.34%)</title><rect x="666.4" y="771.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.26%)</title><rect x="667.4" y="755.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.4" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (18 samples, 0.25%)</title><rect x="667.5" y="739.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.16%)</title><rect x="668.2" y="723.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.2" y="734.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="670.1" y="723.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="673.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (2 samples, 0.03%)</title><rect x="670.6" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.6" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="670.6" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.6" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="670.6" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="673.6" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="670.6" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.6" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="670.6" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (2 samples, 0.03%)</title><rect x="670.6" y="883.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="673.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (976 samples, 13.39%)</title><rect x="671.1" y="1123.0" width="158.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="674.1" y="1134.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (976 samples, 13.39%)</title><rect x="671.1" y="1107.0" width="158.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="674.1" y="1118.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (650 samples, 8.92%)</title><rect x="674.0" y="1091.0" width="105.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="677.0" y="1102.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (643 samples, 8.82%)</title><rect x="674.6" y="1075.0" width="104.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.6" y="1086.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (2 samples, 0.03%)</title><rect x="675.5" y="1059.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (635 samples, 8.71%)</title><rect x="675.8" y="1059.0" width="102.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="678.8" y="1070.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (143 samples, 1.96%)</title><rect x="679.2" y="1043.0" width="23.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="682.2" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (141 samples, 1.93%)</title><rect x="679.5" y="1027.0" width="22.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.5" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (33 samples, 0.45%)</title><rect x="680.0" y="1011.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (31 samples, 0.43%)</title><rect x="680.0" y="995.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="683.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (30 samples, 0.41%)</title><rect x="680.1" y="979.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (30 samples, 0.41%)</title><rect x="680.1" y="963.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (29 samples, 0.40%)</title><rect x="680.1" y="947.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (29 samples, 0.40%)</title><rect x="680.1" y="931.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (29 samples, 0.40%)</title><rect x="680.1" y="915.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (28 samples, 0.38%)</title><rect x="680.3" y="899.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 0.37%)</title><rect x="680.5" y="883.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (27 samples, 0.37%)</title><rect x="680.5" y="867.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.5" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.05%)</title><rect x="680.8" y="851.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="683.8" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="681.1" y="835.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="684.1" y="846.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (21 samples, 0.29%)</title><rect x="681.4" y="851.0" width="3.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="684.4" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.25%)</title><rect x="681.9" y="835.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="684.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.23%)</title><rect x="681.9" y="819.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="684.9" y="830.0"></text>
</g>
<g>
<title>sys_futex (17 samples, 0.23%)</title><rect x="681.9" y="803.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="684.9" y="814.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.23%)</title><rect x="681.9" y="787.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="684.9" y="798.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.23%)</title><rect x="681.9" y="771.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="684.9" y="782.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.19%)</title><rect x="682.4" y="755.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="685.4" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.19%)</title><rect x="682.4" y="739.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="685.4" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.19%)</title><rect x="682.4" y="723.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="685.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$147/229752930.get (2 samples, 0.03%)</title><rect x="685.0" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$147/229752930.get (105 samples, 1.44%)</title><rect x="685.3" y="1011.0" width="17.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.3" y="1022.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="685.3" y="995.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="688.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$324/523579630.action (101 samples, 1.39%)</title><rect x="686.0" y="995.0" width="16.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.get (2 samples, 0.03%)</title><rect x="686.3" y="979.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$executeGet$1 (97 samples, 1.33%)</title><rect x="686.6" y="979.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.get (97 samples, 1.33%)</title><rect x="686.6" y="963.0" width="15.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.6" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.07%)</title><rect x="686.8" y="947.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.rowBy (3 samples, 0.04%)</title><rect x="687.1" y="931.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.getRow (91 samples, 1.25%)</title><rect x="687.6" y="947.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.6" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.rowBy (90 samples, 1.23%)</title><rect x="687.6" y="931.0" width="14.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MySuperDAO.rowIterator (88 samples, 1.21%)</title><rect x="687.6" y="915.0" width="14.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.6" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getActualRowIterator (12 samples, 0.16%)</title><rect x="687.6" y="899.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.6" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6 samples, 0.08%)</title><rect x="687.6" y="883.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.6" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6 samples, 0.08%)</title><rect x="687.6" y="867.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.6" y="878.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="687.8" y="851.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="690.8" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.08%)</title><rect x="688.6" y="883.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.08%)</title><rect x="688.6" y="867.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.6" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.07%)</title><rect x="688.7" y="851.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.7" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 0.05%)</title><rect x="688.7" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.7" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (4 samples, 0.05%)</title><rect x="688.7" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.next (4 samples, 0.05%)</title><rect x="688.7" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getRowAt (4 samples, 0.05%)</title><rect x="688.7" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.7" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.04%)</title><rect x="688.9" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.9" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.04%)</title><rect x="688.9" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.9" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="689.1" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.1" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="689.1" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="689.1" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="689.1" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (76 samples, 1.04%)</title><rect x="689.5" y="899.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="692.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (2 samples, 0.03%)</title><rect x="689.7" y="883.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (9 samples, 0.12%)</title><rect x="690.0" y="883.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="693.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.08%)</title><rect x="690.5" y="867.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.07%)</title><rect x="690.7" y="851.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="693.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (3 samples, 0.04%)</title><rect x="691.0" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (3 samples, 0.04%)</title><rect x="691.0" y="819.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.iterator (37 samples, 0.51%)</title><rect x="691.5" y="883.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.5" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable$1.&lt;init&gt; (37 samples, 0.51%)</title><rect x="691.5" y="867.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getOffsetsIndex (37 samples, 0.51%)</title><rect x="691.5" y="851.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.5" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.15%)</title><rect x="692.0" y="835.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.0" y="846.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.11%)</title><rect x="692.5" y="819.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.5" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.04%)</title><rect x="692.9" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/FileTable.getKeyAt (23 samples, 0.32%)</title><rect x="693.7" y="835.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.7" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (5 samples, 0.07%)</title><rect x="694.6" y="819.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.6" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (5 samples, 0.07%)</title><rect x="694.6" y="803.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (5 samples, 0.07%)</title><rect x="694.6" y="787.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (5 samples, 0.07%)</title><rect x="694.6" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.6" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.11%)</title><rect x="695.4" y="819.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.4" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.11%)</title><rect x="695.4" y="803.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.4" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.11%)</title><rect x="695.4" y="787.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.4" y="798.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="695.7" y="771.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="695.7" y="755.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="695.7" y="739.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.7" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="696.0" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.0" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="696.3" y="707.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.3" y="718.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="696.3" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="696.3" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.3" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5 samples, 0.07%)</title><rect x="696.7" y="819.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.7" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.05%)</title><rect x="696.8" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.8" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="696.8" y="787.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.8" y="798.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="696.8" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="696.8" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="696.8" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.8" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="697.0" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTablePool.iterator (27 samples, 0.37%)</title><rect x="697.5" y="883.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.05%)</title><rect x="697.5" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.05%)</title><rect x="697.5" y="851.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.05%)</title><rect x="697.5" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="697.8" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.8" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="697.8" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="697.8" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.8" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="697.8" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Utils.getListIterators (23 samples, 0.32%)</title><rect x="698.1" y="867.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="701.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/MemoryTable.iterator (22 samples, 0.30%)</title><rect x="698.3" y="851.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (21 samples, 0.29%)</title><rect x="698.3" y="835.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (21 samples, 0.29%)</title><rect x="698.3" y="819.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (21 samples, 0.29%)</title><rect x="698.3" y="803.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (21 samples, 0.29%)</title><rect x="698.3" y="787.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (21 samples, 0.29%)</title><rect x="698.3" y="771.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="701.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (21 samples, 0.29%)</title><rect x="698.3" y="755.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (16 samples, 0.22%)</title><rect x="699.1" y="739.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.22%)</title><rect x="699.1" y="723.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="702.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.11%)</title><rect x="700.4" y="707.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.4" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.11%)</title><rect x="700.4" y="691.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.4" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.10%)</title><rect x="700.5" y="675.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.5" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.05%)</title><rect x="701.0" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shkalev/Row.getKey (2 samples, 0.03%)</title><rect x="701.8" y="915.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (469 samples, 6.44%)</title><rect x="702.3" y="1043.0" width="76.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.3" y="1054.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (56 samples, 0.77%)</title><rect x="702.7" y="1027.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="702.7" y="1011.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.03%)</title><rect x="702.7" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (32 samples, 0.44%)</title><rect x="703.0" y="1011.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (32 samples, 0.44%)</title><rect x="703.0" y="995.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="706.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (31 samples, 0.43%)</title><rect x="703.1" y="979.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (29 samples, 0.40%)</title><rect x="703.5" y="963.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (29 samples, 0.40%)</title><rect x="703.5" y="947.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (28 samples, 0.38%)</title><rect x="703.5" y="931.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (28 samples, 0.38%)</title><rect x="703.5" y="915.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (28 samples, 0.38%)</title><rect x="703.5" y="899.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (28 samples, 0.38%)</title><rect x="703.5" y="883.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.33%)</title><rect x="704.1" y="867.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.33%)</title><rect x="704.1" y="851.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.1" y="862.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (23 samples, 0.32%)</title><rect x="704.3" y="835.0" width="3.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="707.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.27%)</title><rect x="704.8" y="819.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="707.8" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.27%)</title><rect x="704.8" y="803.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="707.8" y="814.0"></text>
</g>
<g>
<title>sys_futex (19 samples, 0.26%)</title><rect x="704.9" y="787.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="707.9" y="798.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.26%)</title><rect x="704.9" y="771.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="707.9" y="782.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.26%)</title><rect x="704.9" y="755.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="707.9" y="766.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.23%)</title><rect x="705.2" y="739.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="708.2" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.23%)</title><rect x="705.2" y="723.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="708.2" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.23%)</title><rect x="705.2" y="707.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="708.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$146/1592775674.apply (22 samples, 0.30%)</title><rect x="708.2" y="1011.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ServiceUtils.parse (22 samples, 0.30%)</title><rect x="708.2" y="995.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ServiceUtils.getTimeStamp (22 samples, 0.30%)</title><rect x="708.2" y="979.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.2" y="990.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (5 samples, 0.07%)</title><rect x="708.2" y="963.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.2" y="974.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (5 samples, 0.07%)</title><rect x="708.2" y="947.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.2" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (17 samples, 0.23%)</title><rect x="709.0" y="963.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.0" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.04%)</title><rect x="709.0" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.0" y="958.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.04%)</title><rect x="709.0" y="931.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.0" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.04%)</title><rect x="709.0" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.0" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (13 samples, 0.18%)</title><rect x="709.6" y="947.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.6" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (13 samples, 0.18%)</title><rect x="709.6" y="931.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.6" y="942.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (13 samples, 0.18%)</title><rect x="709.6" y="915.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.6" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.03%)</title><rect x="710.6" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="713.6" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.03%)</title><rect x="710.6" y="883.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.6" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.03%)</title><rect x="710.6" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.6" y="878.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (2 samples, 0.03%)</title><rect x="710.6" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.6" y="862.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.03%)</title><rect x="710.9" y="899.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.9" y="910.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.03%)</title><rect x="710.9" y="883.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.9" y="894.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (2 samples, 0.03%)</title><rect x="710.9" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.9" y="878.0"></text>
</g>
<g>
<title>java/util/OptionalLong.&lt;init&gt; (2 samples, 0.03%)</title><rect x="710.9" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.9" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="711.2" y="899.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="714.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (411 samples, 5.64%)</title><rect x="711.7" y="1027.0" width="66.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.7" y="1038.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (77 samples, 1.06%)</title><rect x="712.2" y="1011.0" width="12.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="715.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (75 samples, 1.03%)</title><rect x="712.5" y="995.0" width="12.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (66 samples, 0.91%)</title><rect x="713.3" y="979.0" width="10.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (64 samples, 0.88%)</title><rect x="713.7" y="963.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (61 samples, 0.84%)</title><rect x="713.8" y="947.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (60 samples, 0.82%)</title><rect x="714.0" y="931.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (58 samples, 0.80%)</title><rect x="714.3" y="915.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (58 samples, 0.80%)</title><rect x="714.3" y="899.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (57 samples, 0.78%)</title><rect x="714.5" y="883.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (57 samples, 0.78%)</title><rect x="714.5" y="867.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.5" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.05%)</title><rect x="714.6" y="851.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="717.6" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="714.8" y="835.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="717.8" y="846.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (52 samples, 0.71%)</title><rect x="715.3" y="851.0" width="8.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="718.3" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.62%)</title><rect x="716.4" y="835.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="719.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.62%)</title><rect x="716.4" y="819.0" width="7.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="719.4" y="830.0"></text>
</g>
<g>
<title>sys_futex (43 samples, 0.59%)</title><rect x="716.7" y="803.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="719.7" y="814.0"></text>
</g>
<g>
<title>do_futex (43 samples, 0.59%)</title><rect x="716.7" y="787.0" width="7.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="719.7" y="798.0"></text>
</g>
<g>
<title>futex_wake (42 samples, 0.58%)</title><rect x="716.7" y="771.0" width="6.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="719.7" y="782.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="717.2" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="720.2" y="766.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 0.51%)</title><rect x="717.5" y="755.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="720.5" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (35 samples, 0.48%)</title><rect x="717.9" y="739.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="720.9" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (35 samples, 0.48%)</title><rect x="717.9" y="723.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="720.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.03%)</title><rect x="723.7" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (2 samples, 0.03%)</title><rect x="724.0" y="979.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (331 samples, 4.54%)</title><rect x="724.7" y="1011.0" width="53.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.7" y="1022.0">java/..</text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="725.2" y="995.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="728.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$142/261711381.accept (4 samples, 0.05%)</title><rect x="725.6" y="995.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$153/755634580.accept (23 samples, 0.32%)</title><rect x="726.3" y="995.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$collect$11 (20 samples, 0.27%)</title><rect x="726.8" y="979.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="729.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (13 samples, 0.18%)</title><rect x="726.8" y="963.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.18%)</title><rect x="726.8" y="947.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="729.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (13 samples, 0.18%)</title><rect x="726.8" y="931.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (13 samples, 0.18%)</title><rect x="726.8" y="915.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (13 samples, 0.18%)</title><rect x="726.8" y="899.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (12 samples, 0.16%)</title><rect x="726.8" y="883.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (12 samples, 0.16%)</title><rect x="726.8" y="867.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (12 samples, 0.16%)</title><rect x="726.8" y="851.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (12 samples, 0.16%)</title><rect x="726.8" y="835.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.14%)</title><rect x="727.1" y="819.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.14%)</title><rect x="727.1" y="803.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.1" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.04%)</title><rect x="727.1" y="787.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="730.1" y="798.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.10%)</title><rect x="727.6" y="787.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="730.6" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.08%)</title><rect x="727.7" y="771.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="730.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.08%)</title><rect x="727.7" y="755.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="730.7" y="766.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.07%)</title><rect x="727.9" y="739.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="730.9" y="750.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.07%)</title><rect x="727.9" y="723.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="730.9" y="734.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.07%)</title><rect x="727.9" y="707.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="730.9" y="718.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.05%)</title><rect x="728.1" y="691.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="731.1" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.05%)</title><rect x="728.1" y="675.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="731.1" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.05%)</title><rect x="728.1" y="659.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="731.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.03%)</title><rect x="728.9" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.03%)</title><rect x="728.9" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.03%)</title><rect x="728.9" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.size (5 samples, 0.07%)</title><rect x="729.2" y="963.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$158/1410238028.accept (296 samples, 4.06%)</title><rect x="730.0" y="995.0" width="47.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.0" y="1006.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$sendActualResponse$9 (293 samples, 4.02%)</title><rect x="730.5" y="979.0" width="47.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.5" y="990.0">ru/m..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (36 samples, 0.49%)</title><rect x="730.7" y="963.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.7" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.03%)</title><rect x="730.7" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.7" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (34 samples, 0.47%)</title><rect x="731.0" y="947.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.0" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (6 samples, 0.08%)</title><rect x="731.1" y="931.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.1" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (4 samples, 0.05%)</title><rect x="731.5" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.5" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (27 samples, 0.37%)</title><rect x="732.1" y="931.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="735.1" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (26 samples, 0.36%)</title><rect x="732.3" y="915.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.3" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (26 samples, 0.36%)</title><rect x="732.3" y="899.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.3" y="910.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (10 samples, 0.14%)</title><rect x="732.3" y="883.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.3" y="894.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="732.8" y="867.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="735.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$CLDSpliterator.characteristics (3 samples, 0.04%)</title><rect x="733.4" y="867.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$CLDSpliterator.forEachRemaining (14 samples, 0.19%)</title><rect x="733.9" y="883.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (12 samples, 0.16%)</title><rect x="734.2" y="867.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.2" y="878.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$44/1978869058.accept (12 samples, 0.16%)</title><rect x="734.2" y="851.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="737.2" y="862.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (12 samples, 0.16%)</title><rect x="734.2" y="835.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (9 samples, 0.12%)</title><rect x="734.7" y="819.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="737.7" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.10%)</title><rect x="734.7" y="803.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (7 samples, 0.10%)</title><rect x="734.7" y="787.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.7" y="798.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.05%)</title><rect x="735.0" y="771.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="738.0" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="735.0" y="755.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="738.0" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.03%)</title><rect x="735.4" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="738.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (2 samples, 0.03%)</title><rect x="736.2" y="883.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.2" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (25 samples, 0.34%)</title><rect x="736.5" y="963.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.5" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (25 samples, 0.34%)</title><rect x="736.5" y="947.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.5" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (25 samples, 0.34%)</title><rect x="736.5" y="931.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (21 samples, 0.29%)</title><rect x="737.1" y="915.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="740.1" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (20 samples, 0.27%)</title><rect x="737.3" y="899.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="740.3" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (20 samples, 0.27%)</title><rect x="737.3" y="883.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.3" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (14 samples, 0.19%)</title><rect x="737.3" y="867.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.3" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (11 samples, 0.15%)</title><rect x="737.8" y="851.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="740.8" y="862.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$323/132544686.apply (11 samples, 0.15%)</title><rect x="737.8" y="835.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.8" y="846.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (11 samples, 0.15%)</title><rect x="737.8" y="819.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="740.8" y="830.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$322/451758735.compare (10 samples, 0.14%)</title><rect x="737.9" y="803.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="740.9" y="814.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (10 samples, 0.14%)</title><rect x="737.9" y="787.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.9" y="798.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$321/1338850254.compare (10 samples, 0.14%)</title><rect x="737.9" y="771.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.9" y="782.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (10 samples, 0.14%)</title><rect x="737.9" y="755.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$320/776237892.applyAsLong (10 samples, 0.14%)</title><rect x="737.9" y="739.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$sendActualResponse$8 (10 samples, 0.14%)</title><rect x="737.9" y="723.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ServiceUtils.getTimeStamp (10 samples, 0.14%)</title><rect x="737.9" y="707.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (3 samples, 0.04%)</title><rect x="738.3" y="691.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.3" y="702.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (3 samples, 0.04%)</title><rect x="738.3" y="675.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.04%)</title><rect x="738.3" y="659.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="741.3" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.04%)</title><rect x="738.3" y="643.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.03%)</title><rect x="738.4" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.07%)</title><rect x="738.8" y="691.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="738.9" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="738.9" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.9" y="670.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (4 samples, 0.05%)</title><rect x="739.6" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.6" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.03%)</title><rect x="740.2" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.2" y="878.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="740.2" y="851.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="743.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.sendResponse (231 samples, 3.17%)</title><rect x="740.5" y="963.0" width="37.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.5" y="974.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (231 samples, 3.17%)</title><rect x="740.5" y="947.0" width="37.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.5" y="958.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (226 samples, 3.10%)</title><rect x="741.3" y="931.0" width="36.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="744.3" y="942.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.11%)</title><rect x="741.3" y="915.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.3" y="926.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.05%)</title><rect x="742.0" y="899.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.0" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="742.2" y="883.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.2" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="742.2" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (218 samples, 2.99%)</title><rect x="742.6" y="915.0" width="35.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.6" y="926.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (218 samples, 2.99%)</title><rect x="742.6" y="899.0" width="35.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.6" y="910.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.03%)</title><rect x="742.6" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (216 samples, 2.96%)</title><rect x="743.0" y="883.0" width="34.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="746.0" y="894.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="743.0" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (214 samples, 2.94%)</title><rect x="743.3" y="867.0" width="34.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.3" y="878.0">on..</text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="743.6" y="851.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="746.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="743.6" y="835.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="746.6" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.12%)</title><rect x="743.6" y="819.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="746.6" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.03%)</title><rect x="744.1" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="747.1" y="814.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="744.6" y="803.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="747.6" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.03%)</title><rect x="744.6" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="747.6" y="798.0"></text>
</g>
<g>
<title>__send (3 samples, 0.04%)</title><rect x="745.1" y="819.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="748.1" y="830.0"></text>
</g>
<g>
<title>__send (200 samples, 2.74%)</title><rect x="745.6" y="851.0" width="32.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="748.6" y="862.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (194 samples, 2.66%)</title><rect x="746.5" y="835.0" width="31.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="749.5" y="846.0">en..</text>
</g>
<g>
<title>do_syscall_64 (194 samples, 2.66%)</title><rect x="746.5" y="819.0" width="31.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="749.5" y="830.0">do..</text>
</g>
<g>
<title>sys_sendto (193 samples, 2.65%)</title><rect x="746.7" y="803.0" width="31.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="749.7" y="814.0">sy..</text>
</g>
<g>
<title>SYSC_sendto (192 samples, 2.63%)</title><rect x="746.9" y="787.0" width="31.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="749.9" y="798.0">SY..</text>
</g>
<g>
<title>sock_sendmsg (188 samples, 2.58%)</title><rect x="747.0" y="771.0" width="30.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="750.0" y="782.0">so..</text>
</g>
<g>
<title>inet_sendmsg (187 samples, 2.57%)</title><rect x="747.0" y="755.0" width="30.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="750.0" y="766.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (186 samples, 2.55%)</title><rect x="747.2" y="739.0" width="30.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="750.2" y="750.0">tc..</text>
</g>
<g>
<title>release_sock (12 samples, 0.16%)</title><rect x="747.2" y="723.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="750.2" y="734.0"></text>
</g>
<g>
<title>__release_sock (12 samples, 0.16%)</title><rect x="747.2" y="707.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="750.2" y="718.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (12 samples, 0.16%)</title><rect x="747.2" y="691.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="750.2" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_established (12 samples, 0.16%)</title><rect x="747.2" y="675.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="750.2" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.04%)</title><rect x="747.5" y="659.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="750.5" y="670.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="747.7" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="750.7" y="654.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="748.0" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="751.0" y="670.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.07%)</title><rect x="748.3" y="659.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="751.3" y="670.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.04%)</title><rect x="748.6" y="643.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="751.6" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (174 samples, 2.39%)</title><rect x="749.1" y="723.0" width="28.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="752.1" y="734.0">tc..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.03%)</title><rect x="750.3" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="753.3" y="718.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.05%)</title><rect x="750.7" y="707.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="753.7" y="718.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.04%)</title><rect x="750.7" y="691.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="753.7" y="702.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (2 samples, 0.03%)</title><rect x="750.7" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="753.7" y="686.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="751.4" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="754.4" y="718.0"></text>
</g>
<g>
<title>tcp_cwnd_restart (2 samples, 0.03%)</title><rect x="751.4" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="754.4" y="702.0"></text>
</g>
<g>
<title>tcp_push (156 samples, 2.14%)</title><rect x="751.9" y="707.0" width="25.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="754.9" y="718.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (155 samples, 2.13%)</title><rect x="751.9" y="691.0" width="25.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="754.9" y="702.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (154 samples, 2.11%)</title><rect x="752.0" y="675.0" width="25.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="755.0" y="686.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (142 samples, 1.95%)</title><rect x="752.4" y="659.0" width="22.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="755.4" y="670.0">_..</text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="752.7" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="755.7" y="654.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.03%)</title><rect x="753.0" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="756.0" y="654.0"></text>
</g>
<g>
<title>ip_queue_xmit (135 samples, 1.85%)</title><rect x="753.3" y="643.0" width="21.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="756.3" y="654.0">i..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="753.7" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="756.7" y="638.0"></text>
</g>
<g>
<title>ip_local_out (130 samples, 1.78%)</title><rect x="754.0" y="627.0" width="21.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="757.0" y="638.0">i..</text>
</g>
<g>
<title>ip_output (130 samples, 1.78%)</title><rect x="754.0" y="611.0" width="21.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="757.0" y="622.0">i..</text>
</g>
<g>
<title>ip_finish_output (130 samples, 1.78%)</title><rect x="754.0" y="595.0" width="21.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="757.0" y="606.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (128 samples, 1.76%)</title><rect x="754.3" y="579.0" width="20.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="757.3" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (114 samples, 1.56%)</title><rect x="754.8" y="563.0" width="18.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="757.8" y="574.0"></text>
</g>
<g>
<title>do_softirq.part.17 (112 samples, 1.54%)</title><rect x="755.1" y="547.0" width="18.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="758.1" y="558.0"></text>
</g>
<g>
<title>do_softirq_own_stack (111 samples, 1.52%)</title><rect x="755.3" y="531.0" width="17.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="758.3" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (110 samples, 1.51%)</title><rect x="755.3" y="515.0" width="17.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="758.3" y="526.0"></text>
</g>
<g>
<title>net_rx_action (109 samples, 1.50%)</title><rect x="755.4" y="499.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="758.4" y="510.0"></text>
</g>
<g>
<title>process_backlog (106 samples, 1.45%)</title><rect x="755.9" y="483.0" width="17.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="758.9" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb (102 samples, 1.40%)</title><rect x="756.2" y="467.0" width="16.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="759.2" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (101 samples, 1.39%)</title><rect x="756.2" y="451.0" width="16.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="759.2" y="462.0"></text>
</g>
<g>
<title>ip_rcv (98 samples, 1.34%)</title><rect x="756.7" y="435.0" width="15.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="759.7" y="446.0"></text>
</g>
<g>
<title>ip_rcv_finish (97 samples, 1.33%)</title><rect x="756.9" y="419.0" width="15.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="759.9" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (93 samples, 1.28%)</title><rect x="757.5" y="403.0" width="15.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="760.5" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (93 samples, 1.28%)</title><rect x="757.5" y="387.0" width="15.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="760.5" y="398.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="757.9" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="760.9" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (89 samples, 1.22%)</title><rect x="758.2" y="371.0" width="14.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="761.2" y="382.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.03%)</title><rect x="759.0" y="355.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="762.0" y="366.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.03%)</title><rect x="759.3" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="762.3" y="366.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (77 samples, 1.06%)</title><rect x="760.1" y="355.0" width="12.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="763.1" y="366.0"></text>
</g>
<g>
<title>tcp_rcv_established (76 samples, 1.04%)</title><rect x="760.3" y="339.0" width="12.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="763.3" y="350.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (12 samples, 0.16%)</title><rect x="760.5" y="323.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="763.5" y="334.0"></text>
</g>
<g>
<title>tcp_send_ack (11 samples, 0.15%)</title><rect x="760.6" y="307.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="763.6" y="318.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.39 (11 samples, 0.15%)</title><rect x="760.6" y="291.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="763.6" y="302.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.03%)</title><rect x="760.6" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="763.6" y="286.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.03%)</title><rect x="760.6" y="259.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="763.6" y="270.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (9 samples, 0.12%)</title><rect x="760.9" y="275.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="763.9" y="286.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 0.07%)</title><rect x="761.6" y="259.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="764.6" y="270.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.07%)</title><rect x="761.6" y="243.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="764.6" y="254.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.07%)</title><rect x="761.6" y="227.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="764.6" y="238.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.05%)</title><rect x="761.6" y="211.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="764.6" y="222.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.05%)</title><rect x="761.6" y="195.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="764.6" y="206.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.04%)</title><rect x="761.7" y="179.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="764.7" y="190.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.04%)</title><rect x="761.7" y="163.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="764.7" y="174.0"></text>
</g>
<g>
<title>tcp_ack (18 samples, 0.25%)</title><rect x="762.6" y="323.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="765.6" y="334.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="763.5" y="307.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="766.5" y="318.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (10 samples, 0.14%)</title><rect x="763.9" y="307.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="766.9" y="318.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.08%)</title><rect x="764.2" y="291.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="767.2" y="302.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="764.2" y="275.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="767.2" y="286.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="764.2" y="259.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="767.2" y="270.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="764.2" y="243.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="767.2" y="254.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.05%)</title><rect x="764.5" y="275.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="767.5" y="286.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.04%)</title><rect x="764.7" y="259.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="767.7" y="270.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.03%)</title><rect x="764.8" y="243.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="767.8" y="254.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="764.8" y="227.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="767.8" y="238.0"></text>
</g>
<g>
<title>tcp_data_queue (42 samples, 0.58%)</title><rect x="765.5" y="323.0" width="6.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="768.5" y="334.0"></text>
</g>
<g>
<title>sock_def_readable (33 samples, 0.45%)</title><rect x="766.3" y="307.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="769.3" y="318.0"></text>
</g>
<g>
<title>__wake_up_sync_key (33 samples, 0.45%)</title><rect x="766.3" y="291.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="769.3" y="302.0"></text>
</g>
<g>
<title>__wake_up_common_lock (33 samples, 0.45%)</title><rect x="766.3" y="275.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="769.3" y="286.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (33 samples, 0.45%)</title><rect x="766.3" y="259.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="769.3" y="270.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.05%)</title><rect x="771.6" y="307.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="774.6" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="772.8" y="467.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="775.8" y="478.0"></text>
</g>
<g>
<title>dev_queue_xmit (11 samples, 0.15%)</title><rect x="773.2" y="563.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="776.2" y="574.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.14%)</title><rect x="773.2" y="547.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="776.2" y="558.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.08%)</title><rect x="773.6" y="531.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="776.6" y="542.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.07%)</title><rect x="773.7" y="515.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="776.7" y="526.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="773.7" y="499.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="776.7" y="510.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="774.1" y="499.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="777.1" y="510.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="774.5" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="777.5" y="542.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="775.3" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="778.3" y="670.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.08%)</title><rect x="775.8" y="659.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="778.8" y="670.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.05%)</title><rect x="776.2" y="643.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="779.2" y="654.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (4 samples, 0.05%)</title><rect x="776.2" y="627.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="779.2" y="638.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="776.2" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="779.2" y="622.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="776.2" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="779.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.05%)</title><rect x="776.2" y="579.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="779.2" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.04%)</title><rect x="777.5" y="771.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="780.5" y="782.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="777.5" y="755.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="780.5" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="777.5" y="739.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="780.5" y="750.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="777.5" y="723.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="780.5" y="734.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="778.3" y="1043.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="781.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.04%)</title><rect x="778.7" y="1075.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="781.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.04%)</title><rect x="778.7" y="1059.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.04%)</title><rect x="778.7" y="1043.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.7" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.04%)</title><rect x="778.7" y="1027.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="781.7" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="778.9" y="1011.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="781.9" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="778.9" y="995.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="781.9" y="1006.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="778.9" y="979.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="781.9" y="990.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="778.9" y="963.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="781.9" y="974.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="778.9" y="947.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="781.9" y="958.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="778.9" y="931.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="781.9" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="778.9" y="915.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="781.9" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="778.9" y="899.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="781.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (96 samples, 1.32%)</title><rect x="779.2" y="1091.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (95 samples, 1.30%)</title><rect x="779.4" y="1075.0" width="15.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.4" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (44 samples, 0.60%)</title><rect x="779.9" y="1059.0" width="7.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="782.9" y="1070.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (14 samples, 0.19%)</title><rect x="780.7" y="1043.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="783.7" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.10%)</title><rect x="781.8" y="1027.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="784.8" y="1038.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.03%)</title><rect x="782.6" y="1011.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="785.6" y="1022.0"></text>
</g>
<g>
<title>__lll_unlock_wake (22 samples, 0.30%)</title><rect x="783.1" y="1043.0" width="3.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="786.1" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.14%)</title><rect x="785.1" y="1027.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="788.1" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.14%)</title><rect x="785.1" y="1011.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="788.1" y="1022.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.08%)</title><rect x="785.7" y="995.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="788.7" y="1006.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.07%)</title><rect x="785.9" y="979.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="788.9" y="990.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.05%)</title><rect x="785.9" y="963.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="788.9" y="974.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="786.2" y="947.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="789.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.66%)</title><rect x="787.0" y="1059.0" width="7.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="790.0" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_wait (46 samples, 0.63%)</title><rect x="787.0" y="1043.0" width="7.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="790.0" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.25%)</title><rect x="791.5" y="1027.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="794.5" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.23%)</title><rect x="791.5" y="1011.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="794.5" y="1022.0"></text>
</g>
<g>
<title>sys_futex (13 samples, 0.18%)</title><rect x="792.2" y="995.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="795.2" y="1006.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.18%)</title><rect x="792.2" y="979.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="795.2" y="990.0"></text>
</g>
<g>
<title>futex_wait (13 samples, 0.18%)</title><rect x="792.2" y="963.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="795.2" y="974.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.12%)</title><rect x="792.7" y="947.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="795.7" y="958.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.11%)</title><rect x="792.8" y="931.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="795.8" y="942.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.11%)</title><rect x="792.8" y="915.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="795.8" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.10%)</title><rect x="793.0" y="899.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="796.0" y="910.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="794.5" y="1043.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="797.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (210 samples, 2.88%)</title><rect x="794.8" y="1091.0" width="34.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.8" y="1102.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2 samples, 0.03%)</title><rect x="795.1" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (206 samples, 2.83%)</title><rect x="795.4" y="1075.0" width="33.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="798.4" y="1086.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (79 samples, 1.08%)</title><rect x="795.7" y="1059.0" width="12.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="798.7" y="1070.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (18 samples, 0.25%)</title><rect x="796.7" y="1043.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="799.7" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.07%)</title><rect x="797.7" y="1027.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="800.7" y="1038.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.03%)</title><rect x="798.2" y="1011.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="801.2" y="1022.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="798.7" y="1027.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="801.7" y="1038.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (3 samples, 0.04%)</title><rect x="799.1" y="1027.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="802.1" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="799.3" y="1011.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="802.3" y="1022.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="799.3" y="995.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="802.3" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (3 samples, 0.04%)</title><rect x="799.6" y="1043.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="802.6" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.03%)</title><rect x="800.1" y="1043.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="803.1" y="1054.0"></text>
</g>
<g>
<title>__lll_unlock_wake (42 samples, 0.58%)</title><rect x="800.4" y="1043.0" width="6.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="803.4" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.36%)</title><rect x="802.9" y="1027.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="805.9" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.33%)</title><rect x="803.0" y="1011.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="806.0" y="1022.0"></text>
</g>
<g>
<title>sys_futex (17 samples, 0.23%)</title><rect x="804.2" y="995.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="807.2" y="1006.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.19%)</title><rect x="804.2" y="979.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="807.2" y="990.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.19%)</title><rect x="804.2" y="963.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="807.2" y="974.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="805.9" y="947.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="808.9" y="958.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="806.4" y="979.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="809.4" y="990.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="807.4" y="1043.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="810.4" y="1054.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="808.1" y="1043.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="811.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="808.5" y="1059.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="811.5" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="808.5" y="1043.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="811.5" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (120 samples, 1.65%)</title><rect x="808.9" y="1059.0" width="19.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="811.9" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 1.08%)</title><rect x="815.5" y="1043.0" width="12.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="818.5" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (79 samples, 1.08%)</title><rect x="815.5" y="1027.0" width="12.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="818.5" y="1038.0"></text>
</g>
<g>
<title>sys_futex (71 samples, 0.97%)</title><rect x="816.8" y="1011.0" width="11.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="819.8" y="1022.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.04%)</title><rect x="817.3" y="995.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="820.3" y="1006.0"></text>
</g>
<g>
<title>do_futex (65 samples, 0.89%)</title><rect x="817.8" y="995.0" width="10.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="820.8" y="1006.0"></text>
</g>
<g>
<title>futex_wait (61 samples, 0.84%)</title><rect x="818.4" y="979.0" width="9.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="821.4" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (32 samples, 0.44%)</title><rect x="819.1" y="963.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="822.1" y="974.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (17 samples, 0.23%)</title><rect x="819.9" y="947.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="822.9" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.19%)</title><rect x="820.2" y="931.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="823.2" y="942.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.12%)</title><rect x="822.8" y="947.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="825.8" y="958.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.11%)</title><rect x="823.0" y="931.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="826.0" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.08%)</title><rect x="823.3" y="915.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="826.3" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.05%)</title><rect x="824.2" y="963.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="827.2" y="974.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="824.4" y="947.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="827.4" y="958.0"></text>
</g>
<g>
<title>hrtimer_cancel (20 samples, 0.27%)</title><rect x="824.9" y="963.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="827.9" y="974.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (18 samples, 0.25%)</title><rect x="825.2" y="947.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="828.2" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (16 samples, 0.22%)</title><rect x="825.5" y="931.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="828.5" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="828.5" y="1059.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="831.5" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="828.8" y="1091.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="831.8" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="828.8" y="1075.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="831.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,068 samples, 14.65%)</title><rect x="829.1" y="1123.0" width="172.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="832.1" y="1134.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (5 samples, 0.07%)</title><rect x="835.1" y="1107.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="838.1" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (4 samples, 0.05%)</title><rect x="835.3" y="1091.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="838.3" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (20 samples, 0.27%)</title><rect x="836.1" y="1107.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.1" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (272 samples, 3.73%)</title><rect x="839.3" y="1107.0" width="44.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.3" y="1118.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$252/1441582560.accept (256 samples, 3.51%)</title><rect x="840.0" y="1091.0" width="41.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.0" y="1102.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (256 samples, 3.51%)</title><rect x="840.0" y="1075.0" width="41.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.0" y="1086.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (256 samples, 3.51%)</title><rect x="840.0" y="1059.0" width="41.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.0" y="1070.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (256 samples, 3.51%)</title><rect x="840.0" y="1043.0" width="41.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.0" y="1054.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (256 samples, 3.51%)</title><rect x="840.0" y="1027.0" width="41.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="843.0" y="1038.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.04%)</title><rect x="840.0" y="1011.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="843.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (253 samples, 3.47%)</title><rect x="840.4" y="1011.0" width="41.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.4" y="1022.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (253 samples, 3.47%)</title><rect x="840.4" y="995.0" width="41.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.4" y="1006.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (253 samples, 3.47%)</title><rect x="840.4" y="979.0" width="41.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="843.4" y="990.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (252 samples, 3.46%)</title><rect x="840.6" y="963.0" width="40.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.6" y="974.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (252 samples, 3.46%)</title><rect x="840.6" y="947.0" width="40.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.6" y="958.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$183/247528643.run (248 samples, 3.40%)</title><rect x="841.1" y="931.0" width="40.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.1" y="942.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (248 samples, 3.40%)</title><rect x="841.1" y="915.0" width="40.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.1" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (83 samples, 1.14%)</title><rect x="841.6" y="899.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (83 samples, 1.14%)</title><rect x="841.6" y="883.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="844.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (82 samples, 1.13%)</title><rect x="841.7" y="867.0" width="13.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (4 samples, 0.05%)</title><rect x="841.7" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (4 samples, 0.05%)</title><rect x="841.7" y="835.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (4 samples, 0.05%)</title><rect x="841.7" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="844.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (78 samples, 1.07%)</title><rect x="842.4" y="851.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (78 samples, 1.07%)</title><rect x="842.4" y="835.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (75 samples, 1.03%)</title><rect x="842.5" y="819.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (75 samples, 1.03%)</title><rect x="842.5" y="803.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (74 samples, 1.02%)</title><rect x="842.5" y="787.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (62 samples, 0.85%)</title><rect x="842.7" y="771.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.03%)</title><rect x="842.7" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.03%)</title><rect x="842.7" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.03%)</title><rect x="842.7" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (59 samples, 0.81%)</title><rect x="843.2" y="755.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (59 samples, 0.81%)</title><rect x="843.2" y="739.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (59 samples, 0.81%)</title><rect x="843.2" y="723.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="846.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (59 samples, 0.81%)</title><rect x="843.2" y="707.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (59 samples, 0.81%)</title><rect x="843.2" y="691.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.2" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.18%)</title><rect x="843.4" y="675.0" width="2.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="846.4" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="844.0" y="659.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="847.0" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="844.5" y="659.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="847.5" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.03%)</title><rect x="845.0" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="848.0" y="670.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (43 samples, 0.59%)</title><rect x="845.8" y="675.0" width="6.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="848.8" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.45%)</title><rect x="847.4" y="659.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="850.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.44%)</title><rect x="847.4" y="643.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="850.4" y="654.0"></text>
</g>
<g>
<title>sys_futex (29 samples, 0.40%)</title><rect x="847.9" y="627.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="850.9" y="638.0"></text>
</g>
<g>
<title>do_futex (29 samples, 0.40%)</title><rect x="847.9" y="611.0" width="4.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="850.9" y="622.0"></text>
</g>
<g>
<title>futex_wake (27 samples, 0.37%)</title><rect x="847.9" y="595.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="850.9" y="606.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="848.2" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="851.2" y="590.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (2 samples, 0.03%)</title><rect x="848.4" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="851.4" y="574.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.29%)</title><rect x="848.9" y="579.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="851.9" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.29%)</title><rect x="848.9" y="563.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="851.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.29%)</title><rect x="848.9" y="547.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="851.9" y="558.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="852.3" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="855.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.08%)</title><rect x="852.7" y="771.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.08%)</title><rect x="852.7" y="755.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.07%)</title><rect x="853.7" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.07%)</title><rect x="853.7" y="755.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.07%)</title><rect x="853.7" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.07%)</title><rect x="853.7" y="723.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.03%)</title><rect x="854.7" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="857.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.03%)</title><rect x="854.7" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (3 samples, 0.04%)</title><rect x="855.2" y="899.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (6 samples, 0.08%)</title><rect x="855.7" y="899.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="858.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (6 samples, 0.08%)</title><rect x="855.7" y="883.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="858.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (6 samples, 0.08%)</title><rect x="855.7" y="867.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="858.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.03%)</title><rect x="856.3" y="851.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="859.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.03%)</title><rect x="856.3" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="859.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.03%)</title><rect x="856.3" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="859.3" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="856.3" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (152 samples, 2.09%)</title><rect x="856.6" y="899.0" width="24.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.6" y="910.0">j..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (152 samples, 2.09%)</title><rect x="856.6" y="883.0" width="24.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.6" y="894.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (143 samples, 1.96%)</title><rect x="858.1" y="867.0" width="23.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.1" y="878.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (142 samples, 1.95%)</title><rect x="858.2" y="851.0" width="23.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.2" y="862.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.05%)</title><rect x="858.2" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.2" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.05%)</title><rect x="858.2" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="861.2" y="830.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.04%)</title><rect x="858.4" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (119 samples, 1.63%)</title><rect x="858.9" y="835.0" width="19.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (119 samples, 1.63%)</title><rect x="858.9" y="819.0" width="19.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.9" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (119 samples, 1.63%)</title><rect x="858.9" y="803.0" width="19.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="861.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 1.59%)</title><rect x="858.9" y="787.0" width="18.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="861.9" y="798.0"></text>
</g>
<g>
<title>__libc_read (116 samples, 1.59%)</title><rect x="858.9" y="771.0" width="18.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="861.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 1.37%)</title><rect x="861.5" y="755.0" width="16.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="864.5" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (100 samples, 1.37%)</title><rect x="861.5" y="739.0" width="16.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="864.5" y="750.0"></text>
</g>
<g>
<title>sys_read (91 samples, 1.25%)</title><rect x="862.9" y="723.0" width="14.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="865.9" y="734.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="862.9" y="707.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="865.9" y="718.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="862.9" y="691.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="865.9" y="702.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="862.9" y="675.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="865.9" y="686.0"></text>
</g>
<g>
<title>vfs_read (86 samples, 1.18%)</title><rect x="863.8" y="707.0" width="13.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="866.8" y="718.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.03%)</title><rect x="864.1" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="867.1" y="702.0"></text>
</g>
<g>
<title>__vfs_read (74 samples, 1.02%)</title><rect x="864.4" y="691.0" width="12.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="867.4" y="702.0"></text>
</g>
<g>
<title>new_sync_read (72 samples, 0.99%)</title><rect x="864.6" y="675.0" width="11.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="867.6" y="686.0"></text>
</g>
<g>
<title>sock_read_iter (70 samples, 0.96%)</title><rect x="864.7" y="659.0" width="11.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="867.7" y="670.0"></text>
</g>
<g>
<title>sock_recvmsg (66 samples, 0.91%)</title><rect x="865.4" y="643.0" width="10.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="868.4" y="654.0"></text>
</g>
<g>
<title>inet_recvmsg (59 samples, 0.81%)</title><rect x="865.7" y="627.0" width="9.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="868.7" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (59 samples, 0.81%)</title><rect x="865.7" y="611.0" width="9.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="868.7" y="622.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.08%)</title><rect x="866.8" y="595.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="869.8" y="606.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="866.8" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="869.8" y="590.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="866.8" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="869.8" y="574.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="866.8" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="869.8" y="558.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.05%)</title><rect x="867.2" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="870.2" y="590.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="867.2" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="870.2" y="574.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="867.5" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="870.5" y="574.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.14%)</title><rect x="868.0" y="595.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="871.0" y="606.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="868.3" y="579.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="871.3" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="868.4" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="871.4" y="574.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.07%)</title><rect x="868.8" y="579.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="871.8" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.07%)</title><rect x="868.8" y="563.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="871.8" y="574.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (34 samples, 0.47%)</title><rect x="869.6" y="595.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="872.6" y="606.0"></text>
</g>
<g>
<title>tcp_send_ack (31 samples, 0.43%)</title><rect x="870.1" y="579.0" width="5.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="873.1" y="590.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.39 (31 samples, 0.43%)</title><rect x="870.1" y="563.0" width="5.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="873.1" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.07%)</title><rect x="870.2" y="547.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="873.2" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.05%)</title><rect x="870.4" y="531.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="873.4" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (24 samples, 0.33%)</title><rect x="871.0" y="547.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="874.0" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (23 samples, 0.32%)</title><rect x="871.2" y="531.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="874.2" y="542.0"></text>
</g>
<g>
<title>ip_local_out (23 samples, 0.32%)</title><rect x="871.2" y="515.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="874.2" y="526.0"></text>
</g>
<g>
<title>ip_output (23 samples, 0.32%)</title><rect x="871.2" y="499.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="874.2" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (23 samples, 0.32%)</title><rect x="871.2" y="483.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="874.2" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (23 samples, 0.32%)</title><rect x="871.2" y="467.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="874.2" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (20 samples, 0.27%)</title><rect x="871.4" y="451.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="874.4" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.17 (20 samples, 0.27%)</title><rect x="871.4" y="435.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="874.4" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (20 samples, 0.27%)</title><rect x="871.4" y="419.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="874.4" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (20 samples, 0.27%)</title><rect x="871.4" y="403.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="874.4" y="414.0"></text>
</g>
<g>
<title>net_rx_action (19 samples, 0.26%)</title><rect x="871.5" y="387.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="874.5" y="398.0"></text>
</g>
<g>
<title>process_backlog (19 samples, 0.26%)</title><rect x="871.5" y="371.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="874.5" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (18 samples, 0.25%)</title><rect x="871.7" y="355.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="874.7" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (18 samples, 0.25%)</title><rect x="871.7" y="339.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="874.7" y="350.0"></text>
</g>
<g>
<title>ip_rcv (17 samples, 0.23%)</title><rect x="871.8" y="323.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="874.8" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (17 samples, 0.23%)</title><rect x="871.8" y="307.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="874.8" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (17 samples, 0.23%)</title><rect x="871.8" y="291.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="874.8" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (17 samples, 0.23%)</title><rect x="871.8" y="275.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="874.8" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (16 samples, 0.22%)</title><rect x="872.0" y="259.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="875.0" y="270.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (13 samples, 0.18%)</title><rect x="872.2" y="243.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="875.2" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 0.18%)</title><rect x="872.2" y="227.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="875.2" y="238.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="872.2" y="211.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="875.2" y="222.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="872.2" y="195.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="875.2" y="206.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="872.2" y="179.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="875.2" y="190.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.12%)</title><rect x="872.7" y="211.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="875.7" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.08%)</title><rect x="873.1" y="195.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="876.1" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="873.6" y="179.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="876.6" y="190.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="873.6" y="163.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="876.6" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="874.6" y="451.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="877.6" y="462.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.07%)</title><rect x="875.2" y="627.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="878.2" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.04%)</title><rect x="875.6" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="878.6" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.04%)</title><rect x="875.6" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="878.6" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (7 samples, 0.10%)</title><rect x="876.4" y="691.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="879.4" y="702.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.07%)</title><rect x="876.7" y="675.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="879.7" y="686.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.04%)</title><rect x="876.9" y="659.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="879.9" y="670.0"></text>
</g>
<g>
<title>__libc_read (2 samples, 0.03%)</title><rect x="877.7" y="787.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="880.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (19 samples, 0.26%)</title><rect x="878.2" y="835.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="881.2" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.10%)</title><rect x="878.3" y="819.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="881.3" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.10%)</title><rect x="878.3" y="803.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="881.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (11 samples, 0.15%)</title><rect x="879.5" y="819.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="882.5" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (2 samples, 0.03%)</title><rect x="880.6" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (2 samples, 0.03%)</title><rect x="880.9" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$255/1780070168.accept (12 samples, 0.16%)</title><rect x="881.4" y="1091.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (12 samples, 0.16%)</title><rect x="881.4" y="1075.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="884.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$251/1138323775.run (12 samples, 0.16%)</title><rect x="881.4" y="1059.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (12 samples, 0.16%)</title><rect x="881.4" y="1043.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (12 samples, 0.16%)</title><rect x="881.4" y="1027.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="884.4" y="1038.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (4 samples, 0.05%)</title><rect x="882.0" y="1011.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="885.0" y="1022.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (4 samples, 0.05%)</title><rect x="882.0" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="885.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.03%)</title><rect x="882.7" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="885.7" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.03%)</title><rect x="882.7" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.7" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.03%)</title><rect x="883.0" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="886.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.03%)</title><rect x="883.0" y="995.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="886.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="883.0" y="979.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="886.0" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="883.0" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.0" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.03%)</title><rect x="883.5" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="886.5" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.03%)</title><rect x="883.5" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="886.5" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (34 samples, 0.47%)</title><rect x="884.0" y="1107.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="887.0" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (34 samples, 0.47%)</title><rect x="884.0" y="1091.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.0" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (30 samples, 0.41%)</title><rect x="884.3" y="1075.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.3" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (30 samples, 0.41%)</title><rect x="884.3" y="1059.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.3" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (30 samples, 0.41%)</title><rect x="884.3" y="1043.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="887.3" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (26 samples, 0.36%)</title><rect x="884.6" y="1027.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.6" y="1038.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.08%)</title><rect x="885.1" y="1011.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="888.1" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (7 samples, 0.10%)</title><rect x="886.1" y="1011.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.1" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.04%)</title><rect x="886.7" y="995.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$249/1180307251.test (2 samples, 0.03%)</title><rect x="886.9" y="979.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.9" y="990.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (7 samples, 0.10%)</title><rect x="887.2" y="1011.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.2" y="1022.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="887.4" y="995.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="890.4" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.estimateSize (2 samples, 0.03%)</title><rect x="888.0" y="995.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="891.0" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.04%)</title><rect x="888.4" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="891.4" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (2 samples, 0.03%)</title><rect x="888.5" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="891.5" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.03%)</title><rect x="888.8" y="1027.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="891.8" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.getOpFlags (2 samples, 0.03%)</title><rect x="889.2" y="1075.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (186 samples, 2.55%)</title><rect x="889.5" y="1107.0" width="30.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.5" y="1118.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$188/1837169569.run (99 samples, 1.36%)</title><rect x="889.5" y="1091.0" width="16.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (99 samples, 1.36%)</title><rect x="889.5" y="1075.0" width="16.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (99 samples, 1.36%)</title><rect x="889.5" y="1059.0" width="16.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (99 samples, 1.36%)</title><rect x="889.5" y="1043.0" width="16.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (92 samples, 1.26%)</title><rect x="890.6" y="1027.0" width="14.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="893.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (90 samples, 1.23%)</title><rect x="891.0" y="1011.0" width="14.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$183/247528643.run (83 samples, 1.14%)</title><rect x="891.8" y="995.0" width="13.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (83 samples, 1.14%)</title><rect x="891.8" y="979.0" width="13.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (73 samples, 1.00%)</title><rect x="891.9" y="963.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (2 samples, 0.03%)</title><rect x="892.1" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="895.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (2 samples, 0.03%)</title><rect x="892.1" y="931.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="895.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (70 samples, 0.96%)</title><rect x="892.4" y="947.0" width="11.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="895.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (9 samples, 0.12%)</title><rect x="892.7" y="931.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (9 samples, 0.12%)</title><rect x="892.7" y="915.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="895.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (9 samples, 0.12%)</title><rect x="892.7" y="899.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="895.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (9 samples, 0.12%)</title><rect x="892.7" y="883.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (9 samples, 0.12%)</title><rect x="892.7" y="867.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="895.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (9 samples, 0.12%)</title><rect x="892.7" y="851.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (9 samples, 0.12%)</title><rect x="892.7" y="835.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="895.7" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (5 samples, 0.07%)</title><rect x="892.7" y="819.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.7" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (4 samples, 0.05%)</title><rect x="892.9" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="895.9" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="893.1" y="787.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="896.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.04%)</title><rect x="893.5" y="819.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="896.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.04%)</title><rect x="893.5" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="896.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="893.7" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.7" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.03%)</title><rect x="893.7" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (59 samples, 0.81%)</title><rect x="894.2" y="931.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (53 samples, 0.73%)</title><rect x="895.2" y="915.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (52 samples, 0.71%)</title><rect x="895.3" y="899.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (51 samples, 0.70%)</title><rect x="895.3" y="883.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (51 samples, 0.70%)</title><rect x="895.3" y="867.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (51 samples, 0.70%)</title><rect x="895.3" y="851.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (43 samples, 0.59%)</title><rect x="895.5" y="835.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (42 samples, 0.58%)</title><rect x="895.6" y="819.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (42 samples, 0.58%)</title><rect x="895.6" y="803.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (42 samples, 0.58%)</title><rect x="895.6" y="787.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (39 samples, 0.54%)</title><rect x="896.1" y="771.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (39 samples, 0.54%)</title><rect x="896.1" y="755.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.1" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.05%)</title><rect x="896.1" y="739.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="899.1" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="896.3" y="723.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="899.3" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (35 samples, 0.48%)</title><rect x="896.8" y="739.0" width="5.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="899.8" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.37%)</title><rect x="898.1" y="723.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="901.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.37%)</title><rect x="898.1" y="707.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="901.1" y="718.0"></text>
</g>
<g>
<title>sys_futex (25 samples, 0.34%)</title><rect x="898.4" y="691.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="901.4" y="702.0"></text>
</g>
<g>
<title>do_futex (25 samples, 0.34%)</title><rect x="898.4" y="675.0" width="4.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="901.4" y="686.0"></text>
</g>
<g>
<title>futex_wake (25 samples, 0.34%)</title><rect x="898.4" y="659.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="901.4" y="670.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.27%)</title><rect x="899.2" y="643.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="902.2" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.27%)</title><rect x="899.2" y="627.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="902.2" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.26%)</title><rect x="899.4" y="611.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="902.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.08%)</title><rect x="902.6" y="835.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.08%)</title><rect x="902.6" y="819.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.08%)</title><rect x="902.6" y="803.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.08%)</title><rect x="902.6" y="787.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (7 samples, 0.10%)</title><rect x="904.1" y="963.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.1" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (7 samples, 0.10%)</title><rect x="904.1" y="947.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.1" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.08%)</title><rect x="904.2" y="931.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="907.2" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.07%)</title><rect x="904.4" y="915.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.07%)</title><rect x="904.4" y="899.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.4" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (5 samples, 0.07%)</title><rect x="904.4" y="883.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (5 samples, 0.07%)</title><rect x="904.4" y="867.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="904.4" y="851.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="907.4" y="862.0"></text>
</g>
<g>
<title>__libc_read (4 samples, 0.05%)</title><rect x="904.4" y="835.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="907.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="904.7" y="819.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="907.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="904.7" y="803.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="907.7" y="814.0"></text>
</g>
<g>
<title>sys_read (2 samples, 0.03%)</title><rect x="904.7" y="787.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="907.7" y="798.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.03%)</title><rect x="904.7" y="771.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="907.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.03%)</title><rect x="905.2" y="995.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$195/1822471645.run (87 samples, 1.19%)</title><rect x="905.5" y="1091.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (87 samples, 1.19%)</title><rect x="905.5" y="1075.0" width="14.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (79 samples, 1.08%)</title><rect x="906.7" y="1059.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (75 samples, 1.03%)</title><rect x="907.3" y="1043.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="910.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (75 samples, 1.03%)</title><rect x="907.3" y="1027.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (67 samples, 0.92%)</title><rect x="907.3" y="1011.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="910.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (67 samples, 0.92%)</title><rect x="907.3" y="995.0" width="10.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (67 samples, 0.92%)</title><rect x="907.3" y="979.0" width="10.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (67 samples, 0.92%)</title><rect x="907.3" y="963.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (64 samples, 0.88%)</title><rect x="907.8" y="947.0" width="10.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (64 samples, 0.88%)</title><rect x="907.8" y="931.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.8" y="942.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.14%)</title><rect x="907.8" y="915.0" width="1.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="910.8" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="908.6" y="899.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="911.6" y="910.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="909.1" y="899.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="912.1" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (53 samples, 0.73%)</title><rect x="909.6" y="915.0" width="8.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="912.6" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.62%)</title><rect x="910.9" y="899.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="913.9" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.62%)</title><rect x="910.9" y="883.0" width="7.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="913.9" y="894.0"></text>
</g>
<g>
<title>sys_futex (43 samples, 0.59%)</title><rect x="911.2" y="867.0" width="7.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="914.2" y="878.0"></text>
</g>
<g>
<title>do_futex (41 samples, 0.56%)</title><rect x="911.2" y="851.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="914.2" y="862.0"></text>
</g>
<g>
<title>futex_wake (39 samples, 0.54%)</title><rect x="911.4" y="835.0" width="6.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="914.4" y="846.0"></text>
</g>
<g>
<title>wake_up_q (34 samples, 0.47%)</title><rect x="912.2" y="819.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="915.2" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (34 samples, 0.47%)</title><rect x="912.2" y="803.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="915.2" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (34 samples, 0.47%)</title><rect x="912.2" y="787.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="915.2" y="798.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="917.8" y="851.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="920.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.10%)</title><rect x="918.3" y="1011.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="921.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.10%)</title><rect x="918.3" y="995.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.10%)</title><rect x="918.3" y="979.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="921.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.10%)</title><rect x="918.3" y="963.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (21 samples, 0.29%)</title><rect x="919.6" y="1107.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.6" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.now (6 samples, 0.08%)</title><rect x="919.6" y="1091.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="922.6" y="1102.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (6 samples, 0.08%)</title><rect x="919.6" y="1075.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="922.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.04%)</title><rect x="920.1" y="1059.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="923.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (15 samples, 0.21%)</title><rect x="920.6" y="1091.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="923.6" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (10 samples, 0.14%)</title><rect x="921.1" y="1075.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="924.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (2 samples, 0.03%)</title><rect x="922.7" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (3 samples, 0.04%)</title><rect x="923.0" y="1107.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="926.0" y="1118.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.04%)</title><rect x="923.0" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="926.0" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.04%)</title><rect x="923.0" y="1075.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="926.0" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (3 samples, 0.04%)</title><rect x="923.0" y="1059.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="926.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (16 samples, 0.22%)</title><rect x="923.5" y="1107.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.5" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (16 samples, 0.22%)</title><rect x="923.5" y="1091.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="926.5" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (16 samples, 0.22%)</title><rect x="923.5" y="1075.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="926.5" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.04%)</title><rect x="925.6" y="1059.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="928.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (37 samples, 0.51%)</title><rect x="926.1" y="1107.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="929.1" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.now (16 samples, 0.22%)</title><rect x="927.5" y="1091.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="930.5" y="1102.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (16 samples, 0.22%)</title><rect x="927.5" y="1075.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="930.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (12 samples, 0.16%)</title><rect x="928.2" y="1059.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="931.2" y="1070.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.07%)</title><rect x="928.7" y="1043.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="931.7" y="1054.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="928.8" y="1027.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="931.8" y="1038.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.05%)</title><rect x="929.5" y="1043.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="932.5" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (4 samples, 0.05%)</title><rect x="930.1" y="1091.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.1" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (4 samples, 0.05%)</title><rect x="930.1" y="1075.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="933.1" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (4 samples, 0.05%)</title><rect x="930.1" y="1059.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.1" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (8 samples, 0.11%)</title><rect x="930.8" y="1091.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.8" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (8 samples, 0.11%)</title><rect x="930.8" y="1075.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.8" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (8 samples, 0.11%)</title><rect x="930.8" y="1059.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.8" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (8 samples, 0.11%)</title><rect x="930.8" y="1043.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="933.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2 samples, 0.03%)</title><rect x="932.1" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="935.1" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (385 samples, 5.28%)</title><rect x="932.4" y="1107.0" width="62.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.4" y="1118.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (383 samples, 5.26%)</title><rect x="932.7" y="1091.0" width="62.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="935.7" y="1102.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (377 samples, 5.17%)</title><rect x="933.4" y="1075.0" width="61.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.4" y="1086.0">sun/ni..</text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.03%)</title><rect x="934.2" y="1059.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="937.2" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (203 samples, 2.79%)</title><rect x="934.5" y="1059.0" width="32.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="937.5" y="1070.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (3 samples, 0.04%)</title><rect x="935.2" y="1043.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="938.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (193 samples, 2.65%)</title><rect x="935.6" y="1043.0" width="31.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="938.6" y="1054.0">[u..</text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="935.6" y="1027.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="938.6" y="1038.0"></text>
</g>
<g>
<title>epoll_wait (191 samples, 2.62%)</title><rect x="936.0" y="1027.0" width="30.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="939.0" y="1038.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (142 samples, 1.95%)</title><rect x="943.9" y="1011.0" width="23.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="946.9" y="1022.0">e..</text>
</g>
<g>
<title>do_syscall_64 (141 samples, 1.93%)</title><rect x="943.9" y="995.0" width="22.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="946.9" y="1006.0">d..</text>
</g>
<g>
<title>sys_epoll_wait (132 samples, 1.81%)</title><rect x="945.4" y="979.0" width="21.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="948.4" y="990.0">s..</text>
</g>
<g>
<title>__fdget (6 samples, 0.08%)</title><rect x="945.7" y="963.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="948.7" y="974.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.08%)</title><rect x="945.7" y="947.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="948.7" y="958.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="945.7" y="931.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="948.7" y="942.0"></text>
</g>
<g>
<title>ep_poll (117 samples, 1.61%)</title><rect x="947.0" y="963.0" width="18.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="950.0" y="974.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.04%)</title><rect x="947.9" y="947.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="950.9" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.14%)</title><rect x="948.4" y="947.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="951.4" y="958.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (52 samples, 0.71%)</title><rect x="950.0" y="947.0" width="8.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="953.0" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.18%)</title><rect x="950.9" y="931.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="953.9" y="942.0"></text>
</g>
<g>
<title>ep_send_events_proc (31 samples, 0.43%)</title><rect x="953.1" y="931.0" width="5.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="956.1" y="942.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (16 samples, 0.22%)</title><rect x="954.4" y="915.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="957.4" y="926.0"></text>
</g>
<g>
<title>pipe_poll (8 samples, 0.11%)</title><rect x="955.1" y="899.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="958.1" y="910.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.05%)</title><rect x="956.4" y="899.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="959.4" y="910.0"></text>
</g>
<g>
<title>pipe_poll (6 samples, 0.08%)</title><rect x="957.0" y="915.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="960.0" y="926.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="958.1" y="931.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="961.1" y="942.0"></text>
</g>
<g>
<title>ktime_get_ts64 (4 samples, 0.05%)</title><rect x="958.6" y="947.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="961.6" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (31 samples, 0.43%)</title><rect x="959.4" y="947.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="962.4" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (31 samples, 0.43%)</title><rect x="959.4" y="931.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="962.4" y="942.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (13 samples, 0.18%)</title><rect x="959.8" y="915.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="962.8" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.18%)</title><rect x="959.8" y="899.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="962.8" y="910.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (8 samples, 0.11%)</title><rect x="961.9" y="915.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="964.9" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.10%)</title><rect x="962.0" y="899.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="965.0" y="910.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.11%)</title><rect x="963.2" y="915.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="966.2" y="926.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.11%)</title><rect x="963.2" y="899.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="966.2" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.10%)</title><rect x="963.3" y="883.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="966.3" y="894.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="964.1" y="867.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="967.1" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="964.1" y="851.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="967.1" y="862.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="964.1" y="835.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="967.1" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="964.1" y="819.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="967.1" y="830.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.03%)</title><rect x="964.1" y="803.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="967.1" y="814.0"></text>
</g>
<g>
<title>rebalance_domains (2 samples, 0.03%)</title><rect x="964.1" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="967.1" y="798.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.03%)</title><rect x="964.1" y="771.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="967.1" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="964.1" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="967.1" y="766.0"></text>
</g>
<g>
<title>select_estimate_accuracy (7 samples, 0.10%)</title><rect x="964.6" y="947.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="967.6" y="958.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.03%)</title><rect x="965.4" y="931.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.4" y="942.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="965.4" y="915.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="968.4" y="926.0"></text>
</g>
<g>
<title>fput (4 samples, 0.05%)</title><rect x="965.9" y="963.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="968.9" y="974.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.04%)</title><rect x="966.9" y="1043.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="969.9" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (145 samples, 1.99%)</title><rect x="967.4" y="1059.0" width="23.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="970.4" y="1070.0">s..</text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.15%)</title><rect x="967.9" y="1043.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.9" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (10 samples, 0.14%)</title><rect x="967.9" y="1027.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.9" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="969.2" y="1011.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="972.2" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (122 samples, 1.67%)</title><rect x="970.0" y="1043.0" width="19.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.0" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (120 samples, 1.65%)</title><rect x="970.3" y="1027.0" width="19.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.3" y="1038.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (6 samples, 0.08%)</title><rect x="970.6" y="1011.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="973.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.37%)</title><rect x="971.6" y="1011.0" width="16.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="974.6" y="1022.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (3 samples, 0.04%)</title><rect x="971.6" y="995.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="974.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="971.6" y="979.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="974.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="971.6" y="963.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="974.6" y="974.0"></text>
</g>
<g>
<title>__libc_read (3 samples, 0.04%)</title><rect x="971.6" y="947.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="974.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.47%)</title><rect x="972.1" y="995.0" width="5.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="975.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.21%)</title><rect x="972.1" y="979.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="975.1" y="990.0"></text>
</g>
<g>
<title>__libc_read (14 samples, 0.19%)</title><rect x="972.2" y="963.0" width="2.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="975.2" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.12%)</title><rect x="973.0" y="947.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="976.0" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.12%)</title><rect x="973.0" y="931.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="976.0" y="942.0"></text>
</g>
<g>
<title>sys_read (8 samples, 0.11%)</title><rect x="973.2" y="915.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="976.2" y="926.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.10%)</title><rect x="973.4" y="899.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="976.4" y="910.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.08%)</title><rect x="973.4" y="883.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="976.4" y="894.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.08%)</title><rect x="973.4" y="867.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="976.4" y="878.0"></text>
</g>
<g>
<title>pipe_read (4 samples, 0.05%)</title><rect x="973.5" y="851.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="976.5" y="862.0"></text>
</g>
<g>
<title>__libc_read (19 samples, 0.26%)</title><rect x="974.5" y="979.0" width="3.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="977.5" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.18%)</title><rect x="975.5" y="963.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="978.5" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.18%)</title><rect x="975.5" y="947.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="978.5" y="958.0"></text>
</g>
<g>
<title>sys_read (10 samples, 0.14%)</title><rect x="976.0" y="931.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="979.0" y="942.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.11%)</title><rect x="976.3" y="915.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="979.3" y="926.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.08%)</title><rect x="976.4" y="899.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="979.4" y="910.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.08%)</title><rect x="976.4" y="883.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="979.4" y="894.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (2 samples, 0.03%)</title><rect x="976.6" y="867.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="979.6" y="878.0"></text>
</g>
<g>
<title>pipe_read (3 samples, 0.04%)</title><rect x="976.9" y="867.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="979.9" y="878.0"></text>
</g>
<g>
<title>__atime_needs_update (2 samples, 0.03%)</title><rect x="976.9" y="851.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="979.9" y="862.0"></text>
</g>
<g>
<title>__libc_read (54 samples, 0.74%)</title><rect x="977.6" y="995.0" width="8.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="980.6" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.48%)</title><rect x="980.7" y="979.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="983.7" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.48%)</title><rect x="980.7" y="963.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="983.7" y="974.0"></text>
</g>
<g>
<title>sys_read (21 samples, 0.29%)</title><rect x="982.9" y="947.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="985.9" y="958.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="982.9" y="931.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="985.9" y="942.0"></text>
</g>
<g>
<title>vfs_read (18 samples, 0.25%)</title><rect x="983.4" y="931.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="986.4" y="942.0"></text>
</g>
<g>
<title>__vfs_read (16 samples, 0.22%)</title><rect x="983.4" y="915.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="986.4" y="926.0"></text>
</g>
<g>
<title>new_sync_read (16 samples, 0.22%)</title><rect x="983.4" y="899.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="986.4" y="910.0"></text>
</g>
<g>
<title>pipe_read (12 samples, 0.16%)</title><rect x="984.1" y="883.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="987.1" y="894.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.07%)</title><rect x="984.2" y="867.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="987.2" y="878.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.07%)</title><rect x="984.2" y="851.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="987.2" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.05%)</title><rect x="984.4" y="835.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="987.4" y="846.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="986.0" y="915.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="989.0" y="926.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="986.0" y="899.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="989.0" y="910.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (8 samples, 0.11%)</title><rect x="986.5" y="995.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="989.5" y="1006.0"></text>
</g>
<g>
<title>__libc_read (8 samples, 0.11%)</title><rect x="986.5" y="979.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="989.5" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.10%)</title><rect x="986.6" y="963.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="989.6" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.10%)</title><rect x="986.6" y="947.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="989.6" y="958.0"></text>
</g>
<g>
<title>sys_read (6 samples, 0.08%)</title><rect x="986.8" y="931.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="989.8" y="942.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.08%)</title><rect x="986.8" y="915.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="989.8" y="926.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.05%)</title><rect x="987.0" y="899.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="990.0" y="910.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.04%)</title><rect x="987.1" y="883.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="990.1" y="894.0"></text>
</g>
<g>
<title>__libc_read (11 samples, 0.15%)</title><rect x="987.8" y="1011.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="990.8" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="988.9" y="995.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="991.9" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="988.9" y="979.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="991.9" y="990.0"></text>
</g>
<g>
<title>sys_read (4 samples, 0.05%)</title><rect x="988.9" y="963.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="991.9" y="974.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.05%)</title><rect x="988.9" y="947.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="991.9" y="958.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.04%)</title><rect x="988.9" y="931.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="991.9" y="942.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.04%)</title><rect x="988.9" y="915.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="991.9" y="926.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.03%)</title><rect x="989.1" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="992.1" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (7 samples, 0.10%)</title><rect x="989.7" y="1043.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="992.7" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.05%)</title><rect x="989.7" y="1027.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="992.7" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.05%)</title><rect x="989.7" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="992.7" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.05%)</title><rect x="989.7" y="995.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.7" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (2 samples, 0.03%)</title><rect x="990.4" y="1027.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="993.4" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (2 samples, 0.03%)</title><rect x="990.4" y="1011.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="993.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="990.4" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="993.4" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (8 samples, 0.11%)</title><rect x="990.9" y="1059.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="993.9" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (2 samples, 0.03%)</title><rect x="991.8" y="1043.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="994.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (9 samples, 0.12%)</title><rect x="992.1" y="1059.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="995.1" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (9 samples, 0.12%)</title><rect x="992.1" y="1043.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="995.1" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (9 samples, 0.12%)</title><rect x="992.1" y="1027.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="995.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (8 samples, 0.11%)</title><rect x="992.1" y="1011.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="995.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (8 samples, 0.11%)</title><rect x="992.1" y="995.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="995.1" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.03%)</title><rect x="993.6" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="996.6" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.03%)</title><rect x="993.6" y="1043.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.6" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="993.6" y="1027.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="996.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="993.6" y="1011.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="993.6" y="995.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="996.6" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (3 samples, 0.04%)</title><rect x="993.9" y="1059.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="996.9" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.04%)</title><rect x="993.9" y="1043.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="996.9" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.04%)</title><rect x="993.9" y="1027.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="996.9" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="993.9" y="1011.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.9" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="993.9" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="996.9" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.03%)</title><rect x="994.4" y="1075.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="997.4" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (38 samples, 0.52%)</title><rect x="994.7" y="1107.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.7" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (35 samples, 0.48%)</title><rect x="995.2" y="1091.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="998.2" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (33 samples, 0.45%)</title><rect x="995.5" y="1075.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.5" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (24 samples, 0.33%)</title><rect x="995.5" y="1059.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.32%)</title><rect x="995.7" y="1043.0" width="3.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="998.7" y="1054.0"></text>
</g>
<g>
<title>epoll_wait (21 samples, 0.29%)</title><rect x="996.0" y="1027.0" width="3.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="999.0" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.22%)</title><rect x="996.8" y="1011.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="999.8" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.22%)</title><rect x="996.8" y="995.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="999.8" y="1006.0"></text>
</g>
<g>
<title>sys_epoll_wait (13 samples, 0.18%)</title><rect x="997.3" y="979.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1000.3" y="990.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="997.3" y="963.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1000.3" y="974.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="997.3" y="947.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1000.3" y="958.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="997.3" y="931.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1000.3" y="942.0"></text>
</g>
<g>
<title>ep_poll (10 samples, 0.14%)</title><rect x="997.7" y="963.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1000.7" y="974.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (8 samples, 0.11%)</title><rect x="997.8" y="947.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1000.8" y="958.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.07%)</title><rect x="998.3" y="931.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1001.3" y="942.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (4 samples, 0.05%)</title><rect x="998.5" y="915.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1001.5" y="926.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.04%)</title><rect x="998.5" y="899.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1001.5" y="910.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.03%)</title><rect x="998.5" y="883.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1001.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.04%)</title><rect x="999.4" y="1059.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.4" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.03%)</title><rect x="999.6" y="1043.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1002.6" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (3 samples, 0.04%)</title><rect x="999.9" y="1059.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1002.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.03%)</title><rect x="1000.4" y="1059.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1003.4" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.03%)</title><rect x="1000.4" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1003.4" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (6 samples, 0.08%)</title><rect x="1000.9" y="1107.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.9" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (6 samples, 0.08%)</title><rect x="1000.9" y="1091.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.9" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (6 samples, 0.08%)</title><rect x="1000.9" y="1075.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,053 samples, 14.45%)</title><rect x="1002.0" y="1123.0" width="170.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.0" y="1134.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.03%)</title><rect x="1002.5" y="1107.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1005.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.08%)</title><rect x="1003.0" y="1107.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.08%)</title><rect x="1003.0" y="1091.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (139 samples, 1.91%)</title><rect x="1004.0" y="1107.0" width="22.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1007.0" y="1118.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1004.3" y="1091.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1007.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.03%)</title><rect x="1004.5" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1007.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (134 samples, 1.84%)</title><rect x="1004.8" y="1091.0" width="21.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1007.8" y="1102.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.03%)</title><rect x="1005.6" y="1075.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1008.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (115 samples, 1.58%)</title><rect x="1005.9" y="1075.0" width="18.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1008.9" y="1086.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.05%)</title><rect x="1005.9" y="1059.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1008.9" y="1070.0"></text>
</g>
<g>
<title>epoll_wait (110 samples, 1.51%)</title><rect x="1006.7" y="1059.0" width="17.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1009.7" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (96 samples, 1.32%)</title><rect x="1009.0" y="1043.0" width="15.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1012.0" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (96 samples, 1.32%)</title><rect x="1009.0" y="1027.0" width="15.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1012.0" y="1038.0"></text>
</g>
<g>
<title>sys_epoll_wait (92 samples, 1.26%)</title><rect x="1009.6" y="1011.0" width="14.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1012.6" y="1022.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="1009.6" y="995.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1012.6" y="1006.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="1009.6" y="979.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1012.6" y="990.0"></text>
</g>
<g>
<title>ep_poll (83 samples, 1.14%)</title><rect x="1010.6" y="995.0" width="13.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1013.6" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (4 samples, 0.05%)</title><rect x="1011.4" y="979.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1014.4" y="990.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.08%)</title><rect x="1012.1" y="979.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1015.1" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (41 samples, 0.56%)</title><rect x="1013.0" y="979.0" width="6.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1016.0" y="990.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.10%)</title><rect x="1013.2" y="963.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1016.2" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (29 samples, 0.40%)</title><rect x="1014.3" y="963.0" width="4.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1017.3" y="974.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (21 samples, 0.29%)</title><rect x="1015.3" y="947.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1018.3" y="958.0"></text>
</g>
<g>
<title>sock_poll (16 samples, 0.22%)</title><rect x="1015.9" y="931.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1018.9" y="942.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.04%)</title><rect x="1017.2" y="915.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1020.2" y="926.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (5 samples, 0.07%)</title><rect x="1017.7" y="915.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1020.7" y="926.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="1018.7" y="947.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1021.7" y="958.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.04%)</title><rect x="1019.0" y="963.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1022.0" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.04%)</title><rect x="1019.7" y="979.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1022.7" y="990.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="1020.2" y="979.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1023.2" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (20 samples, 0.27%)</title><rect x="1020.6" y="979.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1023.6" y="990.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="1020.6" y="963.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1023.6" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (18 samples, 0.25%)</title><rect x="1021.0" y="963.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1024.0" y="974.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.16%)</title><rect x="1021.9" y="947.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1024.9" y="958.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.12%)</title><rect x="1022.4" y="931.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1025.4" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.10%)</title><rect x="1022.7" y="915.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1025.7" y="926.0"></text>
</g>
<g>
<title>fput (3 samples, 0.04%)</title><rect x="1024.0" y="995.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1027.0" y="1006.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="1024.5" y="1075.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1027.5" y="1086.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.07%)</title><rect x="1024.9" y="1075.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1027.9" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.03%)</title><rect x="1025.7" y="1075.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1028.7" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="1026.0" y="1075.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1029.0" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="1026.0" y="1059.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1029.0" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="1026.1" y="1043.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1029.1" y="1054.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="1026.1" y="1027.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1029.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (901 samples, 12.36%)</title><rect x="1026.5" y="1107.0" width="145.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1029.5" y="1118.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (898 samples, 12.32%)</title><rect x="1026.5" y="1091.0" width="145.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.5" y="1102.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (2 samples, 0.03%)</title><rect x="1026.6" y="1075.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1029.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (2 samples, 0.03%)</title><rect x="1026.6" y="1059.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1029.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (2 samples, 0.03%)</title><rect x="1026.6" y="1043.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1029.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (2 samples, 0.03%)</title><rect x="1026.6" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1029.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1026.6" y="1011.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1029.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1026.6" y="995.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1029.6" y="1006.0"></text>
</g>
<g>
<title>__GI___shutdown (2 samples, 0.03%)</title><rect x="1026.6" y="979.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1029.6" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1026.6" y="963.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1029.6" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1026.6" y="947.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1029.6" y="958.0"></text>
</g>
<g>
<title>sys_shutdown (2 samples, 0.03%)</title><rect x="1026.6" y="931.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1029.6" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (744 samples, 10.21%)</title><rect x="1027.0" y="1075.0" width="120.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.0" y="1086.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (648 samples, 8.89%)</title><rect x="1028.7" y="1059.0" width="105.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.7" y="1070.0">one/nio/http..</text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.03%)</title><rect x="1029.9" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1032.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (639 samples, 8.77%)</title><rect x="1030.2" y="1043.0" width="103.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.2" y="1054.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (616 samples, 8.45%)</title><rect x="1030.2" y="1027.0" width="99.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1033.2" y="1038.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (24 samples, 0.33%)</title><rect x="1030.4" y="1011.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="1032.6" y="995.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="1032.9" y="979.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.9" y="990.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="1033.3" y="995.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1036.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="1033.8" y="995.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1036.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1033.8" y="979.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1036.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1033.8" y="963.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1036.8" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="1033.9" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1036.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ShardedService.entity (591 samples, 8.11%)</title><rect x="1034.2" y="1011.0" width="95.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1037.2" y="1022.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.executeGet (567 samples, 7.78%)</title><rect x="1035.4" y="995.0" width="91.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1038.4" y="1006.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.collect (40 samples, 0.55%)</title><rect x="1035.5" y="979.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1038.5" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (36 samples, 0.49%)</title><rect x="1035.7" y="963.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1038.7" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$152/989212780.accept (27 samples, 0.37%)</title><rect x="1037.2" y="947.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1040.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.lambda$collect$13 (27 samples, 0.37%)</title><rect x="1037.2" y="931.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1040.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (7 samples, 0.10%)</title><rect x="1037.2" y="915.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1040.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (7 samples, 0.10%)</title><rect x="1037.2" y="899.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (20 samples, 0.27%)</title><rect x="1038.3" y="915.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (20 samples, 0.27%)</title><rect x="1038.3" y="899.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1041.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (17 samples, 0.23%)</title><rect x="1038.8" y="883.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (17 samples, 0.23%)</title><rect x="1038.8" y="867.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1041.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (17 samples, 0.23%)</title><rect x="1038.8" y="851.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (17 samples, 0.23%)</title><rect x="1038.8" y="835.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1041.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.22%)</title><rect x="1038.9" y="819.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1041.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.22%)</title><rect x="1038.9" y="803.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1041.9" y="814.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (16 samples, 0.22%)</title><rect x="1038.9" y="787.0" width="2.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1041.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.21%)</title><rect x="1039.1" y="771.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1042.1" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.21%)</title><rect x="1039.1" y="755.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1042.1" y="766.0"></text>
</g>
<g>
<title>sys_futex (14 samples, 0.19%)</title><rect x="1039.3" y="739.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1042.3" y="750.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.19%)</title><rect x="1039.3" y="723.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1042.3" y="734.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.19%)</title><rect x="1039.3" y="707.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1042.3" y="718.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.19%)</title><rect x="1039.3" y="691.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1042.3" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.19%)</title><rect x="1039.3" y="675.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1042.3" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.19%)</title><rect x="1039.3" y="659.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1042.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator$$Lambda$152/989212780.accept (3 samples, 0.04%)</title><rect x="1041.5" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.5" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.executeAsync (101 samples, 1.39%)</title><rect x="1042.0" y="979.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (101 samples, 1.39%)</title><rect x="1042.0" y="963.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1045.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (101 samples, 1.39%)</title><rect x="1042.0" y="947.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (97 samples, 1.33%)</title><rect x="1042.3" y="931.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.07%)</title><rect x="1042.8" y="915.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.07%)</title><rect x="1042.8" y="899.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1045.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.07%)</title><rect x="1042.8" y="883.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1045.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (89 samples, 1.22%)</title><rect x="1043.6" y="915.0" width="14.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1046.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (89 samples, 1.22%)</title><rect x="1043.6" y="899.0" width="14.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1046.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (89 samples, 1.22%)</title><rect x="1043.6" y="883.0" width="14.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1046.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (88 samples, 1.21%)</title><rect x="1043.8" y="867.0" width="14.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1046.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (88 samples, 1.21%)</title><rect x="1043.8" y="851.0" width="14.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1046.8" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.16%)</title><rect x="1044.1" y="835.0" width="2.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1047.1" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="1044.9" y="819.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1047.9" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="1045.3" y="819.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1048.3" y="830.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="1046.1" y="835.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1049.1" y="846.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (69 samples, 0.95%)</title><rect x="1046.9" y="835.0" width="11.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1049.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 0.74%)</title><rect x="1049.3" y="819.0" width="8.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1052.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 0.74%)</title><rect x="1049.3" y="803.0" width="8.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1052.3" y="814.0"></text>
</g>
<g>
<title>sys_futex (49 samples, 0.67%)</title><rect x="1050.1" y="787.0" width="7.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1053.1" y="798.0"></text>
</g>
<g>
<title>do_futex (48 samples, 0.66%)</title><rect x="1050.3" y="771.0" width="7.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1053.3" y="782.0"></text>
</g>
<g>
<title>futex_wake (46 samples, 0.63%)</title><rect x="1050.6" y="755.0" width="7.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1053.6" y="766.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.05%)</title><rect x="1051.4" y="739.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1054.4" y="750.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 0.51%)</title><rect x="1052.1" y="739.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1055.1" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 0.49%)</title><rect x="1052.2" y="723.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1055.2" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.49%)</title><rect x="1052.2" y="707.0" width="5.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1055.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="1058.0" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1061.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="1058.0" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.0" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/AsyncReplicator.replication (405 samples, 5.56%)</title><rect x="1058.4" y="979.0" width="65.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.4" y="990.0">ru/mail..</text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.08%)</title><rect x="1058.4" y="963.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1061.4" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.07%)</title><rect x="1058.5" y="947.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1061.5" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="1058.5" y="931.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.5" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="1058.5" y="915.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.5" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.05%)</title><rect x="1058.7" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1061.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="1058.9" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1061.9" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.03%)</title><rect x="1059.3" y="963.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1062.3" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.03%)</title><rect x="1059.3" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1062.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (43 samples, 0.59%)</title><rect x="1059.7" y="963.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1062.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (43 samples, 0.59%)</title><rect x="1059.7" y="947.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (41 samples, 0.56%)</title><rect x="1060.0" y="931.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1063.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (41 samples, 0.56%)</title><rect x="1060.0" y="915.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1063.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (40 samples, 0.55%)</title><rect x="1060.1" y="899.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (2 samples, 0.03%)</title><rect x="1060.5" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1063.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (36 samples, 0.49%)</title><rect x="1060.8" y="883.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1063.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 0.49%)</title><rect x="1060.8" y="867.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1063.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 0.49%)</title><rect x="1060.8" y="851.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1063.8" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.08%)</title><rect x="1061.0" y="835.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1064.0" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.04%)</title><rect x="1061.0" y="819.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1064.0" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="1061.6" y="819.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1064.6" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (28 samples, 0.38%)</title><rect x="1062.1" y="835.0" width="4.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1065.1" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.32%)</title><rect x="1062.9" y="819.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1065.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.32%)</title><rect x="1062.9" y="803.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1065.9" y="814.0"></text>
</g>
<g>
<title>sys_futex (22 samples, 0.30%)</title><rect x="1063.1" y="787.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1066.1" y="798.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.30%)</title><rect x="1063.1" y="771.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1066.1" y="782.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.30%)</title><rect x="1063.1" y="755.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1066.1" y="766.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.26%)</title><rect x="1063.5" y="739.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1066.5" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (18 samples, 0.25%)</title><rect x="1063.7" y="723.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1066.7" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.25%)</title><rect x="1063.7" y="707.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1066.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (5 samples, 0.07%)</title><rect x="1066.6" y="963.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1069.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.07%)</title><rect x="1066.6" y="947.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1069.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.03%)</title><rect x="1066.9" y="931.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1069.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/1123552469.apply (2 samples, 0.03%)</title><rect x="1066.9" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (2 samples, 0.03%)</title><rect x="1066.9" y="899.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1069.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2 samples, 0.03%)</title><rect x="1066.9" y="883.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1069.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2 samples, 0.03%)</title><rect x="1066.9" y="867.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2 samples, 0.03%)</title><rect x="1066.9" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1069.9" y="862.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (2 samples, 0.03%)</title><rect x="1066.9" y="835.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1069.9" y="846.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (2 samples, 0.03%)</title><rect x="1066.9" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.03%)</title><rect x="1066.9" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (231 samples, 3.17%)</title><rect x="1067.4" y="963.0" width="37.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1070.4" y="974.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (231 samples, 3.17%)</title><rect x="1067.4" y="947.0" width="37.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.4" y="958.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (231 samples, 3.17%)</title><rect x="1067.4" y="931.0" width="37.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.4" y="942.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (231 samples, 3.17%)</title><rect x="1067.4" y="915.0" width="37.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1070.4" y="926.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="1068.2" y="899.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="1068.4" y="883.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1071.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (123 samples, 1.69%)</title><rect x="1068.9" y="899.0" width="19.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.9" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (17 samples, 0.23%)</title><rect x="1069.2" y="883.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1072.2" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.05%)</title><rect x="1069.2" y="867.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.2" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.05%)</title><rect x="1069.2" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1072.2" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.05%)</title><rect x="1069.2" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1072.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (12 samples, 0.16%)</title><rect x="1070.0" y="867.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1073.0" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.14%)</title><rect x="1070.2" y="851.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1073.2" y="862.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (10 samples, 0.14%)</title><rect x="1070.2" y="835.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1073.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.07%)</title><rect x="1071.0" y="819.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1074.0" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.03%)</title><rect x="1071.5" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1074.5" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (19 samples, 0.26%)</title><rect x="1072.0" y="883.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.0" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (19 samples, 0.26%)</title><rect x="1072.0" y="867.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.0" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (18 samples, 0.25%)</title><rect x="1072.1" y="851.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.1" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (18 samples, 0.25%)</title><rect x="1072.1" y="835.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1075.1" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1441133448.accept (18 samples, 0.25%)</title><rect x="1072.1" y="819.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1075.1" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (18 samples, 0.25%)</title><rect x="1072.1" y="803.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1075.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (12 samples, 0.16%)</title><rect x="1072.8" y="787.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.8" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/140979054.accept (10 samples, 0.14%)</title><rect x="1073.1" y="771.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1076.1" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (10 samples, 0.14%)</title><rect x="1073.1" y="755.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1076.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.04%)</title><rect x="1073.1" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.04%)</title><rect x="1073.1" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1076.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/142247393.test (7 samples, 0.10%)</title><rect x="1073.6" y="739.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (7 samples, 0.10%)</title><rect x="1073.6" y="723.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/57497692.test (5 samples, 0.07%)</title><rect x="1073.6" y="707.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (5 samples, 0.07%)</title><rect x="1073.6" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.6" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (5 samples, 0.07%)</title><rect x="1073.6" y="675.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.6" y="686.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (5 samples, 0.07%)</title><rect x="1073.6" y="659.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (5 samples, 0.07%)</title><rect x="1073.6" y="643.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1076.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.07%)</title><rect x="1073.6" y="627.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1076.6" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.07%)</title><rect x="1073.6" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.07%)</title><rect x="1073.6" y="595.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1076.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.07%)</title><rect x="1073.6" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.07%)</title><rect x="1073.6" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1076.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.03%)</title><rect x="1074.4" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1077.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (81 samples, 1.11%)</title><rect x="1075.2" y="883.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1078.2" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (80 samples, 1.10%)</title><rect x="1075.4" y="867.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1078.4" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (76 samples, 1.04%)</title><rect x="1076.0" y="851.0" width="12.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1079.0" y="862.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (46 samples, 0.63%)</title><rect x="1076.3" y="835.0" width="7.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1079.3" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.04%)</title><rect x="1077.1" y="819.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1080.1" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (3 samples, 0.04%)</title><rect x="1077.1" y="803.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1080.1" y="814.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.08%)</title><rect x="1077.6" y="819.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1080.6" y="830.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.03%)</title><rect x="1078.3" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1081.3" y="814.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.03%)</title><rect x="1078.6" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1081.6" y="830.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (9 samples, 0.12%)</title><rect x="1079.7" y="819.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1082.7" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.07%)</title><rect x="1080.1" y="803.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1083.1" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.04%)</title><rect x="1080.1" y="787.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1083.1" y="798.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="1080.5" y="787.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1083.5" y="798.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.03%)</title><rect x="1080.9" y="803.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1083.9" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (16 samples, 0.22%)</title><rect x="1081.2" y="819.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1084.2" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (6 samples, 0.08%)</title><rect x="1082.2" y="803.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1085.2" y="814.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.04%)</title><rect x="1082.7" y="787.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1085.7" y="798.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.05%)</title><rect x="1083.1" y="803.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1086.1" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="1083.5" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1086.5" y="798.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="1083.5" y="771.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1086.5" y="782.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (24 samples, 0.33%)</title><rect x="1084.1" y="835.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1087.1" y="846.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (22 samples, 0.30%)</title><rect x="1084.4" y="819.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1087.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.10%)</title><rect x="1084.6" y="803.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1087.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.10%)</title><rect x="1084.6" y="787.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1087.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.10%)</title><rect x="1084.6" y="771.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1087.6" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="1085.2" y="755.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1088.2" y="766.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (14 samples, 0.19%)</title><rect x="1085.7" y="803.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.7" y="814.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (6 samples, 0.08%)</title><rect x="1086.1" y="787.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1089.1" y="798.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.08%)</title><rect x="1086.1" y="771.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.1" y="782.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.07%)</title><rect x="1086.2" y="755.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1089.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.07%)</title><rect x="1086.2" y="739.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.2" y="750.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.07%)</title><rect x="1087.0" y="787.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.07%)</title><rect x="1087.0" y="771.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="1087.5" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1090.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="1087.5" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.5" y="750.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.03%)</title><rect x="1088.0" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1091.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.03%)</title><rect x="1088.3" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1091.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (18 samples, 0.25%)</title><rect x="1088.8" y="899.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1091.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (12 samples, 0.16%)</title><rect x="1089.8" y="883.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1092.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (11 samples, 0.15%)</title><rect x="1089.9" y="867.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.9" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (4 samples, 0.05%)</title><rect x="1089.9" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.9" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (4 samples, 0.05%)</title><rect x="1089.9" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.9" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (4 samples, 0.05%)</title><rect x="1089.9" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (3 samples, 0.04%)</title><rect x="1090.1" y="803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1093.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (3 samples, 0.04%)</title><rect x="1090.1" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.1" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (4 samples, 0.05%)</title><rect x="1090.6" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.6" y="862.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="1091.4" y="851.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1094.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (81 samples, 1.11%)</title><rect x="1091.7" y="899.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1094.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (75 samples, 1.03%)</title><rect x="1091.7" y="883.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1094.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (74 samples, 1.02%)</title><rect x="1091.9" y="867.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1094.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (74 samples, 1.02%)</title><rect x="1091.9" y="851.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1094.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (70 samples, 0.96%)</title><rect x="1092.2" y="835.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1095.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.04%)</title><rect x="1092.4" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.04%)</title><rect x="1092.4" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.04%)</title><rect x="1092.4" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (66 samples, 0.91%)</title><rect x="1092.9" y="819.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1095.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (66 samples, 0.91%)</title><rect x="1092.9" y="803.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1095.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (66 samples, 0.91%)</title><rect x="1092.9" y="787.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (65 samples, 0.89%)</title><rect x="1093.0" y="771.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1096.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (65 samples, 0.89%)</title><rect x="1093.0" y="755.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.0" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.19%)</title><rect x="1093.2" y="739.0" width="2.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1096.2" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="1093.7" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1096.7" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (7 samples, 0.10%)</title><rect x="1094.0" y="723.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1097.0" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="1095.4" y="739.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1098.4" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (48 samples, 0.66%)</title><rect x="1095.8" y="739.0" width="7.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1098.8" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.52%)</title><rect x="1097.4" y="723.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1100.4" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.52%)</title><rect x="1097.4" y="707.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1100.4" y="718.0"></text>
</g>
<g>
<title>sys_futex (31 samples, 0.43%)</title><rect x="1098.5" y="691.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1101.5" y="702.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.43%)</title><rect x="1098.5" y="675.0" width="5.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1101.5" y="686.0"></text>
</g>
<g>
<title>futex_wake (28 samples, 0.38%)</title><rect x="1098.5" y="659.0" width="4.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1101.5" y="670.0"></text>
</g>
<g>
<title>wake_up_q (24 samples, 0.33%)</title><rect x="1099.2" y="643.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1102.2" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (23 samples, 0.32%)</title><rect x="1099.3" y="627.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1102.3" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.30%)</title><rect x="1099.5" y="611.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1102.5" y="622.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.04%)</title><rect x="1103.1" y="659.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1106.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="1103.5" y="835.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="1103.5" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1106.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (6 samples, 0.08%)</title><rect x="1103.9" y="883.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1106.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.08%)</title><rect x="1103.9" y="867.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="1104.5" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1107.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.create (118 samples, 1.62%)</title><rect x="1104.8" y="963.0" width="19.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1107.8" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.get (103 samples, 1.41%)</title><rect x="1106.5" y="947.0" width="16.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1109.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (21 samples, 0.29%)</title><rect x="1106.5" y="931.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1109.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (21 samples, 0.29%)</title><rect x="1106.5" y="915.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1109.5" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (19 samples, 0.26%)</title><rect x="1106.8" y="899.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1109.8" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (19 samples, 0.26%)</title><rect x="1106.8" y="883.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1109.8" y="894.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="1107.3" y="867.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1110.3" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (14 samples, 0.19%)</title><rect x="1107.6" y="867.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1110.6" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1441133448.accept (12 samples, 0.16%)</title><rect x="1107.7" y="851.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.7" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.16%)</title><rect x="1107.7" y="835.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1110.7" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.03%)</title><rect x="1108.2" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.2" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 0.08%)</title><rect x="1108.6" y="819.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.6" y="830.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="1108.6" y="803.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1111.6" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/140979054.accept (3 samples, 0.04%)</title><rect x="1108.9" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1111.9" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.04%)</title><rect x="1108.9" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1111.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/57497692.test (2 samples, 0.03%)</title><rect x="1109.0" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1112.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.03%)</title><rect x="1109.0" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1112.0" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.03%)</title><rect x="1109.0" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1112.0" y="750.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.03%)</title><rect x="1109.0" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1112.0" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.03%)</title><rect x="1109.0" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1112.0" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="1109.0" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1112.0" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.03%)</title><rect x="1109.0" y="675.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1112.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Address.toString (5 samples, 0.07%)</title><rect x="1109.9" y="931.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1112.9" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1758386724.linkToTargetMethod (5 samples, 0.07%)</title><rect x="1109.9" y="915.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1112.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/615634843.invoke (5 samples, 0.07%)</title><rect x="1109.9" y="899.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1112.9" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="1109.9" y="883.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1112.9" y="894.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (4 samples, 0.05%)</title><rect x="1110.0" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1113.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (4 samples, 0.05%)</title><rect x="1110.0" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1113.0" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="1110.3" y="835.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1113.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.defaultBuilder (77 samples, 1.06%)</title><rect x="1110.7" y="931.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1113.7" y="942.0"></text>
</g>
<g>
<title>java/net/URI.create (55 samples, 0.75%)</title><rect x="1110.7" y="915.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.7" y="926.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (55 samples, 0.75%)</title><rect x="1110.7" y="899.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1113.7" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (48 samples, 0.66%)</title><rect x="1111.3" y="883.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1114.3" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.04%)</title><rect x="1112.0" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1115.0" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.04%)</title><rect x="1112.0" y="851.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1115.0" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (39 samples, 0.54%)</title><rect x="1112.4" y="867.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.4" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (8 samples, 0.11%)</title><rect x="1112.4" y="851.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1115.4" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.11%)</title><rect x="1112.4" y="835.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1115.4" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (31 samples, 0.43%)</title><rect x="1113.7" y="851.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1116.7" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (17 samples, 0.23%)</title><rect x="1114.2" y="835.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.2" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (7 samples, 0.10%)</title><rect x="1114.4" y="819.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1117.4" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.10%)</title><rect x="1114.4" y="803.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.4" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="1115.0" y="787.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1118.0" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (4 samples, 0.05%)</title><rect x="1115.5" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.5" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.05%)</title><rect x="1115.5" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.5" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (5 samples, 0.07%)</title><rect x="1116.2" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1119.2" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (5 samples, 0.07%)</title><rect x="1116.2" y="803.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.2" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.07%)</title><rect x="1116.2" y="787.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.03%)</title><rect x="1116.7" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.7" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (11 samples, 0.15%)</title><rect x="1117.0" y="835.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1120.0" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="1119.1" y="883.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1122.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (17 samples, 0.23%)</title><rect x="1119.6" y="915.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.03%)</title><rect x="1119.9" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (13 samples, 0.18%)</title><rect x="1120.2" y="899.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (13 samples, 0.18%)</title><rect x="1120.2" y="883.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (11 samples, 0.15%)</title><rect x="1120.2" y="867.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/57497692.test (6 samples, 0.08%)</title><rect x="1120.2" y="851.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1123.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (6 samples, 0.08%)</title><rect x="1120.2" y="835.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1123.2" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (6 samples, 0.08%)</title><rect x="1120.2" y="819.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1123.2" y="830.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (6 samples, 0.08%)</title><rect x="1120.2" y="803.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1123.2" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (4 samples, 0.05%)</title><rect x="1120.2" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.05%)</title><rect x="1120.2" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1123.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.05%)</title><rect x="1120.2" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1123.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="1120.4" y="739.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1123.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="1120.4" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="1120.4" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="1120.9" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1123.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (3 samples, 0.04%)</title><rect x="1121.2" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1124.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (2 samples, 0.03%)</title><rect x="1121.7" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (2 samples, 0.03%)</title><rect x="1122.0" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1125.0" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="1122.0" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1125.0" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="1122.0" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.0" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="1122.0" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.0" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="1122.0" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.0" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="1122.0" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (4 samples, 0.05%)</title><rect x="1122.3" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (4 samples, 0.05%)</title><rect x="1122.3" y="899.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (4 samples, 0.05%)</title><rect x="1122.3" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.05%)</title><rect x="1122.3" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.3" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (2 samples, 0.03%)</title><rect x="1122.6" y="851.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.put (5 samples, 0.07%)</title><rect x="1123.1" y="947.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.defaultBuilder (5 samples, 0.07%)</title><rect x="1123.1" y="931.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.1" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="1123.1" y="915.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1126.1" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2098902589.invoke (2 samples, 0.03%)</title><rect x="1123.1" y="899.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.1" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/510842779.invoke (2 samples, 0.03%)</title><rect x="1123.1" y="883.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.1" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="1123.1" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1126.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.03%)</title><rect x="1123.1" y="851.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1126.1" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (3 samples, 0.04%)</title><rect x="1123.5" y="915.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1126.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1123.5" y="899.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1123.5" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1126.5" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1123.5" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.5" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractMap.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1123.5" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.&lt;init&gt; (7 samples, 0.10%)</title><rect x="1124.1" y="979.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1127.1" y="990.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (7 samples, 0.10%)</title><rect x="1124.1" y="963.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.1" y="974.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (5 samples, 0.07%)</title><rect x="1124.1" y="947.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1127.1" y="958.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (5 samples, 0.07%)</title><rect x="1124.1" y="931.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.1" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="1124.1" y="915.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.1" y="926.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="1124.1" y="899.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.1" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="1124.1" y="883.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1127.1" y="894.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.limit (5 samples, 0.07%)</title><rect x="1124.1" y="867.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.1" y="878.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.limit (5 samples, 0.07%)</title><rect x="1124.1" y="851.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders.decoderFor (2 samples, 0.03%)</title><rect x="1124.9" y="947.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.9" y="958.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders$Cache.forName (2 samples, 0.03%)</title><rect x="1124.9" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.9" y="942.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="1124.9" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1127.9" y="926.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="1124.9" y="899.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.9" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.03%)</title><rect x="1124.9" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/HttpRequestCreator.get (2 samples, 0.03%)</title><rect x="1124.9" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1127.9" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Ring.primaryFor (12 samples, 0.16%)</title><rect x="1125.2" y="979.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1128.2" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.08%)</title><rect x="1125.6" y="963.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.6" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.08%)</title><rect x="1125.6" y="947.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="1126.2" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.2" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Ring.binSearch (4 samples, 0.05%)</title><rect x="1126.5" y="963.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.5" y="974.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Decoder.decodeArrayLoop (2 samples, 0.03%)</title><rect x="1126.9" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1129.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/Replicas.parse (6 samples, 0.08%)</title><rect x="1127.2" y="995.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.07%)</title><rect x="1127.2" y="979.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.2" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shkalev/ServiceUtils.isProxied (11 samples, 0.15%)</title><rect x="1128.2" y="995.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1131.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.15%)</title><rect x="1128.2" y="979.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.11%)</title><rect x="1128.6" y="963.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.6" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.11%)</title><rect x="1128.6" y="947.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.6" y="958.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (23 samples, 0.32%)</title><rect x="1129.9" y="1027.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.9" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.get (23 samples, 0.32%)</title><rect x="1129.9" y="1011.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1132.9" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.07%)</title><rect x="1129.9" y="995.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1132.9" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (18 samples, 0.25%)</title><rect x="1130.7" y="995.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (18 samples, 0.25%)</title><rect x="1130.7" y="979.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1133.7" y="990.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (5 samples, 0.07%)</title><rect x="1130.9" y="963.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.9" y="974.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.07%)</title><rect x="1131.7" y="963.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1134.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (7 samples, 0.10%)</title><rect x="1132.5" y="963.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1135.5" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (63 samples, 0.86%)</title><rect x="1133.7" y="1059.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1136.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (16 samples, 0.22%)</title><rect x="1140.8" y="1043.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (16 samples, 0.22%)</title><rect x="1140.8" y="1027.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (16 samples, 0.22%)</title><rect x="1140.8" y="1011.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (16 samples, 0.22%)</title><rect x="1140.8" y="995.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.03%)</title><rect x="1143.0" y="979.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.0" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.04%)</title><rect x="1143.4" y="1043.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1146.4" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.04%)</title><rect x="1143.9" y="1059.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.04%)</title><rect x="1143.9" y="1043.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1146.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="1144.0" y="1027.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.15%)</title><rect x="1144.3" y="1059.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1147.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.07%)</title><rect x="1145.3" y="1043.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1148.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.07%)</title><rect x="1145.3" y="1027.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.11%)</title><rect x="1146.1" y="1059.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.11%)</title><rect x="1146.1" y="1043.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.1" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (150 samples, 2.06%)</title><rect x="1147.6" y="1075.0" width="24.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1150.6" y="1086.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (144 samples, 1.98%)</title><rect x="1148.1" y="1059.0" width="23.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1151.1" y="1070.0">o..</text>
</g>
<g>
<title>[unknown] (35 samples, 0.48%)</title><rect x="1149.5" y="1043.0" width="5.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1152.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.48%)</title><rect x="1149.5" y="1027.0" width="5.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1152.5" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (29 samples, 0.40%)</title><rect x="1149.5" y="1011.0" width="4.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1152.5" y="1022.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (5 samples, 0.07%)</title><rect x="1150.5" y="995.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1153.5" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (15 samples, 0.21%)</title><rect x="1151.5" y="995.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1154.5" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.03%)</title><rect x="1152.1" y="979.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.1" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.03%)</title><rect x="1152.4" y="979.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.4" y="990.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.10%)</title><rect x="1152.8" y="979.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1155.8" y="990.0"></text>
</g>
<g>
<title>jni_ThrowNew (2 samples, 0.03%)</title><rect x="1153.9" y="995.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1156.9" y="1006.0"></text>
</g>
<g>
<title>Exceptions::_throw_msg(Thread*, char const*, int, Symbol*, char const*, Handle, Handle) (2 samples, 0.03%)</title><rect x="1153.9" y="979.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.9" y="990.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.07%)</title><rect x="1154.2" y="1011.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1157.2" y="1022.0"></text>
</g>
<g>
<title>recv (99 samples, 1.36%)</title><rect x="1155.4" y="1043.0" width="16.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1158.4" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (81 samples, 1.11%)</title><rect x="1158.3" y="1027.0" width="13.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1161.3" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (79 samples, 1.08%)</title><rect x="1158.3" y="1011.0" width="12.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1161.3" y="1022.0"></text>
</g>
<g>
<title>SYSC_recvfrom (5 samples, 0.07%)</title><rect x="1159.2" y="995.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1162.2" y="1006.0"></text>
</g>
<g>
<title>sys_recvfrom (68 samples, 0.93%)</title><rect x="1160.0" y="995.0" width="11.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1163.0" y="1006.0"></text>
</g>
<g>
<title>SYSC_recvfrom (67 samples, 0.92%)</title><rect x="1160.0" y="979.0" width="10.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1163.0" y="990.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="1160.2" y="963.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.2" y="974.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.03%)</title><rect x="1160.5" y="963.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1163.5" y="974.0"></text>
</g>
<g>
<title>sock_recvmsg (54 samples, 0.74%)</title><rect x="1160.9" y="963.0" width="8.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1163.9" y="974.0"></text>
</g>
<g>
<title>inet_recvmsg (51 samples, 0.70%)</title><rect x="1161.0" y="947.0" width="8.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1164.0" y="958.0"></text>
</g>
<g>
<title>tcp_recvmsg (48 samples, 0.66%)</title><rect x="1161.5" y="931.0" width="7.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1164.5" y="942.0"></text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.16%)</title><rect x="1163.0" y="915.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1166.0" y="926.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1163.0" y="899.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1166.0" y="910.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.12%)</title><rect x="1163.3" y="899.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1166.3" y="910.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.04%)</title><rect x="1163.8" y="883.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1166.8" y="894.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="1164.3" y="883.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1167.3" y="894.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="1165.2" y="915.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1168.2" y="926.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="1165.7" y="915.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1168.7" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1165.7" y="899.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1168.7" y="910.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.12%)</title><rect x="1166.2" y="915.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1169.2" y="926.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.07%)</title><rect x="1166.4" y="899.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1169.4" y="910.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="1166.8" y="883.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1169.8" y="894.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.03%)</title><rect x="1167.3" y="899.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1170.3" y="910.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (8 samples, 0.11%)</title><rect x="1167.7" y="915.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1170.7" y="926.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="1169.0" y="915.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1172.0" y="926.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.03%)</title><rect x="1169.3" y="947.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1172.3" y="958.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="1169.3" y="931.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1172.3" y="942.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="1169.3" y="915.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1172.3" y="926.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.11%)</title><rect x="1169.6" y="963.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1172.6" y="974.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.07%)</title><rect x="1169.6" y="947.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1172.6" y="958.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.07%)</title><rect x="1169.6" y="931.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1172.6" y="942.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.07%)</title><rect x="1169.6" y="915.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1172.6" y="926.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="1170.4" y="947.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1173.4" y="958.0"></text>
</g>
<g>
<title>sys_recvfrom (2 samples, 0.03%)</title><rect x="1171.1" y="1011.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1174.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (3 samples, 0.04%)</title><rect x="1171.4" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1174.4" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="1171.9" y="1091.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.9" y="1102.0"></text>
</g>
<g>
<title>start_thread (107 samples, 1.47%)</title><rect x="1172.7" y="1123.0" width="17.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1175.7" y="1134.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (107 samples, 1.47%)</title><rect x="1172.7" y="1107.0" width="17.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1175.7" y="1118.0"></text>
</g>
<g>
<title>Thread::call_run() (107 samples, 1.47%)</title><rect x="1172.7" y="1091.0" width="17.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.7" y="1102.0"></text>
</g>
<g>
<title>GangWorker::loop() (36 samples, 0.49%)</title><rect x="1172.8" y="1075.0" width="5.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.8" y="1086.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (34 samples, 0.47%)</title><rect x="1173.0" y="1059.0" width="5.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.0" y="1070.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.04%)</title><rect x="1173.0" y="1043.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.0" y="1054.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (3 samples, 0.04%)</title><rect x="1173.0" y="1027.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.0" y="1038.0"></text>
</g>
<g>
<title>void G1ParScanThreadState::do_oop_evac&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.03%)</title><rect x="1173.0" y="1011.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.0" y="1022.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (30 samples, 0.41%)</title><rect x="1173.5" y="1043.0" width="4.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.5" y="1054.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (30 samples, 0.41%)</title><rect x="1173.5" y="1027.0" width="4.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.5" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (30 samples, 0.41%)</title><rect x="1173.5" y="1011.0" width="4.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.5" y="1022.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (30 samples, 0.41%)</title><rect x="1173.5" y="995.0" width="4.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.5" y="1006.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (29 samples, 0.40%)</title><rect x="1173.5" y="979.0" width="4.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.5" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (15 samples, 0.21%)</title><rect x="1173.5" y="963.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.5" y="974.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.07%)</title><rect x="1174.1" y="947.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.1" y="958.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (6 samples, 0.08%)</title><rect x="1174.9" y="947.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1177.9" y="958.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (14 samples, 0.19%)</title><rect x="1175.9" y="963.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.9" y="974.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.03%)</title><rect x="1176.2" y="947.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.2" y="958.0"></text>
</g>
<g>
<title>G1ContiguousSpace::block_start(void const*) (3 samples, 0.04%)</title><rect x="1176.6" y="947.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.6" y="958.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (5 samples, 0.07%)</title><rect x="1177.4" y="947.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.4" y="958.0"></text>
</g>
<g>
<title>JavaThread::run() (69 samples, 0.95%)</title><rect x="1178.7" y="1075.0" width="11.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.7" y="1086.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (69 samples, 0.95%)</title><rect x="1178.7" y="1059.0" width="11.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.7" y="1070.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (68 samples, 0.93%)</title><rect x="1178.7" y="1043.0" width="11.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.7" y="1054.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (68 samples, 0.93%)</title><rect x="1178.7" y="1027.0" width="11.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.7" y="1038.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (66 samples, 0.91%)</title><rect x="1178.7" y="1011.0" width="10.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.7" y="1022.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (66 samples, 0.91%)</title><rect x="1178.7" y="995.0" width="10.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.7" y="1006.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (38 samples, 0.52%)</title><rect x="1178.7" y="979.0" width="6.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.7" y="990.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.04%)</title><rect x="1178.8" y="963.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.8" y="974.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.04%)</title><rect x="1178.8" y="947.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.8" y="958.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.03%)</title><rect x="1179.0" y="931.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.0" y="942.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.03%)</title><rect x="1179.0" y="915.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1182.0" y="926.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.03%)</title><rect x="1179.0" y="899.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.0" y="910.0"></text>
</g>
<g>
<title>Matcher::ReduceOper(State*, int, Node*&amp;, MachNode*) (2 samples, 0.03%)</title><rect x="1179.0" y="883.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.0" y="894.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (4 samples, 0.05%)</title><rect x="1179.3" y="963.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.3" y="974.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (4 samples, 0.05%)</title><rect x="1179.3" y="947.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.3" y="958.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.03%)</title><rect x="1179.6" y="931.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.6" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (30 samples, 0.41%)</title><rect x="1180.0" y="963.0" width="4.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.0" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.03%)</title><rect x="1180.4" y="947.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.4" y="958.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.03%)</title><rect x="1180.4" y="931.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.4" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (3 samples, 0.04%)</title><rect x="1180.8" y="947.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.8" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (7 samples, 0.10%)</title><rect x="1181.3" y="947.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.3" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.03%)</title><rect x="1181.9" y="931.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.9" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (2 samples, 0.03%)</title><rect x="1182.6" y="947.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.6" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (4 samples, 0.05%)</title><rect x="1182.9" y="947.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.9" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.03%)</title><rect x="1183.2" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.2" y="942.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (2 samples, 0.03%)</title><rect x="1183.7" y="947.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.7" y="958.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (5 samples, 0.07%)</title><rect x="1184.0" y="947.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.0" y="958.0"></text>
</g>
<g>
<title>Compile::Optimize() (23 samples, 0.32%)</title><rect x="1184.8" y="979.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.8" y="990.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (2 samples, 0.03%)</title><rect x="1185.0" y="963.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.0" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (16 samples, 0.22%)</title><rect x="1185.3" y="963.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.3" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.04%)</title><rect x="1185.3" y="947.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.3" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (10 samples, 0.14%)</title><rect x="1185.8" y="947.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.8" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (9 samples, 0.12%)</title><rect x="1186.0" y="931.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.0" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (9 samples, 0.12%)</title><rect x="1186.0" y="915.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.0" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (2 samples, 0.03%)</title><rect x="1186.3" y="899.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.3" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (4 samples, 0.05%)</title><rect x="1186.8" y="899.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.8" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.03%)</title><rect x="1187.4" y="947.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.4" y="958.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.04%)</title><rect x="1188.1" y="963.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.1" y="974.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.03%)</title><rect x="1188.2" y="947.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.2" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.07%)</title><rect x="1188.5" y="979.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.5" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.07%)</title><rect x="1188.5" y="963.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.07%)</title><rect x="1188.5" y="947.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.5" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.07%)</title><rect x="1188.5" y="931.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.5" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.07%)</title><rect x="1188.5" y="915.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.07%)</title><rect x="1188.5" y="899.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.5" y="910.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1188.9" y="883.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.9" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1188.9" y="867.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.9" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1188.9" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.9" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1188.9" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1188.9" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.9" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1188.9" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1188.9" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.9" y="798.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.03%)</title><rect x="1189.4" y="1011.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="1022.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (2 samples, 0.03%)</title><rect x="1189.4" y="995.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="1006.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.03%)</title><rect x="1189.4" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.4" y="990.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.03%)</title><rect x="1189.4" y="963.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.4" y="974.0"></text>
</g>
</g>
</svg>
